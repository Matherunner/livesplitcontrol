{"version":3,"sources":["../webpack/bootstrap 9799ba4ecbbe521486e3","../node_modules/react/index.js","Constants.ts","../node_modules/object-assign/index.js","../node_modules/promise/lib/core.js","../node_modules/webpack/buildin/global.js","../node_modules/fbjs/lib/invariant.js","../node_modules/fbjs/lib/emptyObject.js","../node_modules/fbjs/lib/emptyFunction.js","livesplit.ts","../config/polyfills.js","../node_modules/promise/lib/rejection-tracking.js","../node_modules/asap/browser-raw.js","../node_modules/promise/lib/es6-extensions.js","../node_modules/whatwg-fetch/fetch.js","index.tsx","../node_modules/react/cjs/react.production.min.js","../node_modules/react-dom/index.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/fbjs/lib/ExecutionEnvironment.js","../node_modules/fbjs/lib/getActiveElement.js","../node_modules/fbjs/lib/shallowEqual.js","../node_modules/fbjs/lib/containsNode.js","../node_modules/fbjs/lib/isTextNode.js","../node_modules/fbjs/lib/isNode.js","App.tsx","assets/livesplit_core.wasm","Controller.tsx","AutoRefreshTimer.tsx","AutoIntervalUpdate.tsx","Login.tsx","TimerWrapper.ts","registerServiceWorker.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","phase","TimerPhase","NOT_RUNNING","RUNNING","ENDED","PAUSED","state","CoreState","NOT_LOADED","LOADING","LOADED","FAILED","status","Connection","PENDING_INPUT","CONNECTING","AUTHENTICATING","CONNECTED","WRONG_PASSWORD","CANNOT_CONNECT","Commands","DEFAULT_WEBSOCKS_URL","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","map","join","test3","split","forEach","letter","keys","err","shouldUseNative","target","source","from","symbols","to","val","undefined","TypeError","toObject","arguments","length","key","asap","noop","LAST_ERROR","IS_ERROR","Promise","fn","this","_75","_83","_18","_38","doResolve","handle","self","deferred","_47","push","cb","onFulfilled","onRejected","ret","a","ex","tryCallOne","reject","promise","resolve","handleResolved","newValue","then","obj","getThen","finale","bind","_71","Handler","done","res","b","tryCallTwo","value","reason","_44","constructor","safeThen","g","Function","eval","e","window","validateFormat","format","condition","f","error","Error","args","argIndex","replace","framesToPop","emptyObject","makeEmptyFunction","arg","emptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","path","imports","env","Instant_now","performance","now","Date_now","ptr","date","Date","milliseconds","valueOf","seconds","secondsHigh","secondsLow","nanos","u32Slice","Uint32Array","instance","memory","buffer","HotkeyHook_new","listener","ev","_a","allocString","code","len","HotkeyHook_callback","dealloc","addEventListener","handleMap","set","HotkeyHook_drop","removeEventListener","delete","request","fetch","WebAssembly","instantiateStreaming","wasm","_b","sent","arrayBuffer","bytes","instantiate","encodeUtf8","decodeUtf8","TimingMethod","Map","global","encoder_1","TextEncoder","str","encode","utf8","charcode","charCodeAt","Uint8Array","decoder_1","TextDecoder","data","decode","charCode","allocInt8Array","src","alloc","stringBuffer","slice","decodeString","end","_super","Analysis","__extends","with","closure","dispose","calculateSumOfBest","run","simpleCalculation","useCurrentRun","method","result","TimeSpan","Analysis_calculate_sum_of_best","calculateTotalPlaytimeForRun","Analysis_calculate_total_playtime_for_run","calculateTotalPlaytimeForTimer","timer","Analysis_calculate_total_playtime_for_timer","AnalysisRefMut","AtomicDateTime","AtomicDateTime_drop","AtomicDateTimeRefMut","AtomicDateTimeRef","isSynchronized","AtomicDateTime_is_synchronized","toRfc2822","AtomicDateTime_to_rfc2822","toRfc3339","AtomicDateTime_to_rfc3339","AttemptRef","index","Attempt_index","time","TimeRef","Attempt_time","pauseTime","TimeSpanRef","Attempt_pause_time","started","Attempt_started","ended","Attempt_ended","BlankSpaceComponentState","Attempt","AttemptRefMut","BlankSpaceComponent","BlankSpaceComponent_drop","new","BlankSpaceComponent_new","intoGeneric","Component","BlankSpaceComponent_into_generic","BlankSpaceComponentRefMut","stateAsJson","BlankSpaceComponent_state_as_json","JSON","parse","BlankSpaceComponent_state","BlankSpaceComponentState_drop","BlankSpaceComponentStateRefMut","BlankSpaceComponentStateRef","height","BlankSpaceComponentState_height","Component_drop","ComponentRefMut","CurrentComparisonComponentState","CurrentComparisonComponent","CurrentComparisonComponent_drop","CurrentComparisonComponent_new","CurrentComparisonComponent_into_generic","CurrentComparisonComponentRefMut","CurrentComparisonComponent_state_as_json","CurrentComparisonComponent_state","CurrentComparisonComponentState_drop","CurrentComparisonComponentStateRefMut","CurrentComparisonComponentStateRef","text","CurrentComparisonComponentState_text","comparison","CurrentComparisonComponentState_comparison","CurrentPaceComponentState","CurrentPaceComponent","CurrentPaceComponent_drop","CurrentPaceComponent_new","CurrentPaceComponent_into_generic","CurrentPaceComponentRefMut","CurrentPaceComponent_state_as_json","CurrentPaceComponent_state","CurrentPaceComponentState_drop","CurrentPaceComponentStateRefMut","CurrentPaceComponentStateRef","CurrentPaceComponentState_text","CurrentPaceComponentState_time","DeltaComponentState","DeltaComponent","DeltaComponent_drop","DeltaComponent_new","DeltaComponent_into_generic","DeltaComponentRefMut","layoutSettings","DeltaComponent_state_as_json","DeltaComponent_state","DeltaComponentState_drop","DeltaComponentStateRefMut","DeltaComponentStateRef","DeltaComponentState_text","DeltaComponentState_time","semanticColor","DeltaComponentState_semantic_color","DetailedTimerComponentState","DetailedTimerComponent","DetailedTimerComponent_drop","DetailedTimerComponent_new","DetailedTimerComponent_into_generic","DetailedTimerComponentRefMut","DetailedTimerComponent_state_as_json","DetailedTimerComponent_state","DetailedTimerComponentState_drop","DetailedTimerComponentStateRefMut","DetailedTimerComponentStateRef","timerTime","DetailedTimerComponentState_timer_time","timerFraction","DetailedTimerComponentState_timer_fraction","timerSemanticColor","DetailedTimerComponentState_timer_semantic_color","segmentTimerTime","DetailedTimerComponentState_segment_timer_time","segmentTimerFraction","DetailedTimerComponentState_segment_timer_fraction","comparison1Visible","DetailedTimerComponentState_comparison1_visible","comparison1Name","DetailedTimerComponentState_comparison1_name","comparison1Time","DetailedTimerComponentState_comparison1_time","comparison2Visible","DetailedTimerComponentState_comparison2_visible","comparison2Name","DetailedTimerComponentState_comparison2_name","comparison2Time","DetailedTimerComponentState_comparison2_time","iconChange","DetailedTimerComponentState_icon_change","segmentName","DetailedTimerComponentState_segment_name","GraphComponentState","FuzzyList","FuzzyList_drop","FuzzyList_new","FuzzyListRefMut","text_allocated","FuzzyList_push","FuzzyListRef","search","pattern","max","pattern_allocated","FuzzyList_search","GeneralLayoutSettings","GeneralLayoutSettings_drop","default","GeneralLayoutSettings_default","GeneralLayoutSettingsRefMut","GraphComponent","GraphComponent_drop","GraphComponent_new","GraphComponent_into_generic","GraphComponentRefMut","GraphComponentRef","GraphComponent_state_as_json","GraphComponent_state","GraphComponentState_drop","GraphComponentStateRefMut","GraphComponentStateRef","pointsLen","GraphComponentState_points_len","pointX","GraphComponentState_point_x","pointY","GraphComponentState_point_y","pointIsBestSegment","GraphComponentState_point_is_best_segment","horizontalGridLinesLen","GraphComponentState_horizontal_grid_lines_len","horizontalGridLine","GraphComponentState_horizontal_grid_line","verticalGridLinesLen","GraphComponentState_vertical_grid_lines_len","verticalGridLine","GraphComponentState_vertical_grid_line","middle","GraphComponentState_middle","isLiveDeltaActive","GraphComponentState_is_live_delta_active","isFlipped","GraphComponentState_is_flipped","Layout","HotkeySystem","HotkeySystem_drop","sharedTimer","HotkeySystem_new","HotkeySystemRefMut","HotkeySystemRef","deactivate","HotkeySystem_deactivate","activate","HotkeySystem_activate","Layout_drop","Layout_new","defaultLayout","Layout_default_layout","parseJson","settings","settings_allocated","stringify","Layout_parse_json","LayoutRefMut","Layout_state_as_json","component","Layout_push","scrollUp","Layout_scroll_up","scrollDown","Layout_scroll_down","remount","Layout_remount","LayoutRef","clone","Layout_clone","settingsAsJson","Layout_settings_as_json","ParseRunResult","LayoutEditor","layout","LayoutEditor_new","close","LayoutEditor_close","LayoutEditorRefMut","layoutStateAsJson","LayoutEditor_layout_state_as_json","select","LayoutEditor_select","addComponent","LayoutEditor_add_component","removeComponent","LayoutEditor_remove_component","moveComponentUp","LayoutEditor_move_component_up","moveComponentDown","LayoutEditor_move_component_down","moveComponent","dstIndex","LayoutEditor_move_component","duplicateComponent","LayoutEditor_duplicate_component","setComponentSettingsValue","LayoutEditor_set_component_settings_value","setGeneralSettingsValue","LayoutEditor_set_general_settings_value","LayoutEditorRef","LayoutEditor_state_as_json","ParseRunResult_drop","unwrap","Run","ParseRunResult_unwrap","ParseRunResultRefMut","ParseRunResultRef","parsedSuccessfully","ParseRunResult_parsed_successfully","timerKind","ParseRunResult_timer_kind","PossibleTimeSaveComponentState","PossibleTimeSaveComponent","PossibleTimeSaveComponent_drop","PossibleTimeSaveComponent_new","PossibleTimeSaveComponent_into_generic","PossibleTimeSaveComponentRefMut","PossibleTimeSaveComponentRef","PossibleTimeSaveComponent_state_as_json","PossibleTimeSaveComponent_state","PossibleTimeSaveComponentState_drop","PossibleTimeSaveComponentStateRefMut","PossibleTimeSaveComponentStateRef","PossibleTimeSaveComponentState_text","PossibleTimeSaveComponentState_time","PotentialCleanUp","PotentialCleanUp_drop","PotentialCleanUpRefMut","PotentialCleanUpRef","message","PotentialCleanUp_message","PreviousSegmentComponentState","PreviousSegmentComponent","PreviousSegmentComponent_drop","PreviousSegmentComponent_new","PreviousSegmentComponent_into_generic","PreviousSegmentComponentRefMut","PreviousSegmentComponentRef","PreviousSegmentComponent_state_as_json","PreviousSegmentComponent_state","PreviousSegmentComponentState_drop","PreviousSegmentComponentStateRefMut","PreviousSegmentComponentStateRef","PreviousSegmentComponentState_text","PreviousSegmentComponentState_time","PreviousSegmentComponentState_semantic_color","RunRef","Run_clone","gameName","Run_game_name","gameIcon","Run_game_icon","categoryName","Run_category_name","extendedFileName","useExtendedCategoryName","Run_extended_file_name","extendedName","Run_extended_name","extendedCategoryName","showRegion","showPlatform","showVariables","Run_extended_category_name","attemptCount","Run_attempt_count","metadata","RunMetadataRef","Run_metadata","offset","Run_offset","Run_len","hasBeenModified","Run_has_been_modified","segment","SegmentRef","Run_segment","attemptHistoryLen","Run_attempt_history_len","attemptHistoryIndex","Run_attempt_history_index","saveAsLss","Run_save_as_lss","customComparisonsLen","Run_custom_comparisons_len","customComparison","Run_custom_comparison","autoSplitterSettings","Run_auto_splitter_settings","Run_drop","Run_new","loadFiles","path_allocated","Run_parse","parseFileHandle","Run_parse_file_handle","parseArray","parseString","RunRefMut","pushSegment","Run_push_segment","setGameName","game","game_allocated","Run_set_game_name","setCategoryName","category","category_allocated","Run_set_category_name","markAsModified","Run_mark_as_modified","RunEditor","RunEditor_new","RunEditor_close","RunEditorRefMut","RunEditor_state_as_json","selectTimingMethod","RunEditor_select_timing_method","unselect","RunEditor_unselect","selectAdditionally","RunEditor_select_additionally","selectOnly","RunEditor_select_only","RunEditor_set_game_name","RunEditor_set_category_name","parseAndSetOffset","offset_allocated","RunEditor_parse_and_set_offset","parseAndSetAttemptCount","attempts","attempts_allocated","RunEditor_parse_and_set_attempt_count","setGameIcon","RunEditor_set_game_icon","removeGameIcon","RunEditor_remove_game_icon","setRunId","name_allocated","RunEditor_set_run_id","setRegionName","RunEditor_set_region_name","setPlatformName","RunEditor_set_platform_name","setEmulatorUsage","usesEmulator","RunEditor_set_emulator_usage","setVariable","value_allocated","RunEditor_set_variable","removeVariable","RunEditor_remove_variable","clearMetadata","RunEditor_clear_metadata","insertSegmentAbove","RunEditor_insert_segment_above","insertSegmentBelow","RunEditor_insert_segment_below","removeSegments","RunEditor_remove_segments","moveSegmentsUp","RunEditor_move_segments_up","moveSegmentsDown","RunEditor_move_segments_down","activeSetIcon","RunEditor_active_set_icon","activeRemoveIcon","RunEditor_active_remove_icon","activeSetName","RunEditor_active_set_name","activeParseAndSetSplitTime","time_allocated","RunEditor_active_parse_and_set_split_time","activeParseAndSetSegmentTime","RunEditor_active_parse_and_set_segment_time","activeParseAndSetBestSegmentTime","RunEditor_active_parse_and_set_best_segment_time","activeParseAndSetComparisonTime","comparison_allocated","RunEditor_active_parse_and_set_comparison_time","addComparison","RunEditor_add_comparison","importComparison","RunEditor_import_comparison","removeComparison","RunEditor_remove_comparison","renameComparison","oldName","newName","oldName_allocated","newName_allocated","RunEditor_rename_comparison","moveComparison","srcIndex","RunEditor_move_comparison","clearHistory","RunEditor_clear_history","clearTimes","RunEditor_clear_times","cleanSumOfBest","SumOfBestCleaner","RunEditor_clean_sum_of_best","setGameIconFromArray","activeSetIconFromArray","runId","RunMetadata_run_id","platformName","RunMetadata_platform_name","RunMetadata_uses_emulator","regionName","RunMetadata_region_name","variables","RunMetadataVariablesIter","RunMetadata_variables","RunMetadataVariableRef","RunMetadata","RunMetadataRefMut","RunMetadataVariable_name","RunMetadataVariable_value","RunMetadataVariable","RunMetadataVariable_drop","RunMetadataVariableRefMut","RunMetadataVariablesIter_drop","RunMetadataVariablesIterRefMut","next","RunMetadataVariablesIter_next","Segment_name","icon","Segment_icon","Segment_comparison","personalBestSplitTime","Segment_personal_best_split_time","bestSegmentTime","Segment_best_segment_time","segmentHistory","SegmentHistoryRef","Segment_segment_history","Segment","Segment_drop","Segment_new","SegmentRefMut","iter","SegmentHistoryIter","SegmentHistory_iter","SegmentHistoryElementRef","SegmentHistory","SegmentHistoryRefMut","SegmentHistoryElement_index","SegmentHistoryElement_time","SegmentHistoryElement","SegmentHistoryElementRefMut","SegmentHistoryIter_drop","SegmentHistoryIterRefMut","SegmentHistoryIter_next","SharedTimer","SeparatorComponent","SeparatorComponent_drop","SeparatorComponent_new","SeparatorComponent_into_generic","SeparatorComponentRefMut","SettingValue","SettingValue_drop","fromBool","SettingValue_from_bool","fromUint","SettingValue_from_uint","fromInt","SettingValue_from_int","fromString","SettingValue_from_string","fromOptionalString","SettingValue_from_optional_string","fromOptionalEmptyString","SettingValue_from_optional_empty_string","fromFloat","SettingValue_from_float","fromAccuracy","SettingValue_from_accuracy","fromDigitsFormat","SettingValue_from_digits_format","fromOptionalTimingMethod","SettingValue_from_optional_timing_method","fromOptionalEmptyTimingMethod","SettingValue_from_optional_empty_timing_method","fromColor","r","SettingValue_from_color","fromOptionalColor","SettingValue_from_optional_color","fromOptionalEmptyColor","SettingValue_from_optional_empty_color","fromTransparentGradient","SettingValue_from_transparent_gradient","fromVerticalGradient","r1","g1","b1","a1","r2","g2","b2","a2","SettingValue_from_vertical_gradient","fromHorizontalGradient","SettingValue_from_horizontal_gradient","fromAlignment","SettingValue_from_alignment","SettingValueRefMut","SharedTimer_drop","SharedTimerRefMut","SharedTimerRef","share","SharedTimer_share","read","TimerReadLock","SharedTimer_read","write","TimerWriteLock","SharedTimer_write","replaceInner","SharedTimer_replace_inner","readWith","action","lock","writeWith","SplitsComponentState","SplitsComponent","SplitsComponent_drop","SplitsComponent_new","SplitsComponent_into_generic","SplitsComponentRefMut","SplitsComponent_state_as_json","SplitsComponent_state","SplitsComponent_scroll_up","SplitsComponent_scroll_down","setVisualSplitCount","count","SplitsComponent_set_visual_split_count","setSplitPreviewCount","SplitsComponent_set_split_preview_count","setAlwaysShowLastSplit","alwaysShowLastSplit","SplitsComponent_set_always_show_last_split","setSeparatorLastSplit","separatorLastSplit","SplitsComponent_set_separator_last_split","SplitsComponentState_drop","SplitsComponentStateRefMut","SplitsComponentStateRef","finalSeparatorShown","SplitsComponentState_final_separator_shown","SplitsComponentState_len","iconChangeCount","SplitsComponentState_icon_change_count","iconChangeSegmentIndex","iconChangeIndex","SplitsComponentState_icon_change_segment_index","iconChangeIcon","SplitsComponentState_icon_change_icon","SplitsComponentState_name","delta","SplitsComponentState_delta","SplitsComponentState_time","SplitsComponentState_semantic_color","isCurrentSplit","SplitsComponentState_is_current_split","SumOfBestCleaner_drop","SumOfBestCleanerRefMut","nextPotentialCleanUp","SumOfBestCleaner_next_potential_clean_up","apply","cleanUp","SumOfBestCleaner_apply","SumOfBestComponentState","SumOfBestComponent","SumOfBestComponent_drop","SumOfBestComponent_new","SumOfBestComponent_into_generic","SumOfBestComponentRefMut","SumOfBestComponentRef","SumOfBestComponent_state_as_json","SumOfBestComponent_state","SumOfBestComponentState_drop","SumOfBestComponentStateRefMut","SumOfBestComponentStateRef","SumOfBestComponentState_text","SumOfBestComponentState_time","TextComponentState","TextComponent","TextComponent_drop","TextComponent_new","TextComponent_into_generic","TextComponentRefMut","setCenter","TextComponent_set_center","setLeft","TextComponent_set_left","setRight","TextComponent_set_right","TextComponentRef","TextComponent_state_as_json","TextComponent_state","TextComponentState_drop","TextComponentStateRefMut","TextComponentStateRef","left","TextComponentState_left","right","TextComponentState_right","center","TextComponentState_center","isSplit","TextComponentState_is_split","Time","Time_clone","realTime","Time_real_time","gameTime","Time_game_time","timingMethod","Time_index","Time_drop","TimeRefMut","TimeSpan_clone","totalSeconds","TimeSpan_total_seconds","TimeSpan_drop","fromSeconds","TimeSpan_from_seconds","TimeSpan_parse","TimeSpanRefMut","TimerRef","currentTimingMethod","Timer_current_timing_method","currentComparison","Timer_current_comparison","isGameTimeInitialized","Timer_is_game_time_initialized","isGameTimePaused","Timer_is_game_time_paused","loadingTimes","Timer_loading_times","currentPhase","Timer_current_phase","getRun","Timer_get_run","Timer_save_as_lss","printDebug","Timer_print_debug","currentTime","Timer_current_time","TimerRefMut","replaceRun","updateSplits","Timer_replace_run","setRun","Timer_set_run","start","Timer_start","Timer_split","splitOrStart","Timer_split_or_start","skipSplit","Timer_skip_split","undoSplit","Timer_undo_split","reset","Timer_reset","resetAndSetAttemptAsPb","Timer_reset_and_set_attempt_as_pb","pause","Timer_pause","resume","Timer_resume","togglePause","Timer_toggle_pause","togglePauseOrStart","Timer_toggle_pause_or_start","undoAllPauses","Timer_undo_all_pauses","setCurrentTimingMethod","Timer_set_current_timing_method","switchToNextComparison","Timer_switch_to_next_comparison","switchToPreviousComparison","Timer_switch_to_previous_comparison","initializeGameTime","Timer_initialize_game_time","deinitializeGameTime","Timer_deinitialize_game_time","pauseGameTime","Timer_pause_game_time","resumeGameTime","Timer_resume_game_time","setGameTime","Timer_set_game_time","setLoadingTimes","Timer_set_loading_times","markAsUnmodified","Timer_mark_as_unmodified","Timer","Timer_drop","Timer_new","intoShared","Timer_into_shared","intoRun","Timer_into_run","TimerComponent","TimerComponent_drop","TimerComponent_new","TimerComponent_into_generic","TimerComponentRefMut","TimerComponentRef","TimerComponent_state_as_json","TimerComponentState","TimerComponent_state","TimerComponentState_drop","TimerComponentStateRefMut","TimerComponentStateRef","TimerComponentState_time","fraction","TimerComponentState_fraction","TimerComponentState_semantic_color","TimerReadLock_drop","TimerReadLockRefMut","TimerReadLockRef","TimerReadLock_timer","TimerWriteLock_drop","TimerWriteLockRefMut","TimerWriteLock_timer","TitleComponentState","TitleComponent","TitleComponent_drop","TitleComponent_new","TitleComponent_into_generic","TitleComponentRefMut","TitleComponent_state_as_json","TitleComponent_state","TitleComponentState_drop","TitleComponentStateRefMut","TitleComponentStateRef","TitleComponentState_icon_change","line1","TitleComponentState_line1","line2","TitleComponentState_line2","isCentered","TitleComponentState_is_centered","showsFinishedRuns","TitleComponentState_shows_finished_runs","finishedRuns","TitleComponentState_finished_runs","showsAttempts","TitleComponentState_shows_attempts","TitleComponentState_attempts","TotalPlaytimeComponentState","TotalPlaytimeComponent","TotalPlaytimeComponent_drop","TotalPlaytimeComponent_new","TotalPlaytimeComponent_into_generic","TotalPlaytimeComponentRefMut","TotalPlaytimeComponent_state_as_json","TotalPlaytimeComponent_state","TotalPlaytimeComponentState_drop","TotalPlaytimeComponentStateRefMut","TotalPlaytimeComponentStateRef","TotalPlaytimeComponentState_text","TotalPlaytimeComponentState_time","enable","DEFAULT_WHITELIST","ReferenceError","RangeError","enabled","disable","matchWhitelist","list","some","cls","options","id","displayId","rejections","onUnhandled","allRejections","whitelist","logged","console","warn","stack","line","logError","_56","onHandled","clearTimeout","timeout","setTimeout","rawAsap","task","queue","requestFlush","capacity","flush","currentIndex","scan","newLength","toggle","observer","node","scope","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","makeRequestCallFromTimer","callback","timeoutHandle","handleTimer","intervalHandle","setInterval","clearInterval","document","createTextNode","observe","characterData","TRUE","valuePromise","FALSE","NULL","UNDEFINED","ZERO","EMPTYSTRING","all","arr","Array","remaining","race","values","support","searchParams","iterable","Symbol","blob","Blob","formData","viewClasses","isDataView","DataView","isPrototypeOf","isArrayBufferView","ArrayBuffer","isView","indexOf","toString","Headers","append","normalizeName","normalizeValue","oldValue","has","thisArg","items","iteratorFor","entries","iterator","methods","Request","body","_bodyInit","Body","Response","statusText","headers","url","response","type","redirectStatuses","redirect","location","input","init","xhr","XMLHttpRequest","onload","rawHeaders","getAllResponseHeaders","parts","shift","trim","responseURL","responseText","onerror","ontimeout","open","credentials","withCredentials","responseType","setRequestHeader","send","polyfill","test","toLowerCase","isArray","header","consumed","bodyUsed","fileReaderReady","reader","readBlobAsArrayBuffer","FileReader","readAsArrayBuffer","bufferClone","buf","view","byteLength","_initBody","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","rejected","readAsText","chars","readArrayBufferAsText","json","upcased","mode","toUpperCase","referrer","form","decodeURIComponent","bodyInit","ok","__WEBPACK_IMPORTED_MODULE_1_react_dom__","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_2__App__","getElementById","__WEBPACK_IMPORTED_MODULE_4__registerServiceWorker__","k","q","for","t","u","v","w","x","y","z","A","B","C","D","encodeURIComponent","E","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","F","props","context","refs","updater","G","H","isReactComponent","setState","forceUpdate","I","isPureReactComponent","J","current","K","L","ref","__self","__source","M","h","children","defaultProps","$$typeof","_owner","N","O","P","Q","pop","keyPrefix","func","R","S","T","=",":","escape","U","V","W","X","Children","toArray","only","createRef","PureComponent","createContext","_calculateChangedBits","_defaultValue","_currentValue","_currentValue2","_changedBits","_changedBits2","Provider","Consumer","_context","forwardRef","render","Fragment","StrictMode","unstable_AsyncMode","unstable_Profiler","createElement","cloneElement","createFactory","isValidElement","version","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","Y","Z","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","aa","ba","da","ea","fa","ha","_caughtError","_hasCaughtError","_rethrowError","_hasRethrowError","invokeGuardedCallback","invokeGuardedCallbackAndCatchFirstError","hasCaughtError","clearCaughtError","rethrowCaughtError","la","ma","na","oa","extractEvents","eventTypes","pa","phasedRegistrationNames","qa","registrationName","ra","sa","dependencies","ta","ua","va","plugins","eventNameDispatchConfigs","registrationNameModules","registrationNameDependencies","possibleRegistrationNames","injectEventPluginOrder","injectEventPluginsByName","wa","xa","ya","za","currentTarget","Aa","concat","Ba","Ca","Da","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","release","Ea","Fa","Ga","Ha","stateNode","disabled","Ia","Ja","Ka","injection","getListener","runEventsInBatch","runExtractedEventsInBatch","La","Math","random","Ma","Na","parentNode","tag","Oa","Pa","Qa","precacheFiberNode","getClosestInstanceFromNode","getInstanceFromNode","getNodeFromInstance","getFiberCurrentPropsFromNode","updateFiberProps","return","Ra","Sa","dispatchConfig","Ta","_targetInst","Ua","Va","Xa","Ya","Za","alternate","$a","accumulateTwoPhaseDispatches","accumulateTwoPhaseDispatchesSkipTarget","accumulateEnterLeaveDispatches","accumulateDirectDispatches","ab","bb","animationend","animationiteration","animationstart","transitionend","db","eb","canUseDOM","style","animation","transition","fb","gb","hb","ib","jb","kb","lb","documentElement","_root","_startText","_fallbackText","mb","nb","ob","pb","eventPhase","bubbles","cancelable","timeStamp","defaultPrevented","isTrusted","nativeEvent","Interface","isDefaultPrevented","returnValue","rb","eventPool","sb","destructor","qb","getPooled","preventDefault","stopPropagation","cancelBubble","persist","extend","tb","ub","vb","wb","xb","documentMode","yb","zb","Ab","Bb","beforeInput","bubbled","captured","compositionEnd","compositionStart","compositionUpdate","Cb","Db","keyCode","Eb","detail","Fb","Ib","which","Gb","ctrlKey","altKey","metaKey","char","Hb","Jb","Kb","injectFiberControlledHostComponent","Lb","Mb","Nb","restoreControlledState","Ob","Pb","Qb","Rb","enqueueStateRestore","needsStateRestore","restoreStateIfNeeded","Sb","Tb","Ub","Vb","Wb","Xb","color","datetime","datetime-local","email","month","number","password","range","tel","week","Yb","nodeName","Zb","srcElement","correspondingUseElement","nodeType","$b","setAttribute","ac","cc","_valueTracker","getOwnPropertyDescriptor","getValue","setValue","stopTracking","bc","dc","checked","ec","fc","gc","hc","ic","jc","kc","lc","mc","pc","qc","rc","sc","tc","uc","displayName","pendingProps","vc","_debugOwner","_debugSource","fileName","lineNumber","wc","xc","zc","Ac","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","Ec","Fc","Gc","Cc","isNaN","Dc","Bc","removeAttribute","setAttributeNS","Hc","defaultChecked","defaultValue","_wrapperState","initialChecked","Ic","Jc","initialValue","controlled","Kc","Lc","Mc","Nc","ownerDocument","activeElement","tabIndex","Oc","change","Pc","Qc","Rc","Sc","Tc","Uc","Vc","Wc","detachEvent","Xc","Yc","attachEvent","Zc","$c","ad","bd","_isInputEventSupported","cd","dd","Alt","Control","Meta","Shift","ed","getModifierState","fd","gd","screenX","screenY","clientX","clientY","pageX","pageY","shiftKey","button","buttons","relatedTarget","fromElement","toElement","hd","pointerId","width","pressure","tiltX","tiltY","pointerType","isPrimary","mouseEnter","mouseLeave","pointerEnter","pointerLeave","jd","defaultView","parentWindow","kd","effectTag","ld","md","child","sibling","nd","pd","animationName","elapsedTime","pseudoElement","qd","clipboardData","rd","sd","td","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","ud","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","vd","repeat","locale","wd","dataTransfer","xd","touches","targetTouches","changedTouches","yd","zd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Ad","Bd","Cd","Dd","isInteractive","Ed","isInteractiveTopLevelEventType","Fd","Gd","Hd","targetInst","ancestors","containerInfo","topLevelType","Id","Kd","Ld","Md","Nd","Od","_enabled","setEnabled","isEnabled","trapBubbledEvent","trapCapturedEvent","dispatchEvent","Pd","Qd","Rd","Sd","Td","firstChild","Ud","textContent","nextSibling","Vd","contentEditable","Wd","Xd","Yd","Zd","$d","ae","be","selectionStart","selectionEnd","getSelection","anchorNode","anchorOffset","focusNode","focusOffset","ce","onSelect","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","de","requestAnimationFrame","ee","fe","ge","he","ie","je","ke","le","me","ne","oe","pe","qe","re","se","te","didTimeout","timeRemaining","ve","scheduledCallback","postMessage","ue","timeoutTime","we","prev","xe","Infinity","ze","ye","Ae","selected","defaultSelected","Be","wasMultiple","multiple","Ce","dangerouslySetInnerHTML","De","Ee","Fe","Ge","html","mathml","svg","He","Ie","Je","Ke","namespaceURI","innerHTML","removeChild","appendChild","MSApp","execUnsafeLocalFunction","Le","lastChild","nodeValue","Me","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","Ne","Oe","setProperty","charAt","substring","Pe","menuitem","area","base","br","col","embed","hr","img","keygen","link","meta","param","track","wbr","Qe","Re","is","Se","Te","blur","focus","Ue","createElementNS","Ve","We","__html","onClick","onclick","Xe","Ye","Ze","$e","af","setInitialProperties","diffProperties","updateProperties","diffHydratedProperties","diffHydratedText","warnForUnmatchedText","warnForDeletedHydratableElement","warnForDeletedHydratableText","warnForInsertedHydratedElement","warnForInsertedHydratedText","querySelectorAll","bf","cf","df","autoFocus","ef","ff","gf","hf","jf","kf","Set","lf","mf","nf","of","pf","qf","rf","sf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","childContextTypes","tf","uf","vf","wf","getChildContext","xf","__reactInternalMemoizedMergedChildContext","yf","zf","memoizedState","updateQueue","memoizedProps","lastEffect","firstEffect","nextEffect","expirationTime","Af","Bf","Cf","Df","Ef","pendingChildren","implementation","Ff","earliestPendingTime","latestPendingTime","earliestSuspendedTime","latestSuspendedTime","latestPingedTime","pendingCommitExpirationTime","finishedWork","pendingContext","hydrate","remainingExpirationTime","firstBatch","nextScheduledRoot","Gf","Hf","If","Kf","Lf","Mf","Nf","baseState","firstUpdate","lastUpdate","firstCapturedUpdate","lastCapturedUpdate","firstCapturedEffect","lastCapturedEffect","Of","Pf","payload","Qf","Rf","Sf","Tf","Uf","Vf","Wf","Xf","Yf","Zf","$f","ag","bg","cg","dg","eg","fg","gg","hg","jg","tagName","kg","lg","mg","qg","_reactInternalFiber","ng","og","pg","rg","shouldComponentUpdate","sg","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","tg","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","ug","vg","_stringRef","wg","xg","nc","Jd","yg","zg","Ag","Bg","Cg","Dg","Eg","Fg","Gg","Hg","Ig","Jg","Kg","Lg","Mg","Ng","Sg","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","element","hidden","Rg","unstable_observedBits","Tg","Ug","Vg","Wg","Xg","Yg","suppressReactErrorLogging","Zg","$g","ah","componentWillUnmount","bh","ch","dh","insertBefore","eh","fh","gh","hh","componentDidCatch","ih","add","componentStack","jh","kh","lh","mh","nh","oh","ph","qh","rh","sh","th","uh","vh","wh","xh","yh","zh","Ah","Bh","Ch","getDerivedStateFromCatch","Dh","Eh","Fh","Gh","Hh","Ih","Jh","Kh","Lh","Mh","Nh","Oh","Ph","Qh","Rh","Sh","Th","Uh","Vh","Wh","Xh","Yh","Zh","$h","ai","_onComplete","bi","_expirationTime","_defer","rangeCount","Wa","focusedElem","selectionRange","ja","ni","__reactInternalSnapshotBeforeUpdate","min","createRange","setStart","removeAllRanges","addRange","setEnd","scrollLeft","top","scrollTop","ig","oc","ca","xi","yi","Og","Pg","zi","yc","Qg","Ai","ci","di","ei","fi","gi","hi","ii","ji","ki","li","findFiberByHostInstance","isDisabled","supportsFiber","inject","onCommitFiberRoot","onCommitFiberUnmount","Jf","findHostInstanceByFiber","mi","pi","_callbacks","_next","_hasChildren","_didComplete","_children","qi","_didCommit","_onCommit","ri","_internalRoot","si","ui","_reactRootContainer","legacy_renderSubtreeIntoContainer","hasAttribute","ti","vi","oi","commit","unmount","createBatch","wi","createPortal","findDOMNode","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_deferredUpdates","unstable_interactiveUpdates","flushSync","unstable_flushControlled","EventPluginHub","EventPluginRegistry","EventPropagators","ReactControlledComponent","ReactDOMComponentTree","ReactDOMEventListener","unstable_createRoot","bundleType","rendererPackageName","Bi","Ci","ExecutionEnvironment","canUseWorkers","Worker","canUseEventListeners","canUseViewport","screen","isInWorker","doc","objA","objB","keysA","keysB","isTextNode","containsNode","outerNode","innerNode","contains","compareDocumentPosition","isNode","Node","App","_this","onTimerPhaseUpdate","timerStatus","handleLocalMessage","command","timerFunc","commandToFunc","sendHostCommand","__WEBPACK_IMPORTED_MODULE_1__Constants__","SET_OFFSET","timeInMilliseconds","eventOffset","handleSocketMessage","msg","tokens","HOST_PREFIX","args_1","commandQueue","getTime","CONTROL_PASSWORD","socketStatus","parseInt","timeString","Intl","DateTimeFormat","hour","minute","second","hour12","timeZoneName","lastControlPassword","lastMessage","onLogin","serverUrl","setupWebSockets","offsetString","URL","href","Number","coreState","loadLSCore","__WEBPACK_IMPORTED_MODULE_5__Login__","__WEBPACK_IMPORTED_MODULE_4__Controller__","onLocalMessage","__WEBPACK_IMPORTED_MODULE_2__livesplit__","__WEBPACK_IMPORTED_MODULE_3__assets_livesplit_core_wasm___default","coreLoadFailure","err_1","__WEBPACK_IMPORTED_MODULE_6__TimerWrapper__","webSocket","WebSocket","onopen","onmessage","onclose","Controller","initState","renderCommandQueue","commandQueueString","handleButtonClick","event","onTimerDoubleClick","isControllerMode","getTimerState","showDiagnosticTime","diagnosticTime","timerFontScale","parseFloat","timerFontColor","timerTextAlign","nextProps","hideDiagnosticTime","toFixed","cmd","timeDiff","floor","connectionStatus","statusColor","controlsStyle","display","mainContainerStyle","background","overflow","className","__WEBPACK_IMPORTED_MODULE_2__AutoRefreshTimer__","fontSizeScale","fontColor","textAlign","onDoubleClick","getState","eventOffsetString","__WEBPACK_IMPORTED_MODULE_3__AutoIntervalUpdate__","interval","START_TIMER","SPLIT","UNDO_SPLIT","RESUME","PAUSE","UNDO_ALL_PAUSES","RESET","AutoRefreshTimer","__assign","getTimerStyles","timerContainerStyle","runUpdate","updateTimer","timeFontSize","fractionFontSize","timeStyle","fontSize","fractionStyle","justifyContent","margin","marginLeft","marginRight","timerState","AutoIntervalUpdate","tick","startInterval","stopInterval","Login","handlePasswordChange","handleServerChange","handleServerBlur","handleSelectAll","coreStateText","inputDisabled","onSubmit","spellCheck","onFocus","onChange","onBlur","TimerWrapper","onPhaseUpdate","__WEBPACK_IMPORTED_MODULE_0__livesplit__","components","find","token","reverse","RUN_OFFSET","setRunOffset","callPhaseUpdate","strOffset","editor","navigator","publicUrl","origin","swUrl","isLocalhost","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","log","checkValidServiceWorker","Boolean","hostname","match","register","onupdatefound","installingWorker","installing","onstatechange","controller"],"mappings":"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","file":"static/js/main.4ee89d8d.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/livesplitcontrol/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9799ba4ecbbe521486e3","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react/index.js\n// module id = 0\n// module chunks = 0","export const DEFAULT_WEBSOCKS_URL = 'wss://play.sourceruns.org:12346';\n\nexport const enum TimerPhase {\n  NOT_RUNNING = 0,\n  RUNNING,\n  ENDED,\n  PAUSED,\n}\n\nexport function phaseToString(phase: TimerPhase) {\n  switch (phase) {\n    case TimerPhase.NOT_RUNNING:\n      return 'Not Running';\n    case TimerPhase.RUNNING:\n      return 'Running';\n    case TimerPhase.ENDED:\n      return 'Ended';\n    case TimerPhase.PAUSED:\n      return 'Paused';\n    default:\n      return 'Unknown';\n  }\n}\n\nexport const enum CoreState {\n  NOT_LOADED,\n  LOADING,\n  LOADED,\n  FAILED,\n}\n\nexport function coreStateToString(state: CoreState) {\n  switch (state) {\n    case CoreState.NOT_LOADED:\n      return 'LIVESPLIT CORE WAITING TO LOAD';\n    case CoreState.LOADING:\n      return 'LOADING LIVESPLIT CORE';\n    case CoreState.LOADED:\n      return 'LIVESPLIT CORE LOADED';\n    case CoreState.FAILED:\n      return 'LIVESPLIT CORE FAILED TO LOAD';\n    default:\n      return '';\n  }\n}\n\nexport const enum Commands {\n  START_TIMER = 'starttimer',\n  RESUME = 'resume',\n  PAUSE = 'pause',\n  RESET = 'reset',\n  SPLIT = 'split',\n  UNDO_SPLIT = 'unsplit',\n  UNDO_ALL_PAUSES = 'undoallpauses',\n  RUN_OFFSET = 'runoffset',\n\n  HOST_PREFIX = 'host',\n  SET_OFFSET = 'set_offset',\n  CONTROL_PASSWORD = 'control_password',\n}\n\nexport const enum Connection {\n  PENDING_INPUT,\n  WRONG_PASSWORD,\n  CONNECTING,\n  AUTHENTICATING,\n  CONNECTED,\n  CANNOT_CONNECT,\n}\n\nexport function statusToString(status: Connection) {\n  switch (status) {\n    case Connection.PENDING_INPUT:\n      return 'Pending Password Input';\n    case Connection.CONNECTING:\n      return 'Connecting';\n    case Connection.AUTHENTICATING:\n      return 'Authenticating';\n    case Connection.CONNECTED:\n      return 'Connected';\n    case Connection.WRONG_PASSWORD:\n      return 'Authentication Failed';\n    case Connection.CANNOT_CONNECT:\n      return 'Failed to Connect';\n    default:\n      return 'Unknown';\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Constants.ts","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/object-assign/index.js\n// module id = 2\n// module chunks = 0","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._75 = 0;\n  this._83 = 0;\n  this._18 = null;\n  this._38 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._47 = null;\nPromise._71 = null;\nPromise._44 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._83 === 3) {\n    self = self._18;\n  }\n  if (Promise._47) {\n    Promise._47(self);\n  }\n  if (self._83 === 0) {\n    if (self._75 === 0) {\n      self._75 = 1;\n      self._38 = deferred;\n      return;\n    }\n    if (self._75 === 1) {\n      self._75 = 2;\n      self._38 = [self._38, deferred];\n      return;\n    }\n    self._38.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._83 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._83 === 1) {\n        resolve(deferred.promise, self._18);\n      } else {\n        reject(deferred.promise, self._18);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._18);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._83 = 3;\n      self._18 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._83 = 1;\n  self._18 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._83 = 2;\n  self._18 = newValue;\n  if (Promise._71) {\n    Promise._71(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._75 === 1) {\n    handle(self, self._38);\n    self._38 = null;\n  }\n  if (self._75 === 2) {\n    for (var i = 0; i < self._38.length; i++) {\n      handle(self, self._38[i]);\n    }\n    self._38 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/promise/lib/core.js\n// module id = 3\n// module chunks = 0","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 4\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/invariant.js\n// module id = 5\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar emptyObject = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/emptyObject.js\n// module id = 6\n// module chunks = 0","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/emptyFunction.js\n// module id = 7\n// module chunks = 0","// tslint:disable\nlet wasm: WebAssembly.ResultObject | null = null;\n\ndeclare namespace WebAssembly {\n    class Module {\n        constructor(bufferSource: ArrayBuffer | Uint8Array);\n\n        public static customSections(module: Module, sectionName: string): ArrayBuffer[];\n        public static exports(module: Module): Array<{\n            name: string;\n            kind: string;\n        }>;\n        public static imports(module: Module): Array<{\n            module: string;\n            name: string;\n            kind: string;\n        }>;\n    }\n\n    class Instance {\n        public readonly exports: any;\n        constructor(module: Module, importObject?: any);\n    }\n\n    interface ResultObject {\n        module: Module;\n        instance: Instance;\n    }\n\n    function instantiate(bufferSource: ArrayBuffer | Uint8Array, importObject?: any): Promise<ResultObject>;\n    function instantiateStreaming(source: Response | Promise<Response>, importObject?: any): Promise<ResultObject>;\n}\n\ndeclare class TextEncoder {\n    constructor(label?: string, options?: TextEncoding.TextEncoderOptions);\n    encoding: string;\n    encode(input?: string, options?: TextEncoding.TextEncodeOptions): Uint8Array;\n}\n\ndeclare class TextDecoder {\n    constructor(utfLabel?: string, options?: TextEncoding.TextDecoderOptions)\n    encoding: string;\n    fatal: boolean;\n    ignoreBOM: boolean;\n    decode(input?: ArrayBufferView, options?: TextEncoding.TextDecodeOptions): string;\n}\n\ndeclare namespace TextEncoding {\n    interface TextDecoderOptions {\n        fatal?: boolean;\n        ignoreBOM?: boolean;\n    }\n\n    interface TextDecodeOptions {\n        stream?: boolean;\n    }\n\n    interface TextEncoderOptions {\n        NONSTANDARD_allowLegacyEncoding?: boolean;\n    }\n\n    interface TextEncodeOptions {\n        stream?: boolean;\n    }\n\n    interface TextEncodingStatic {\n        TextDecoder: typeof TextDecoder;\n        TextEncoder: typeof TextEncoder;\n    }\n}\n\nfunction instance(): WebAssembly.Instance {\n    if (wasm == null) {\n        throw \"You need to await load()\";\n    }\n    return wasm.instance;\n}\n\nconst handleMap: Map<number, any> = new Map();\n\nexport async function load(path?: string) {\n    const imports = {\n        env: {\n            Instant_now: function (): number {\n                return performance.now() / 1000;\n            },\n            Date_now: function (ptr: number) {\n                const date = new Date();\n                const milliseconds = date.valueOf();\n                const u32Max = 0x100000000;\n                const seconds = milliseconds / 1000;\n                const secondsHigh = (seconds / u32Max) | 0;\n                const secondsLow = (seconds % u32Max) | 0;\n                const nanos = ((milliseconds % 1000) * 1000000) | 0;\n                const u32Slice = new Uint32Array(instance().exports.memory.buffer, ptr);\n                u32Slice[0] = secondsLow;\n                u32Slice[1] = secondsHigh;\n                u32Slice[2] = nanos;\n            },\n            HotkeyHook_new: function (handle: number) {\n                const listener = (ev: KeyboardEvent) => {\n                    const { ptr, len } = allocString(ev.code);\n                    instance().exports.HotkeyHook_callback(ptr, len - 1, handle);\n                    dealloc({ ptr, len });\n                };\n                window.addEventListener(\"keypress\", listener);\n                handleMap.set(handle, listener);\n            },\n            HotkeyHook_drop: function (handle: number) {\n                window.removeEventListener(\"keypress\", handleMap.get(handle));\n                handleMap.delete(handle);\n            },\n        },\n    };\n\n    const request = fetch(path || 'livesplit_core.wasm');\n    if (typeof WebAssembly.instantiateStreaming === \"function\") {\n        try {\n            wasm = await WebAssembly.instantiateStreaming(request, imports);\n            return;\n        } catch { }\n        // We retry with the normal instantiate here because Chrome 60 seems to\n        // have instantiateStreaming, but it doesn't actually work.\n    }\n    const response = await request;\n    const bytes = await response.arrayBuffer();\n    wasm = await WebAssembly.instantiate(bytes, imports);\n}\n\nlet encodeUtf8: (str: string) => Uint8Array;\nif (!(global as any)[\"TextEncoder\"]) {\n    encodeUtf8 = (str) => {\n        var utf8 = [];\n        for (var i = 0; i < str.length; i++) {\n            var charcode = str.charCodeAt(i);\n            if (charcode < 0x80) {\n                utf8.push(charcode);\n            } else if (charcode < 0x800) {\n                utf8.push(0xc0 | (charcode >> 6),\n                    0x80 | (charcode & 0x3f));\n            } else if (charcode < 0xd800 || charcode >= 0xe000) {\n                utf8.push(0xe0 | (charcode >> 12),\n                    0x80 | ((charcode >> 6) & 0x3f),\n                    0x80 | (charcode & 0x3f));\n            } else {\n                i++;\n                charcode = 0x10000 + (((charcode & 0x3ff) << 10)\n                    | (str.charCodeAt(i) & 0x3ff))\n                utf8.push(0xf0 | (charcode >> 18),\n                    0x80 | ((charcode >> 12) & 0x3f),\n                    0x80 | ((charcode >> 6) & 0x3f),\n                    0x80 | (charcode & 0x3f));\n            }\n        }\n        return new Uint8Array(utf8);\n    };\n} else {\n    const encoder = new TextEncoder(\"UTF-8\");\n    encodeUtf8 = (str) => encoder.encode(str);\n}\n\nlet decodeUtf8: (data: Uint8Array) => string;\nif (!(global as any)[\"TextDecoder\"]) {\n    decodeUtf8 = (data) => {\n        var str = '',\n            i;\n\n        for (i = 0; i < data.length; i++) {\n            var value = data[i];\n\n            if (value < 0x80) {\n                str += String.fromCharCode(value);\n            } else if (value > 0xBF && value < 0xE0) {\n                str += String.fromCharCode((value & 0x1F) << 6 | data[i + 1] & 0x3F);\n                i += 1;\n            } else if (value > 0xDF && value < 0xF0) {\n                str += String.fromCharCode((value & 0x0F) << 12 | (data[i + 1] & 0x3F) << 6 | data[i + 2] & 0x3F);\n                i += 2;\n            } else {\n                var charCode = ((value & 0x07) << 18 | (data[i + 1] & 0x3F) << 12 | (data[i + 2] & 0x3F) << 6 | data[i + 3] & 0x3F) - 0x010000;\n\n                str += String.fromCharCode(charCode >> 10 | 0xD800, charCode & 0x03FF | 0xDC00);\n                i += 3;\n            }\n        }\n\n        return str;\n    };\n} else {\n    const decoder = new TextDecoder(\"UTF-8\");\n    decodeUtf8 = (data) => decoder.decode(data);\n}\n\ninterface Slice {\n    ptr: number,\n    len: number,\n}\n\nfunction allocInt8Array(src: Int8Array): Slice {\n    const len = src.length;\n    const ptr = instance().exports.alloc(len);\n    const slice = new Uint8Array(instance().exports.memory.buffer, ptr, len);\n\n    slice.set(src);\n\n    return { ptr, len };\n}\n\nfunction allocString(str: string): Slice {\n    const stringBuffer = encodeUtf8(str);\n    const len = stringBuffer.length + 1;\n    const ptr = instance().exports.alloc(len);\n    const slice = new Uint8Array(instance().exports.memory.buffer, ptr, len);\n\n    slice.set(stringBuffer);\n    slice[len - 1] = 0;\n\n    return { ptr, len };\n}\n\nfunction decodeString(ptr: number): string {\n    const memory = new Uint8Array(instance().exports.memory.buffer);\n    let end = ptr;\n    while (memory[end] !== 0) {\n        end += 1;\n    }\n    const slice = memory.slice(ptr, end);\n    return decodeUtf8(slice);\n}\n\nfunction dealloc(slice: Slice) {\n    instance().exports.dealloc(slice.ptr, slice.len);\n}\n\n/** The state object for one of the components available. */\nexport type ComponentStateJson =\n    { BlankSpace: BlankSpaceComponentStateJson } |\n    { CurrentComparison: CurrentComparisonComponentStateJson } |\n    { CurrentPace: CurrentPaceComponentStateJson } |\n    { Delta: DeltaComponentStateJson } |\n    { DetailedTimer: DetailedTimerComponentStateJson } |\n    { Graph: GraphComponentStateJson } |\n    { PossibleTimeSave: PossibleTimeSaveComponentStateJson } |\n    { PreviousSegment: PreviousSegmentComponentStateJson } |\n    { Separator: null } |\n    { Splits: SplitsComponentStateJson } |\n    { SumOfBest: SumOfBestComponentStateJson } |\n    { Text: TextComponentStateJson } |\n    { Timer: TimerComponentStateJson } |\n    { Title: TitleComponentStateJson } |\n    { TotalPlaytime: TotalPlaytimeComponentStateJson };\n\n/**\n * Colors can be used to describe what color to use for visualizing backgrounds,\n * texts, lines and various other elements that are being shown. They are stored\n * as RGBA colors with float point numbers ranging from 0.0 to 1.0 per channel.\n */\nexport type Color = number[];\n\n/**\n * Describes a Gradient for coloring a region with more than just a single\n * color.\n */\nexport type Gradient =\n    \"Transparent\" |\n    { Plain: Color } |\n    { Vertical: Color[] } |\n    { Horizontal: Color[] };\n\n/** Describes the Alignment of the Title in the Title Component. */\nexport type Alignment = \"Auto\" | \"Left\" | \"Center\";\n\n/** The state object describes the information to visualize for the layout. */\nexport interface LayoutStateJson {\n    /** The state objects for all of the components in the layout. */\n    components: ComponentStateJson[],\n    /** The background to show behind the layout. */\n    background: Gradient,\n    /** The color of thin separators. */\n    thin_separators_color: Color,\n    /** The color of normal separators. */\n    separators_color: Color,\n    /** The text color to use for text that doesn't specify its own color. */\n    text_color: Color,\n}\n\n/**\n * A Timing Method describes which form of timing is used. This can either be\n * Real Time or Game Time.\n */\nexport enum TimingMethod {\n    /**\n     * Real Time is the unmodified timing that is as close to an atomic clock as\n     * possible.\n     */\n    RealTime = 0,\n    /**\n     * Game Time describes the timing that is provided by the game that is being\n     * run. This is entirely optional and may either be Real Time with loading\n     * times removed or some time provided by the game.\n     */\n    GameTime = 1,\n}\n\n/**\n * Describes which phase the timer is currently in. This tells you if there's an\n * active speedrun attempt and whether it is paused or it ended.\n */\nexport enum TimerPhase {\n    /** There's currently no active attempt. */\n    NotRunning = 0,\n    /** There's an active attempt that didn't end yet and isn't paused. */\n    Running = 1,\n    /** There's an attempt that already ended, but didn't get reset yet. */\n    Ended = 2,\n    /** There's an active attempt that is currently paused. */\n    Paused = 3,\n}\n\n/** The state object describes the information to visualize for this component. */\nexport interface BlankSpaceComponentStateJson {\n    /** The background shown behind the component. */\n    background: Gradient,\n    /** The height of the component. */\n    height: number,\n}\n\n/** The state object describes the information to visualize for this component. */\nexport interface TimerComponentStateJson {\n    /** The background shown behind the component. */\n    background: Gradient,\n    /** The time shown by the component without the fractional part. */\n    time: string,\n    /** The fractional part of the time shown (including the dot). */\n    fraction: string,\n    /** The semantic coloring information the time carries. */\n    semantic_color: SemanticColor,\n    /** The top color of the timer's gradient. */\n    top_color: Color,\n    /** The bottom color of the timer's gradient. */\n    bottom_color: Color,\n    /** The height of the timer. */\n    height: number,\n}\n\n/** The state object describes the information to visualize for this component. */\nexport interface TitleComponentStateJson {\n    /** The background shown behind the component. */\n    background: Gradient,\n    /**\n     * The color of the text. If `null` is specified, the color is taken from\n     * the layout.\n     */\n    text_color: Color | null,\n    /**\n     * The game's icon encoded as a Data URL. This value is only specified\n     * whenever the icon changes. If you explicitly want to query this value,\n     * remount the component. The String itself may be empty. This indicates\n     * that there is no icon.\n     */\n    icon_change: string | null,\n    /**\n     * The first title line to show. This is either the game's name, or a\n     * combination of the game's name and the category.\n     */\n    line1: string,\n    /**\n     * By default the category name is shown on the second line. Based on the\n     * settings, it can however instead be shown in a single line together with\n     * the game name.\n     */\n    line2: string | null,\n    /**\n     * Specifies whether the title should centered or aligned to the left\n     * instead.\n     */\n    is_centered: boolean,\n    /**\n     * The amount of successfully finished attempts. If `null` is specified, the\n     * amount of successfully finished attempts isn't supposed to be shown.\n     */\n    finished_runs: number | null,\n    /**\n     * The amount of total attempts. If `null` is specified, the amount of total\n     * attempts isn't supposed to be shown.\n     */\n    attempts: number | null,\n}\n\n/** The state object describes the information to visualize for this component. */\nexport interface SplitsComponentStateJson {\n    /** The list of all the segments to visualize. */\n    splits: SplitStateJson[],\n    /**\n     * This list describes all the icon changes that happened. Each time a\n     * segment is first shown or its icon changes, the new icon is provided in\n     * this list. If necessary, you may remount this component to reset the\n     * component into a state where these icons are provided again.\n     */\n    icon_changes: SplitsComponentIconChangeJson[],\n    /**\n     * Describes whether a more pronounced separator should be shown in front of\n     * the last segment provided.\n     */\n    show_final_separator: boolean,\n    /**\n     * The gradient to show behind the current segment as an indicator of it\n     * being the current segment.\n     */\n    current_split_gradient: Gradient,\n}\n\n/**\n * Describes the icon to be shown for a certain segment. This is provided\n * whenever a segment is first shown or whenever its icon changes. If necessary,\n * you may remount this component to reset the component into a state where\n * these icons are provided again.\n */\nexport interface SplitsComponentIconChangeJson {\n    /**\n     * The index of the segment of which the icon changed. This is based on the\n     * index in the run, not on the index of the `SplitStateJson` in the\n     * `SplitsComponentStateJson` object. The corresponding index is the `index`\n     * field of the `SplitStateJson` object.\n     */\n    segment_index: number,\n    /**\n     * The segment's icon encoded as a Data URL. The String itself may be empty.\n     * This indicates that there is no icon.\n     */\n    icon: string,\n}\n\n/** The state object that describes a single segment's information to visualize. */\nexport interface SplitStateJson {\n    /** The name of the segment. */\n    name: string,\n    /** The delta to show for this segment. */\n    delta: string,\n    /** The split time to show for this segment. */\n    time: string,\n    /** The semantic coloring information the delta time carries. */\n    semantic_color: SemanticColor,\n    /** The visual color of the delta time. */\n    visual_color: Color,\n    /**\n     * Describes if this segment is the segment the active attempt is currently\n     * on.\n     */\n    is_current_split: boolean,\n    /**\n     * The index of the segment based on all the segments of the run. This may\n     * differ from the index of this `SplitStateJson` in the\n     * `SplitsComponentStateJson` object, as there can be a scrolling window,\n     * showing only a subset of segments.\n     */\n    index: number,\n}\n\n/** The state object describes the information to visualize for this component. */\nexport interface PreviousSegmentComponentStateJson {\n    /** The background shown behind the component. */\n    background: Gradient,\n    /**\n     * The color of the label. If `null` is specified, the color is taken from\n     * the layout.\n     */\n    label_color: Color | null,\n    /** The label's text. */\n    text: string,\n    /** The delta (and possibly the possible time save). */\n    time: string,\n    /** The semantic coloring information the delta time carries. */\n    semantic_color: SemanticColor,\n    /** The visual color of the delta time. */\n    visual_color: Color,\n}\n\n/** The state object describes the information to visualize for this component. */\nexport interface SumOfBestComponentStateJson {\n    /** The background shown behind the component. */\n    background: Gradient,\n    /**\n     * The color of the label. If `null` is specified, the color is taken from\n     * the layout.\n     */\n    label_color: Color | null,\n    /**\n     * The color of the value. If `null` is specified, the color is taken from\n     * the layout.\n     */\n    value_color: Color | null,\n    /** The label's text. */\n    text: string,\n    /** The sum of best segments. */\n    time: string,\n}\n\n/** The state object describes the information to visualize for this component. */\nexport interface PossibleTimeSaveComponentStateJson {\n    /** The background shown behind the component. */\n    background: Gradient,\n    /**\n     * The color of the label. If `null` is specified, the color is taken from\n     * the layout.\n     */\n    label_color: Color | null,\n    /**\n     * The color of the value. If `null` is specified, the color is taken from\n     * the layout.\n     */\n    value_color: Color | null,\n    /** The label's text. */\n    text: string,\n    /** The current possible time save. */\n    time: string,\n}\n\n/**\n * The state object describes the information to visualize for this component.\n * All the coordinates are in the range 0..1.\n */\nexport interface GraphComponentStateJson {\n    /**\n     * All of the graph's points. Connect all of them to visualize the graph. If\n     * the live delta is active, the last point is to be interpreted as a\n     * preview of the next split that is about to happen. Use the partial fill\n     * color to visualize the region beneath that graph segment.\n     */\n    points: GraphComponentStatePointJson[],\n    /** Contains the y coordinates of all the horizontal grid lines. */\n    horizontal_grid_lines: number[],\n    /** Contains the x coordinates of all the vertical grid lines. */\n    vertical_grid_lines: number[],\n    /**\n     * The y coordinate that separates the region that shows the times that are\n     * ahead of the comparison and those that are behind.\n     */\n    middle: number,\n    /**\n     * If the live delta is active, the last point is to be interpreted as a\n     * preview of the next split that is about to happen. Use the partial fill\n     * color to visualize the region beneath that graph segment.\n     */\n    is_live_delta_active: boolean,\n    /**\n     * Describes whether the graph is flipped vertically. For visualizing the\n     * graph, this usually doesn't need to be interpreted, as this information\n     * is entirely encoded into the other variables.\n     */\n    is_flipped: boolean,\n    /**\n     * The background color to use for the top region of the graph. The top\n     * region ends at the y coordinate of the middle.\n     */\n    top_background_color: Color,\n    /**\n     * The background color to use for the bottom region of the graph. The top\n     * region begins at the y coordinate of the middle.\n     */\n    bottom_background_color: Color,\n    /** The color of the grid lines on the graph. */\n    grid_lines_color: Color,\n    /** The color of the lines connecting all the graph's points. */\n    graph_lines_color: Color,\n    /**\n     * The color of the polygon connecting all the graph's points. The partial\n     * fill color is only used for live changes.\n     */\n    partial_fill_color: Color,\n    /** The color of the polygon connecting all the graph's points. */\n    complete_fill_color: Color,\n    /**\n     * The best segment color to use for coloring graph segments that achieved a\n     * new best segment time.\n     */\n    best_segment_color: Color,\n    /** The height of the graph. */\n    height: number,\n}\n\n/** Describes a point on the graph to visualize. */\nexport interface GraphComponentStatePointJson {\n    /** The x coordinate of the point. */\n    x: number,\n    /** The y coordinate of the point. */\n    y: number,\n    /**\n     * Describes whether the segment this point is visualizing achieved a new\n     * best segment time. Use the best segment color for it, in that case.\n     */\n    is_best_segment: boolean,\n}\n\n/** The state object describes the information to visualize for this component. */\nexport interface TextComponentStateJson {\n    /** The background shown behind the component. */\n    background: Gradient,\n    /** The text to show for the component. */\n    text: TextComponentStateText,\n}\n\n/** The text that is supposed to be shown. */\nexport type TextComponentStateText =\n    { Center: string } |\n    { Split: string[] };\n\n/** The state object describes the information to visualize for this component. */\nexport interface TotalPlaytimeComponentStateJson {\n    /** The background shown behind the component. */\n    background: Gradient,\n    /**\n     * The color of the label. If `null` is specified, the color is taken from\n     * the layout.\n     */\n    label_color: Color | null,\n    /**\n     * The color of the value. If `null` is specified, the color is taken from\n     * the layout.\n     */\n    value_color: Color | null,\n    /** The label's text. */\n    text: string,\n    /** The total playtime. */\n    time: string,\n}\n\n/** The state object describes the information to visualize for this component. */\nexport interface CurrentPaceComponentStateJson {\n    /** The background shown behind the component. */\n    background: Gradient,\n    /**\n     * The color of the label. If `null` is specified, the color is taken from\n     * the layout.\n     */\n    label_color: Color | null,\n    /**\n     * The color of the value. If `null` is specified, the color is taken from\n     * the layout.\n     */\n    value_color: Color | null,\n    /** The label's text. */\n    text: string,\n    /** The current pace. */\n    time: string,\n}\n\n/** The state object describes the information to visualize for this component. */\nexport interface DeltaComponentStateJson {\n    /** The background shown behind the component. */\n    background: Gradient,\n    /**\n     * The color of the label. If `null` is specified, the color is taken from\n     * the layout.\n     */\n    label_color: Color | null,\n    /** The label's text. */\n    text: string,\n    /** The delta. */\n    time: string,\n    /** The semantic coloring information the delta time carries. */\n    semantic_color: SemanticColor,\n    /** The visual color of the delta time. */\n    visual_color: Color,\n}\n\n/** The state object describes the information to visualize for this component. */\nexport interface CurrentComparisonComponentStateJson {\n    /** The background shown behind the component. */\n    background: Gradient,\n    /**\n     * The color of the label. If `null` is specified, the color is taken from\n     * the layout.\n     */\n    label_color: Color | null,\n    /**\n     * The color of the value. If `null` is specified, the color is taken from\n     * the layout.\n     */\n    value_color: Color | null,\n    /** The label's text. */\n    text: string,\n    /**\n     * The name of the comparison that is currently selected to be compared\n     * against.\n     */\n    comparison: string,\n}\n\n/** The state object describes the information to visualize for this component. */\nexport interface DetailedTimerComponentStateJson {\n    /** The background shown behind the component. */\n    background: Gradient,\n    /** The state of the attempt timer. */\n    timer: TimerComponentStateJson,\n    /** The state of the segment timer. */\n    segment_timer: TimerComponentStateJson,\n    /** The first comparison to visualize. */\n    comparison1: DetailedTimerComponentComparisonStateJson | null,\n    /** The second comparison to visualize. */\n    comparison2: DetailedTimerComponentComparisonStateJson | null,\n    /**\n     * The name of the segment. This may be `null` if it's not supposed to be\n     * visualized.\n     */\n    segment_name: string | null,\n    /**\n     * The segment's icon encoded as a Data URL. This value is only specified\n     * whenever the icon changes. If you explicitly want to query this value,\n     * remount the component. The String itself may be empty. This indicates\n     * that there is no icon.\n     */\n    icon_change: string | null,\n}\n\n/** The state object describing a comparison to visualize. */\nexport interface DetailedTimerComponentComparisonStateJson {\n    /** The name of the comparison. */\n    name: string,\n    /** The time to show for the comparison. */\n    time: string,\n}\n\n/**\n * Represents the current state of the Layout Editor in order to visualize it\n * properly.\n */\nexport interface LayoutEditorStateJson {\n    /** The name of all the components in the layout. */\n    components: string[],\n    /** Describes which actions are currently available. */\n    buttons: LayoutEditorButtonsJson,\n    /** The index of the currently selected component. */\n    selected_component: number,\n    /**\n     * A generic description of the settings available for the selected\n     * component and their current values.\n     */\n    component_settings: SettingsDescriptionJson,\n    /**\n     * A generic description of the general settings available for the layout\n     * and their current values.\n     */\n    general_settings: SettingsDescriptionJson,\n}\n\n/**\n * Describes which actions are currently available. Depending on how many\n * components exist and which one is selected, only some actions can be executed\n * successfully.\n */\nexport interface LayoutEditorButtonsJson {\n    /**\n     * Describes whether the currently selected component can be removed. If\n     * there's only one component in the layout, it can't be removed.\n     */\n    can_remove: boolean,\n    /**\n     * Describes whether the currently selected component can be moved up. If\n     * the first component is selected, it can't be moved.\n     */\n    can_move_up: boolean,\n    /**\n     * Describes whether the currently selected component can be moved down. If\n     * the last component is selected, it can't be moved.\n     */\n    can_move_down: boolean,\n}\n\n/** A generic description of the settings available and their current values. */\nexport interface SettingsDescriptionJson {\n    /**\n     * All of the different settings that are available and their current\n     * values.\n     */\n    fields: SettingsDescriptionFieldJson[],\n}\n\n/** A Field describes a single setting by its name and its current value. */\nexport interface SettingsDescriptionFieldJson {\n    /** The name of the setting. */\n    text: string,\n    /** The current value of the setting. */\n    value: SettingsDescriptionValueJson,\n}\n\n/**\n * Describes a setting's value. Such a value can be of a variety of different\n * types.\n */\nexport type SettingsDescriptionValueJson =\n    { Bool: boolean } |\n    { UInt: number } |\n    { Int: number } |\n    { String: string } |\n    { OptionalString: string | null } |\n    { Float: number } |\n    { Accuracy: AccuracyJson } |\n    { DigitsFormat: DigitsFormatJson } |\n    { OptionalTimingMethod: TimingMethodJson | null } |\n    { Color: Color } |\n    { OptionalColor: Color | null } |\n    { Gradient: Gradient } |\n    { Alignment: Alignment } |\n    { CustomCombobox: CustomCombobox };\n\n/**\n * A custom Combobox containing its current value and a list of possible\n * values.\n */\nexport interface CustomCombobox {\n    value: string,\n    list: string[],\n    mandatory: boolean,\n}\n\n/**\n * The Accuracy describes how many digits to show for the fractional part of a\n * time.\n */\nexport type AccuracyJson = \"Seconds\" | \"Tenths\" | \"Hundredths\" | \"Milliseconds\";\n\n/**\n * A Timing Method describes which form of timing is used. This can either be\n * Real Time or Game Time.\n */\nexport type TimingMethodJson = \"RealTime\" | \"GameTime\";\n\n/**\n * A Digits Format describes how many digits of a time to always shown. The\n * times are prefixed by zeros to fill up the remaining digits.\n */\nexport type DigitsFormatJson =\n    \"SingleDigitSeconds\" |\n    \"DoubleDigitSeconds\" |\n    \"SingleDigitMinutes\" |\n    \"DoubleDigitMinutes\" |\n    \"SingleDigitHours\" |\n    \"DoubleDigitHours\";\n\n/**\n * Represents the current state of the Run Editor in order to visualize it\n * properly.\n */\nexport interface RunEditorStateJson {\n    /**\n     * The game's icon encoded as a Data URL. This value is only specified\n     * whenever the icon changes. The String itself may be empty. This\n     * indicates that there is no icon.\n     */\n    icon_change: string | null,\n    /** The name of the game the Run is for. */\n    game: string,\n    /** The name of the category the Run is for. */\n    category: string,\n    /**\n     * The timer offset specifies the time that the timer starts at when starting a\n     * new attempt.\n     */\n    offset: string,\n    /**\n     * The number of times this Run has been attempted by the runner. This\n     * is mostly just a visual number and has no effect on any history.\n     */\n    attempts: number,\n    /**\n     * The timing method that is currently selected to be visualized and\n     * edited.\n     */\n    timing_method: TimingMethodJson,\n    /** The state of all the segments. */\n    segments: RunEditorRowJson[],\n    /** The names of all the custom comparisons that exist for this Run. */\n    comparison_names: string[],\n    /** Describes which actions are currently available. */\n    buttons: RunEditorButtonsJson,\n    /**\n     * Additional metadata of this Run, like the platform and region of the\n     * game.\n     */\n    metadata: RunMetadataJson,\n}\n\n/**\n * The Run Metadata stores additional information about a run, like the\n * platform and region of the game. All of this information is optional.\n */\nexport interface RunMetadataJson {\n    /**\n     * The speedrun.com Run ID of the run. You need to ensure that the record\n     * on speedrun.com matches up with the Personal Best of this run. This may\n     * be empty if there's no association.\n     */\n    run_id: string,\n    /**\n     * The name of the platform this game is run on. This may be empty if it's\n     * not specified.\n     */\n    platform_name: string,\n    /**\n     * Specifies whether this speedrun is done on an emulator. Keep in mind\n     * that `false` may also mean that this information is simply not known.\n     */\n    uses_emulator: boolean,\n    /**\n     * The name of the region this game is from. This may be empty if it's not\n     * specified.\n     */\n    region_name: string,\n    /**\n     * Stores all the variables. A variable is an arbitrary key value pair\n     * storing additional information about the category. An example of this\n     * may be whether Amiibos are used in this category.\n     */\n    variables: { [key: string]: string },\n}\n\n/**\n * Describes which actions are currently available. Depending on how many\n * segments exist and which ones are selected, only some actions can be\n * executed successfully.\n */\nexport interface RunEditorButtonsJson {\n    /**\n     * Describes whether the currently selected segments can be removed. If all\n     * segments are selected, they can't be removed.\n     */\n    can_remove: boolean,\n    /**\n     * Describes whether the currently selected segments can be moved up. If\n     * any one of the selected segments is the first segment, then they can't\n     * be moved.\n     */\n    can_move_up: boolean,\n    /**\n     * Describes whether the currently selected segments can be moved down. If\n     * any one of the selected segments is the last segment, then they can't be\n     * moved.\n     */\n    can_move_down: boolean,\n}\n\n/** Describes the current state of a segment. */\nexport interface RunEditorRowJson {\n    /**\n     * The segment's icon encoded as a Data URL. This value is only specified\n     * whenever the icon changes. The String itself may be empty. This\n     * indicates that there is no icon.\n     */\n    icon_change: string | null,\n    /** The name of the segment. */\n    name: string,\n    /** The segment's split time for the active timing method. */\n    split_time: string,\n    /** The segment time for the active timing method. */\n    segment_time: string,\n    /** The best segment time for the active timing method. */\n    best_segment_time: string,\n    /**\n     * All of the times of the custom comparison for the active timing method.\n     * The order of these matches up with the order of the custom comparisons\n     * provided by the Run Editor's State object.\n     */\n    comparison_times: string[],\n    /** Describes the segment's selection state. */\n    selected: \"NotSelected\" | \"Selected\" | \"Active\",\n}\n\n/**\n * A Semantic Color describes a color by some meaningful event that is\n * happening. This information can be visualized as a color, but can also be\n * interpreted in other ways by the consumer of this API.\n */\nexport type SemanticColor = \"Default\" |\n    \"AheadGainingTime\" |\n    \"AheadLosingTime\" |\n    \"BehindLosingTime\" |\n    \"BehindGainingTime\" |\n    \"BestSegment\" |\n    \"NotRunning\" |\n    \"Paused\" |\n    \"PersonalBest\";\n\n\n/**\n * The analysis module provides a variety of functions for calculating\n * information about runs.\n */\nexport class AnalysisRef {\n    ptr: number;\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * The analysis module provides a variety of functions for calculating\n * information about runs.\n */\nexport class AnalysisRefMut extends AnalysisRef {\n}\n\n/**\n * The analysis module provides a variety of functions for calculating\n * information about runs.\n */\nexport class Analysis extends AnalysisRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: Analysis) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            this.ptr = 0;\n        }\n    }\n    /**\n     * Calculates the Sum of Best Segments for the timing method provided. This is\n     * the fastest time possible to complete a run of a category, based on\n     * information collected from all the previous attempts. This often matches up\n     * with the sum of the best segment times of all the segments, but that may not\n     * always be the case, as skipped segments may introduce combined segments that\n     * may be faster than the actual sum of their best segment times. The name is\n     * therefore a bit misleading, but sticks around for historical reasons. You\n     * can choose to do a simple calculation instead, which excludes the Segment\n     * History from the calculation process. If there's an active attempt, you can\n     * choose to take it into account as well. Can return null.\n     */\n    static calculateSumOfBest(run: RunRef, simpleCalculation: boolean, useCurrentRun: boolean, method: number): TimeSpan | null {\n        if (run.ptr == 0) {\n            throw \"run is disposed\";\n        }\n        const result = new TimeSpan(instance().exports.Analysis_calculate_sum_of_best(run.ptr, simpleCalculation ? 1 : 0, useCurrentRun ? 1 : 0, method));\n        if (result.ptr == 0) {\n            return null;\n        }\n        return result;\n    }\n    /**\n     * Calculates the total playtime of the passed Run.\n     */\n    static calculateTotalPlaytimeForRun(run: RunRef): TimeSpan {\n        if (run.ptr == 0) {\n            throw \"run is disposed\";\n        }\n        const result = new TimeSpan(instance().exports.Analysis_calculate_total_playtime_for_run(run.ptr));\n        return result;\n    }\n    /**\n     * Calculates the total playtime of the passed Timer.\n     */\n    static calculateTotalPlaytimeForTimer(timer: TimerRef): TimeSpan {\n        if (timer.ptr == 0) {\n            throw \"timer is disposed\";\n        }\n        const result = new TimeSpan(instance().exports.Analysis_calculate_total_playtime_for_timer(timer.ptr));\n        return result;\n    }\n}\n\n/**\n * An Atomic Date Time represents a UTC Date Time that tries to be as close to\n * an atomic clock as possible.\n */\nexport class AtomicDateTimeRef {\n    ptr: number;\n    /**\n     * Represents whether the date time is actually properly derived from an\n     * atomic clock. If the synchronization with the atomic clock didn't happen\n     * yet or failed, this is set to false.\n     */\n    isSynchronized(): boolean {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.AtomicDateTime_is_synchronized(this.ptr) != 0;\n        return result;\n    }\n    /**\n     * Converts this atomic date time into a RFC 2822 formatted date time.\n     */\n    toRfc2822(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.AtomicDateTime_to_rfc2822(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * Converts this atomic date time into a RFC 3339 formatted date time.\n     */\n    toRfc3339(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.AtomicDateTime_to_rfc3339(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * An Atomic Date Time represents a UTC Date Time that tries to be as close to\n * an atomic clock as possible.\n */\nexport class AtomicDateTimeRefMut extends AtomicDateTimeRef {\n}\n\n/**\n * An Atomic Date Time represents a UTC Date Time that tries to be as close to\n * an atomic clock as possible.\n */\nexport class AtomicDateTime extends AtomicDateTimeRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: AtomicDateTime) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.AtomicDateTime_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n}\n\n/**\n * An Attempt describes information about an attempt to run a specific category\n * by a specific runner in the past. Every time a new attempt is started and\n * then reset, an Attempt describing general information about it is created.\n */\nexport class AttemptRef {\n    ptr: number;\n    /**\n     * Accesses the unique index of the attempt. This index is unique for the\n     * Run, not for all of them.\n     */\n    index(): number {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.Attempt_index(this.ptr);\n        return result;\n    }\n    /**\n     * Accesses the split time of the last segment. If the attempt got reset\n     * early and didn't finish, this may be empty.\n     */\n    time(): TimeRef {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new TimeRef(instance().exports.Attempt_time(this.ptr));\n        return result;\n    }\n    /**\n     * Accesses the amount of time the attempt has been paused for. If it is not\n     * known, this returns null. This means that it may not necessarily be\n     * possible to differentiate whether a Run has not been paused or it simply\n     * wasn't stored.\n     */\n    pauseTime(): TimeSpanRef | null {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new TimeSpanRef(instance().exports.Attempt_pause_time(this.ptr));\n        if (result.ptr == 0) {\n            return null;\n        }\n        return result;\n    }\n    /**\n     * Accesses the point in time the attempt was started at. This returns null\n     * if this information is not known.\n     */\n    started(): AtomicDateTime | null {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new AtomicDateTime(instance().exports.Attempt_started(this.ptr));\n        if (result.ptr == 0) {\n            return null;\n        }\n        return result;\n    }\n    /**\n     * Accesses the point in time the attempt was ended at. This returns null if\n     * this information is not known.\n     */\n    ended(): AtomicDateTime | null {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new AtomicDateTime(instance().exports.Attempt_ended(this.ptr));\n        if (result.ptr == 0) {\n            return null;\n        }\n        return result;\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * An Attempt describes information about an attempt to run a specific category\n * by a specific runner in the past. Every time a new attempt is started and\n * then reset, an Attempt describing general information about it is created.\n */\nexport class AttemptRefMut extends AttemptRef {\n}\n\n/**\n * An Attempt describes information about an attempt to run a specific category\n * by a specific runner in the past. Every time a new attempt is started and\n * then reset, an Attempt describing general information about it is created.\n */\nexport class Attempt extends AttemptRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: Attempt) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            this.ptr = 0;\n        }\n    }\n}\n\n/**\n * The Blank Space Component is simply an empty component that doesn't show\n * anything other than a background. It mostly serves as padding between other\n * components.\n */\nexport class BlankSpaceComponentRef {\n    ptr: number;\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * The Blank Space Component is simply an empty component that doesn't show\n * anything other than a background. It mostly serves as padding between other\n * components.\n */\nexport class BlankSpaceComponentRefMut extends BlankSpaceComponentRef {\n    /**\n     * Encodes the component's state information as JSON.\n     */\n    stateAsJson(timer: TimerRef): any {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (timer.ptr == 0) {\n            throw \"timer is disposed\";\n        }\n        const result = instance().exports.BlankSpaceComponent_state_as_json(this.ptr, timer.ptr);\n        return JSON.parse(decodeString(result));\n    }\n    /**\n     * Calculates the component's state based on the timer provided.\n     */\n    state(timer: TimerRef): BlankSpaceComponentState {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (timer.ptr == 0) {\n            throw \"timer is disposed\";\n        }\n        const result = new BlankSpaceComponentState(instance().exports.BlankSpaceComponent_state(this.ptr, timer.ptr));\n        return result;\n    }\n}\n\n/**\n * The Blank Space Component is simply an empty component that doesn't show\n * anything other than a background. It mostly serves as padding between other\n * components.\n */\nexport class BlankSpaceComponent extends BlankSpaceComponentRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: BlankSpaceComponent) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.BlankSpaceComponent_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n    /**\n     * Creates a new Blank Space Component.\n     */\n    static new(): BlankSpaceComponent {\n        const result = new BlankSpaceComponent(instance().exports.BlankSpaceComponent_new());\n        return result;\n    }\n    /**\n     * Converts the component into a generic component suitable for using with a\n     * layout.\n     */\n    intoGeneric(): Component {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new Component(instance().exports.BlankSpaceComponent_into_generic(this.ptr));\n        this.ptr = 0;\n        return result;\n    }\n}\n\n/**\n * The state object describes the information to visualize for this component.\n */\nexport class BlankSpaceComponentStateRef {\n    ptr: number;\n    /**\n     * The height of the component.\n     */\n    height(): number {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.BlankSpaceComponentState_height(this.ptr);\n        return result;\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * The state object describes the information to visualize for this component.\n */\nexport class BlankSpaceComponentStateRefMut extends BlankSpaceComponentStateRef {\n}\n\n/**\n * The state object describes the information to visualize for this component.\n */\nexport class BlankSpaceComponentState extends BlankSpaceComponentStateRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: BlankSpaceComponentState) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.BlankSpaceComponentState_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n}\n\n/**\n * A Component provides information about a run in a way that is easy to\n * visualize. This type can store any of the components provided by this crate.\n */\nexport class ComponentRef {\n    ptr: number;\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * A Component provides information about a run in a way that is easy to\n * visualize. This type can store any of the components provided by this crate.\n */\nexport class ComponentRefMut extends ComponentRef {\n}\n\n/**\n * A Component provides information about a run in a way that is easy to\n * visualize. This type can store any of the components provided by this crate.\n */\nexport class Component extends ComponentRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: Component) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.Component_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n}\n\n/**\n * The Current Comparison Component is a component that shows the name of the\n * comparison that is currently selected to be compared against.\n */\nexport class CurrentComparisonComponentRef {\n    ptr: number;\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * The Current Comparison Component is a component that shows the name of the\n * comparison that is currently selected to be compared against.\n */\nexport class CurrentComparisonComponentRefMut extends CurrentComparisonComponentRef {\n    /**\n     * Encodes the component's state information as JSON.\n     */\n    stateAsJson(timer: TimerRef): any {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (timer.ptr == 0) {\n            throw \"timer is disposed\";\n        }\n        const result = instance().exports.CurrentComparisonComponent_state_as_json(this.ptr, timer.ptr);\n        return JSON.parse(decodeString(result));\n    }\n    /**\n     * Calculates the component's state based on the timer provided.\n     */\n    state(timer: TimerRef): CurrentComparisonComponentState {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (timer.ptr == 0) {\n            throw \"timer is disposed\";\n        }\n        const result = new CurrentComparisonComponentState(instance().exports.CurrentComparisonComponent_state(this.ptr, timer.ptr));\n        return result;\n    }\n}\n\n/**\n * The Current Comparison Component is a component that shows the name of the\n * comparison that is currently selected to be compared against.\n */\nexport class CurrentComparisonComponent extends CurrentComparisonComponentRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: CurrentComparisonComponent) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.CurrentComparisonComponent_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n    /**\n     * Creates a new Current Comparison Component.\n     */\n    static new(): CurrentComparisonComponent {\n        const result = new CurrentComparisonComponent(instance().exports.CurrentComparisonComponent_new());\n        return result;\n    }\n    /**\n     * Converts the component into a generic component suitable for using with a\n     * layout.\n     */\n    intoGeneric(): Component {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new Component(instance().exports.CurrentComparisonComponent_into_generic(this.ptr));\n        this.ptr = 0;\n        return result;\n    }\n}\n\n/**\n * The state object describes the information to visualize for this component.\n */\nexport class CurrentComparisonComponentStateRef {\n    ptr: number;\n    /**\n     * The label's text.\n     */\n    text(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.CurrentComparisonComponentState_text(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * The name of the comparison that is currently selected to be compared\n     * against.\n     */\n    comparison(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.CurrentComparisonComponentState_comparison(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * The state object describes the information to visualize for this component.\n */\nexport class CurrentComparisonComponentStateRefMut extends CurrentComparisonComponentStateRef {\n}\n\n/**\n * The state object describes the information to visualize for this component.\n */\nexport class CurrentComparisonComponentState extends CurrentComparisonComponentStateRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: CurrentComparisonComponentState) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.CurrentComparisonComponentState_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n}\n\n/**\n * The Current Pace Component is a component that shows a prediction of the\n * current attempt's final time, if the current attempt's pace matches the\n * chosen comparison for the remainder of the run.\n */\nexport class CurrentPaceComponentRef {\n    ptr: number;\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * The Current Pace Component is a component that shows a prediction of the\n * current attempt's final time, if the current attempt's pace matches the\n * chosen comparison for the remainder of the run.\n */\nexport class CurrentPaceComponentRefMut extends CurrentPaceComponentRef {\n    /**\n     * Encodes the component's state information as JSON.\n     */\n    stateAsJson(timer: TimerRef): any {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (timer.ptr == 0) {\n            throw \"timer is disposed\";\n        }\n        const result = instance().exports.CurrentPaceComponent_state_as_json(this.ptr, timer.ptr);\n        return JSON.parse(decodeString(result));\n    }\n    /**\n     * Calculates the component's state based on the timer provided.\n     */\n    state(timer: TimerRef): CurrentPaceComponentState {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (timer.ptr == 0) {\n            throw \"timer is disposed\";\n        }\n        const result = new CurrentPaceComponentState(instance().exports.CurrentPaceComponent_state(this.ptr, timer.ptr));\n        return result;\n    }\n}\n\n/**\n * The Current Pace Component is a component that shows a prediction of the\n * current attempt's final time, if the current attempt's pace matches the\n * chosen comparison for the remainder of the run.\n */\nexport class CurrentPaceComponent extends CurrentPaceComponentRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: CurrentPaceComponent) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.CurrentPaceComponent_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n    /**\n     * Creates a new Current Pace Component.\n     */\n    static new(): CurrentPaceComponent {\n        const result = new CurrentPaceComponent(instance().exports.CurrentPaceComponent_new());\n        return result;\n    }\n    /**\n     * Converts the component into a generic component suitable for using with a\n     * layout.\n     */\n    intoGeneric(): Component {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new Component(instance().exports.CurrentPaceComponent_into_generic(this.ptr));\n        this.ptr = 0;\n        return result;\n    }\n}\n\n/**\n * The state object describes the information to visualize for this component.\n */\nexport class CurrentPaceComponentStateRef {\n    ptr: number;\n    /**\n     * The label's text.\n     */\n    text(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.CurrentPaceComponentState_text(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * The current pace.\n     */\n    time(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.CurrentPaceComponentState_time(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * The state object describes the information to visualize for this component.\n */\nexport class CurrentPaceComponentStateRefMut extends CurrentPaceComponentStateRef {\n}\n\n/**\n * The state object describes the information to visualize for this component.\n */\nexport class CurrentPaceComponentState extends CurrentPaceComponentStateRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: CurrentPaceComponentState) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.CurrentPaceComponentState_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n}\n\n/**\n * The Delta Component is a component that shows the how far ahead or behind\n * the current attempt is compared to the chosen comparison.\n */\nexport class DeltaComponentRef {\n    ptr: number;\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * The Delta Component is a component that shows the how far ahead or behind\n * the current attempt is compared to the chosen comparison.\n */\nexport class DeltaComponentRefMut extends DeltaComponentRef {\n    /**\n     * Encodes the component's state information as JSON.\n     */\n    stateAsJson(timer: TimerRef, layoutSettings: GeneralLayoutSettingsRef): any {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (timer.ptr == 0) {\n            throw \"timer is disposed\";\n        }\n        if (layoutSettings.ptr == 0) {\n            throw \"layoutSettings is disposed\";\n        }\n        const result = instance().exports.DeltaComponent_state_as_json(this.ptr, timer.ptr, layoutSettings.ptr);\n        return JSON.parse(decodeString(result));\n    }\n    /**\n     * Calculates the component's state based on the timer and the layout\n     * settings provided.\n     */\n    state(timer: TimerRef, layoutSettings: GeneralLayoutSettingsRef): DeltaComponentState {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (timer.ptr == 0) {\n            throw \"timer is disposed\";\n        }\n        if (layoutSettings.ptr == 0) {\n            throw \"layoutSettings is disposed\";\n        }\n        const result = new DeltaComponentState(instance().exports.DeltaComponent_state(this.ptr, timer.ptr, layoutSettings.ptr));\n        return result;\n    }\n}\n\n/**\n * The Delta Component is a component that shows the how far ahead or behind\n * the current attempt is compared to the chosen comparison.\n */\nexport class DeltaComponent extends DeltaComponentRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: DeltaComponent) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.DeltaComponent_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n    /**\n     * Creates a new Delta Component.\n     */\n    static new(): DeltaComponent {\n        const result = new DeltaComponent(instance().exports.DeltaComponent_new());\n        return result;\n    }\n    /**\n     * Converts the component into a generic component suitable for using with a\n     * layout.\n     */\n    intoGeneric(): Component {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new Component(instance().exports.DeltaComponent_into_generic(this.ptr));\n        this.ptr = 0;\n        return result;\n    }\n}\n\n/**\n * The state object describes the information to visualize for this component.\n */\nexport class DeltaComponentStateRef {\n    ptr: number;\n    /**\n     * The label's text.\n     */\n    text(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.DeltaComponentState_text(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * The delta.\n     */\n    time(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.DeltaComponentState_time(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * The semantic coloring information the delta time carries.\n     */\n    semanticColor(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.DeltaComponentState_semantic_color(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * The state object describes the information to visualize for this component.\n */\nexport class DeltaComponentStateRefMut extends DeltaComponentStateRef {\n}\n\n/**\n * The state object describes the information to visualize for this component.\n */\nexport class DeltaComponentState extends DeltaComponentStateRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: DeltaComponentState) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.DeltaComponentState_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n}\n\n/**\n * The Detailed Timer Component is a component that shows two timers, one for\n * the total time of the current attempt and one showing the time of just the\n * current segment. Other information, like segment times of up to two\n * comparisons, the segment icon, and the segment's name, can also be shown.\n */\nexport class DetailedTimerComponentRef {\n    ptr: number;\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * The Detailed Timer Component is a component that shows two timers, one for\n * the total time of the current attempt and one showing the time of just the\n * current segment. Other information, like segment times of up to two\n * comparisons, the segment icon, and the segment's name, can also be shown.\n */\nexport class DetailedTimerComponentRefMut extends DetailedTimerComponentRef {\n    /**\n     * Encodes the component's state information as JSON.\n     */\n    stateAsJson(timer: TimerRef, layoutSettings: GeneralLayoutSettingsRef): any {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (timer.ptr == 0) {\n            throw \"timer is disposed\";\n        }\n        if (layoutSettings.ptr == 0) {\n            throw \"layoutSettings is disposed\";\n        }\n        const result = instance().exports.DetailedTimerComponent_state_as_json(this.ptr, timer.ptr, layoutSettings.ptr);\n        return JSON.parse(decodeString(result));\n    }\n    /**\n     * Calculates the component's state based on the timer and layout settings\n     * provided.\n     */\n    state(timer: TimerRef, layoutSettings: GeneralLayoutSettingsRef): DetailedTimerComponentState {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (timer.ptr == 0) {\n            throw \"timer is disposed\";\n        }\n        if (layoutSettings.ptr == 0) {\n            throw \"layoutSettings is disposed\";\n        }\n        const result = new DetailedTimerComponentState(instance().exports.DetailedTimerComponent_state(this.ptr, timer.ptr, layoutSettings.ptr));\n        return result;\n    }\n}\n\n/**\n * The Detailed Timer Component is a component that shows two timers, one for\n * the total time of the current attempt and one showing the time of just the\n * current segment. Other information, like segment times of up to two\n * comparisons, the segment icon, and the segment's name, can also be shown.\n */\nexport class DetailedTimerComponent extends DetailedTimerComponentRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: DetailedTimerComponent) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.DetailedTimerComponent_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n    /**\n     * Creates a new Detailed Timer Component.\n     */\n    static new(): DetailedTimerComponent {\n        const result = new DetailedTimerComponent(instance().exports.DetailedTimerComponent_new());\n        return result;\n    }\n    /**\n     * Converts the component into a generic component suitable for using with a\n     * layout.\n     */\n    intoGeneric(): Component {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new Component(instance().exports.DetailedTimerComponent_into_generic(this.ptr));\n        this.ptr = 0;\n        return result;\n    }\n}\n\n/**\n * The state object describes the information to visualize for this component.\n */\nexport class DetailedTimerComponentStateRef {\n    ptr: number;\n    /**\n     * The time shown by the component's main timer without the fractional part.\n     */\n    timerTime(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.DetailedTimerComponentState_timer_time(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * The fractional part of the time shown by the main timer (including the dot).\n     */\n    timerFraction(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.DetailedTimerComponentState_timer_fraction(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * The semantic coloring information the main timer's time carries.\n     */\n    timerSemanticColor(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.DetailedTimerComponentState_timer_semantic_color(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * The time shown by the component's segment timer without the fractional part.\n     */\n    segmentTimerTime(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.DetailedTimerComponentState_segment_timer_time(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * The fractional part of the time shown by the segment timer (including the\n     * dot).\n     */\n    segmentTimerFraction(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.DetailedTimerComponentState_segment_timer_fraction(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * Returns whether the first comparison is visible.\n     */\n    comparison1Visible(): boolean {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.DetailedTimerComponentState_comparison1_visible(this.ptr) != 0;\n        return result;\n    }\n    /**\n     * Returns the name of the first comparison. You may not call this if the first\n     * comparison is not visible.\n     */\n    comparison1Name(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.DetailedTimerComponentState_comparison1_name(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * Returns the time of the first comparison. You may not call this if the first\n     * comparison is not visible.\n     */\n    comparison1Time(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.DetailedTimerComponentState_comparison1_time(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * Returns whether the second comparison is visible.\n     */\n    comparison2Visible(): boolean {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.DetailedTimerComponentState_comparison2_visible(this.ptr) != 0;\n        return result;\n    }\n    /**\n     * Returns the name of the second comparison. You may not call this if the\n     * second comparison is not visible.\n     */\n    comparison2Name(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.DetailedTimerComponentState_comparison2_name(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * Returns the time of the second comparison. You may not call this if the\n     * second comparison is not visible.\n     */\n    comparison2Time(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.DetailedTimerComponentState_comparison2_time(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * The segment's icon encoded as a Data URL. This value is only specified\n     * whenever the icon changes. If you explicitly want to query this value,\n     * remount the component. The String itself may be empty. This indicates\n     * that there is no icon.\n     */\n    iconChange(): string | null {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.DetailedTimerComponentState_icon_change(this.ptr);\n        if (result == 0) {\n            return null;\n        }\n        return decodeString(result);\n    }\n    /**\n     * The name of the segment. This may be null if it's not supposed to be\n     * visualized.\n     */\n    segmentName(): string | null {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.DetailedTimerComponentState_segment_name(this.ptr);\n        if (result == 0) {\n            return null;\n        }\n        return decodeString(result);\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * The state object describes the information to visualize for this component.\n */\nexport class DetailedTimerComponentStateRefMut extends DetailedTimerComponentStateRef {\n}\n\n/**\n * The state object describes the information to visualize for this component.\n */\nexport class DetailedTimerComponentState extends DetailedTimerComponentStateRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: DetailedTimerComponentState) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.DetailedTimerComponentState_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n}\n\n/**\n * With a Fuzzy List, you can implement a fuzzy searching algorithm. The list\n * stores all the items that can be searched for. With the `search` method you\n * can then execute the actual fuzzy search with returns a list of all the\n * elements found. This can be used to implement searching in a list of games.\n */\nexport class FuzzyListRef {\n    ptr: number;\n    /**\n     * Searches for the pattern provided in the list. A list of all the\n     * matching elements is returned. The returned list has a maximum amount of\n     * elements provided to this method.\n     */\n    search(pattern: string, max: number): any {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const pattern_allocated = allocString(pattern);\n        const result = instance().exports.FuzzyList_search(this.ptr, pattern_allocated.ptr, max);\n        dealloc(pattern_allocated);\n        return JSON.parse(decodeString(result));\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * With a Fuzzy List, you can implement a fuzzy searching algorithm. The list\n * stores all the items that can be searched for. With the `search` method you\n * can then execute the actual fuzzy search with returns a list of all the\n * elements found. This can be used to implement searching in a list of games.\n */\nexport class FuzzyListRefMut extends FuzzyListRef {\n    /**\n     * Adds a new element to the list.\n     */\n    push(text: string) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const text_allocated = allocString(text);\n        instance().exports.FuzzyList_push(this.ptr, text_allocated.ptr);\n        dealloc(text_allocated);\n    }\n}\n\n/**\n * With a Fuzzy List, you can implement a fuzzy searching algorithm. The list\n * stores all the items that can be searched for. With the `search` method you\n * can then execute the actual fuzzy search with returns a list of all the\n * elements found. This can be used to implement searching in a list of games.\n */\nexport class FuzzyList extends FuzzyListRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: FuzzyList) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.FuzzyList_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n    /**\n     * Creates a new Fuzzy List.\n     */\n    static new(): FuzzyList {\n        const result = new FuzzyList(instance().exports.FuzzyList_new());\n        return result;\n    }\n}\n\n/**\n * The general settings of the layout that apply to all components.\n */\nexport class GeneralLayoutSettingsRef {\n    ptr: number;\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * The general settings of the layout that apply to all components.\n */\nexport class GeneralLayoutSettingsRefMut extends GeneralLayoutSettingsRef {\n}\n\n/**\n * The general settings of the layout that apply to all components.\n */\nexport class GeneralLayoutSettings extends GeneralLayoutSettingsRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: GeneralLayoutSettings) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.GeneralLayoutSettings_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n    /**\n     * Creates a default general layout settings configuration.\n     */\n    static default(): GeneralLayoutSettings {\n        const result = new GeneralLayoutSettings(instance().exports.GeneralLayoutSettings_default());\n        return result;\n    }\n}\n\n/**\n * The Graph Component visualizes how far the current attempt has been ahead or\n * behind the chosen comparison throughout the whole attempt. All the\n * individual deltas are shown as points in a graph.\n */\nexport class GraphComponentRef {\n    ptr: number;\n    /**\n     * Encodes the component's state information as JSON.\n     */\n    stateAsJson(timer: TimerRef, layoutSettings: GeneralLayoutSettingsRef): any {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (timer.ptr == 0) {\n            throw \"timer is disposed\";\n        }\n        if (layoutSettings.ptr == 0) {\n            throw \"layoutSettings is disposed\";\n        }\n        const result = instance().exports.GraphComponent_state_as_json(this.ptr, timer.ptr, layoutSettings.ptr);\n        return JSON.parse(decodeString(result));\n    }\n    /**\n     * Calculates the component's state based on the timer and layout settings\n     * provided.\n     */\n    state(timer: TimerRef, layoutSettings: GeneralLayoutSettingsRef): GraphComponentState {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (timer.ptr == 0) {\n            throw \"timer is disposed\";\n        }\n        if (layoutSettings.ptr == 0) {\n            throw \"layoutSettings is disposed\";\n        }\n        const result = new GraphComponentState(instance().exports.GraphComponent_state(this.ptr, timer.ptr, layoutSettings.ptr));\n        return result;\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * The Graph Component visualizes how far the current attempt has been ahead or\n * behind the chosen comparison throughout the whole attempt. All the\n * individual deltas are shown as points in a graph.\n */\nexport class GraphComponentRefMut extends GraphComponentRef {\n}\n\n/**\n * The Graph Component visualizes how far the current attempt has been ahead or\n * behind the chosen comparison throughout the whole attempt. All the\n * individual deltas are shown as points in a graph.\n */\nexport class GraphComponent extends GraphComponentRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: GraphComponent) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.GraphComponent_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n    /**\n     * Creates a new Graph Component.\n     */\n    static new(): GraphComponent {\n        const result = new GraphComponent(instance().exports.GraphComponent_new());\n        return result;\n    }\n    /**\n     * Converts the component into a generic component suitable for using with a\n     * layout.\n     */\n    intoGeneric(): Component {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new Component(instance().exports.GraphComponent_into_generic(this.ptr));\n        this.ptr = 0;\n        return result;\n    }\n}\n\n/**\n * The state object describes the information to visualize for this component.\n * All the coordinates are in the range 0..1.\n */\nexport class GraphComponentStateRef {\n    ptr: number;\n    /**\n     * Returns the amount of points to visualize. Connect all of them to visualize\n     * the graph. If the live delta is active, the last point is to be interpreted\n     * as a preview of the next split that is about to happen. Use the partial fill\n     * color to visualize the region beneath that graph segment.\n     */\n    pointsLen(): number {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.GraphComponentState_points_len(this.ptr);\n        return result;\n    }\n    /**\n     * Returns the x coordinate of the point specified. You may not provide an out\n     * of bounds index.\n     */\n    pointX(index: number): number {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.GraphComponentState_point_x(this.ptr, index);\n        return result;\n    }\n    /**\n     * Returns the y coordinate of the point specified. You may not provide an out\n     * of bounds index.\n     */\n    pointY(index: number): number {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.GraphComponentState_point_y(this.ptr, index);\n        return result;\n    }\n    /**\n     * Describes whether the segment the point specified is visualizing achieved a\n     * new best segment time. Use the best segment color for it, in that case. You\n     * may not provide an out of bounds index.\n     */\n    pointIsBestSegment(index: number): boolean {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.GraphComponentState_point_is_best_segment(this.ptr, index) != 0;\n        return result;\n    }\n    /**\n     * Describes how many horizontal grid lines to visualize.\n     */\n    horizontalGridLinesLen(): number {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.GraphComponentState_horizontal_grid_lines_len(this.ptr);\n        return result;\n    }\n    /**\n     * Accesses the y coordinate of the horizontal grid line specified. You may not\n     * provide an out of bounds index.\n     */\n    horizontalGridLine(index: number): number {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.GraphComponentState_horizontal_grid_line(this.ptr, index);\n        return result;\n    }\n    /**\n     * Describes how many vertical grid lines to visualize.\n     */\n    verticalGridLinesLen(): number {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.GraphComponentState_vertical_grid_lines_len(this.ptr);\n        return result;\n    }\n    /**\n     * Accesses the x coordinate of the vertical grid line specified. You may not\n     * provide an out of bounds index.\n     */\n    verticalGridLine(index: number): number {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.GraphComponentState_vertical_grid_line(this.ptr, index);\n        return result;\n    }\n    /**\n     * The y coordinate that separates the region that shows the times that are\n     * ahead of the comparison and those that are behind.\n     */\n    middle(): number {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.GraphComponentState_middle(this.ptr);\n        return result;\n    }\n    /**\n     * If the live delta is active, the last point is to be interpreted as a\n     * preview of the next split that is about to happen. Use the partial fill\n     * color to visualize the region beneath that graph segment.\n     */\n    isLiveDeltaActive(): boolean {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.GraphComponentState_is_live_delta_active(this.ptr) != 0;\n        return result;\n    }\n    /**\n     * Describes whether the graph is flipped vertically. For visualizing the\n     * graph, this usually doesn't need to be interpreted, as this information is\n     * entirely encoded into the other variables.\n     */\n    isFlipped(): boolean {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.GraphComponentState_is_flipped(this.ptr) != 0;\n        return result;\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * The state object describes the information to visualize for this component.\n * All the coordinates are in the range 0..1.\n */\nexport class GraphComponentStateRefMut extends GraphComponentStateRef {\n}\n\n/**\n * The state object describes the information to visualize for this component.\n * All the coordinates are in the range 0..1.\n */\nexport class GraphComponentState extends GraphComponentStateRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: GraphComponentState) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.GraphComponentState_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n}\n\n/**\n * With a Hotkey System the runner can use hotkeys on their keyboard to control\n * the Timer. The hotkeys are global, so the application doesn't need to be in\n * focus. The behavior of the hotkeys depends on the platform and is stubbed\n * out on platforms that don't support hotkeys. You can turn off a Hotkey\n * System temporarily. By default the Hotkey System is activated.\n */\nexport class HotkeySystemRef {\n    ptr: number;\n    /**\n     * Deactivates the Hotkey System. No hotkeys will go through until it gets\n     * activated again. If it's already deactivated, nothing happens.\n     */\n    deactivate() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.HotkeySystem_deactivate(this.ptr);\n    }\n    /**\n     * Activates a previously deactivated Hotkey System. If it's already\n     * active, nothing happens.\n     */\n    activate() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.HotkeySystem_activate(this.ptr);\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * With a Hotkey System the runner can use hotkeys on their keyboard to control\n * the Timer. The hotkeys are global, so the application doesn't need to be in\n * focus. The behavior of the hotkeys depends on the platform and is stubbed\n * out on platforms that don't support hotkeys. You can turn off a Hotkey\n * System temporarily. By default the Hotkey System is activated.\n */\nexport class HotkeySystemRefMut extends HotkeySystemRef {\n}\n\n/**\n * With a Hotkey System the runner can use hotkeys on their keyboard to control\n * the Timer. The hotkeys are global, so the application doesn't need to be in\n * focus. The behavior of the hotkeys depends on the platform and is stubbed\n * out on platforms that don't support hotkeys. You can turn off a Hotkey\n * System temporarily. By default the Hotkey System is activated.\n */\nexport class HotkeySystem extends HotkeySystemRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: HotkeySystem) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.HotkeySystem_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n    /**\n     * Creates a new Hotkey System for a Timer with the default hotkeys.\n     */\n    static new(sharedTimer: SharedTimer): HotkeySystem | null {\n        if (sharedTimer.ptr == 0) {\n            throw \"sharedTimer is disposed\";\n        }\n        const result = new HotkeySystem(instance().exports.HotkeySystem_new(sharedTimer.ptr));\n        sharedTimer.ptr = 0;\n        if (result.ptr == 0) {\n            return null;\n        }\n        return result;\n    }\n}\n\n/**\n * A Layout allows you to combine multiple components together to visualize a\n * variety of information the runner is interested in.\n */\nexport class LayoutRef {\n    ptr: number;\n    /**\n     * Clones the layout.\n     */\n    clone(): Layout {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new Layout(instance().exports.Layout_clone(this.ptr));\n        return result;\n    }\n    /**\n     * Encodes the settings of the layout as JSON.\n     */\n    settingsAsJson(): any {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.Layout_settings_as_json(this.ptr);\n        return JSON.parse(decodeString(result));\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * A Layout allows you to combine multiple components together to visualize a\n * variety of information the runner is interested in.\n */\nexport class LayoutRefMut extends LayoutRef {\n    /**\n     * Calculates the layout's state based on the timer provided and encodes it as\n     * JSON. You can use this to visualize all of the components of a layout.\n     */\n    stateAsJson(timer: TimerRef): any {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (timer.ptr == 0) {\n            throw \"timer is disposed\";\n        }\n        const result = instance().exports.Layout_state_as_json(this.ptr, timer.ptr);\n        return JSON.parse(decodeString(result));\n    }\n    /**\n     * Adds a new component to the end of the layout.\n     */\n    push(component: Component) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (component.ptr == 0) {\n            throw \"component is disposed\";\n        }\n        instance().exports.Layout_push(this.ptr, component.ptr);\n        component.ptr = 0;\n    }\n    /**\n     * Scrolls up all the components in the layout that can be scrolled up.\n     */\n    scrollUp() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.Layout_scroll_up(this.ptr);\n    }\n    /**\n     * Scrolls down all the components in the layout that can be scrolled down.\n     */\n    scrollDown() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.Layout_scroll_down(this.ptr);\n    }\n    /**\n     * Remounts all the components as if they were freshly initialized. Some\n     * components may only provide some information whenever it changes or when\n     * their state is first queried. Remounting returns this information again,\n     * whenever the layout's state is queried the next time.\n     */\n    remount() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.Layout_remount(this.ptr);\n    }\n}\n\n/**\n * A Layout allows you to combine multiple components together to visualize a\n * variety of information the runner is interested in.\n */\nexport class Layout extends LayoutRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: Layout) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.Layout_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n    /**\n     * Creates a new empty layout with no components.\n     */\n    static new(): Layout {\n        const result = new Layout(instance().exports.Layout_new());\n        return result;\n    }\n    /**\n     * Creates a new default layout that contains a default set of components\n     * in order to provide a good default layout for runners. Which components\n     * are provided by this and how they are configured may change in the\n     * future.\n     */\n    static defaultLayout(): Layout {\n        const result = new Layout(instance().exports.Layout_default_layout());\n        return result;\n    }\n    /**\n     * Parses a layout from the given JSON description of its settings. null is\n     * returned if it couldn't be parsed.\n     */\n    static parseJson(settings: any): Layout | null {\n        const settings_allocated = allocString(JSON.stringify(settings));\n        const result = new Layout(instance().exports.Layout_parse_json(settings_allocated.ptr));\n        dealloc(settings_allocated);\n        if (result.ptr == 0) {\n            return null;\n        }\n        return result;\n    }\n}\n\n/**\n * The Layout Editor allows modifying Layouts while ensuring all the different\n * invariants of the Layout objects are upheld no matter what kind of\n * operations are being applied. It provides the current state of the editor as\n * state objects that can be visualized by any kind of User Interface.\n */\nexport class LayoutEditorRef {\n    ptr: number;\n    /**\n     * Encodes the Layout Editor's state as JSON in order to visualize it.\n     */\n    stateAsJson(): any {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.LayoutEditor_state_as_json(this.ptr);\n        return JSON.parse(decodeString(result));\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * The Layout Editor allows modifying Layouts while ensuring all the different\n * invariants of the Layout objects are upheld no matter what kind of\n * operations are being applied. It provides the current state of the editor as\n * state objects that can be visualized by any kind of User Interface.\n */\nexport class LayoutEditorRefMut extends LayoutEditorRef {\n    /**\n     * Encodes the layout's state as JSON based on the timer provided. You can use\n     * this to visualize all of the components of a layout, while it is still being\n     * edited by the Layout Editor.\n     */\n    layoutStateAsJson(timer: TimerRef): any {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (timer.ptr == 0) {\n            throw \"timer is disposed\";\n        }\n        const result = instance().exports.LayoutEditor_layout_state_as_json(this.ptr, timer.ptr);\n        return JSON.parse(decodeString(result));\n    }\n    /**\n     * Selects the component with the given index in order to modify its\n     * settings. Only a single component is selected at any given time. You may\n     * not provide an invalid index.\n     */\n    select(index: number) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.LayoutEditor_select(this.ptr, index);\n    }\n    /**\n     * Adds the component provided to the end of the layout. The newly added\n     * component becomes the selected component.\n     */\n    addComponent(component: Component) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (component.ptr == 0) {\n            throw \"component is disposed\";\n        }\n        instance().exports.LayoutEditor_add_component(this.ptr, component.ptr);\n        component.ptr = 0;\n    }\n    /**\n     * Removes the currently selected component, unless there's only one\n     * component in the layout. The next component becomes the selected\n     * component. If there's none, the previous component becomes the selected\n     * component instead.\n     */\n    removeComponent() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.LayoutEditor_remove_component(this.ptr);\n    }\n    /**\n     * Moves the selected component up, unless the first component is selected.\n     */\n    moveComponentUp() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.LayoutEditor_move_component_up(this.ptr);\n    }\n    /**\n     * Moves the selected component down, unless the last component is\n     * selected.\n     */\n    moveComponentDown() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.LayoutEditor_move_component_down(this.ptr);\n    }\n    /**\n     * Moves the selected component to the index provided. You may not provide\n     * an invalid index.\n     */\n    moveComponent(dstIndex: number) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.LayoutEditor_move_component(this.ptr, dstIndex);\n    }\n    /**\n     * Duplicates the currently selected component. The copy gets placed right\n     * after the selected component and becomes the newly selected component.\n     */\n    duplicateComponent() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.LayoutEditor_duplicate_component(this.ptr);\n    }\n    /**\n     * Sets a setting's value of the selected component by its setting index\n     * to the given value.\n     * \n     * This panics if the type of the value to be set is not compatible with\n     * the type of the setting's value. A panic can also occur if the index of\n     * the setting provided is out of bounds.\n     */\n    setComponentSettingsValue(index: number, value: SettingValue) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (value.ptr == 0) {\n            throw \"value is disposed\";\n        }\n        instance().exports.LayoutEditor_set_component_settings_value(this.ptr, index, value.ptr);\n        value.ptr = 0;\n    }\n    /**\n     * Sets a setting's value of the general settings by its setting index to\n     * the given value.\n     * \n     * This panics if the type of the value to be set is not compatible with\n     * the type of the setting's value. A panic can also occur if the index of\n     * the setting provided is out of bounds.\n     */\n    setGeneralSettingsValue(index: number, value: SettingValue) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (value.ptr == 0) {\n            throw \"value is disposed\";\n        }\n        instance().exports.LayoutEditor_set_general_settings_value(this.ptr, index, value.ptr);\n        value.ptr = 0;\n    }\n}\n\n/**\n * The Layout Editor allows modifying Layouts while ensuring all the different\n * invariants of the Layout objects are upheld no matter what kind of\n * operations are being applied. It provides the current state of the editor as\n * state objects that can be visualized by any kind of User Interface.\n */\nexport class LayoutEditor extends LayoutEditorRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: LayoutEditor) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            this.ptr = 0;\n        }\n    }\n    /**\n     * Creates a new Layout Editor that modifies the Layout provided. Creation of\n     * the Layout Editor fails when a Layout with no components is provided. In\n     * that case null is returned instead.\n     */\n    static new(layout: Layout): LayoutEditor | null {\n        if (layout.ptr == 0) {\n            throw \"layout is disposed\";\n        }\n        const result = new LayoutEditor(instance().exports.LayoutEditor_new(layout.ptr));\n        layout.ptr = 0;\n        if (result.ptr == 0) {\n            return null;\n        }\n        return result;\n    }\n    /**\n     * Closes the Layout Editor and gives back access to the modified Layout. In\n     * case you want to implement a Cancel Button, just dispose the Layout object\n     * you get here.\n     */\n    close(): Layout {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new Layout(instance().exports.LayoutEditor_close(this.ptr));\n        this.ptr = 0;\n        return result;\n    }\n}\n\n/**\n * A run parsed by the Composite Parser. This contains the Run itself and\n * information about which parser parsed it.\n */\nexport class ParseRunResultRef {\n    ptr: number;\n    /**\n     * Returns true if the Run got parsed successfully. false is returned otherwise.\n     */\n    parsedSuccessfully(): boolean {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.ParseRunResult_parsed_successfully(this.ptr) != 0;\n        return result;\n    }\n    /**\n     * Accesses the name of the Parser that parsed the Run.\n     */\n    timerKind(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.ParseRunResult_timer_kind(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * A run parsed by the Composite Parser. This contains the Run itself and\n * information about which parser parsed it.\n */\nexport class ParseRunResultRefMut extends ParseRunResultRef {\n}\n\n/**\n * A run parsed by the Composite Parser. This contains the Run itself and\n * information about which parser parsed it.\n */\nexport class ParseRunResult extends ParseRunResultRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: ParseRunResult) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.ParseRunResult_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n    /**\n     * Moves the actual Run object out of the Result. You may not call this if the\n     * Run wasn't parsed successfully.\n     */\n    unwrap(): Run {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new Run(instance().exports.ParseRunResult_unwrap(this.ptr));\n        this.ptr = 0;\n        return result;\n    }\n}\n\n/**\n * The Possible Time Save Component is a component that shows how much time the\n * chosen comparison could've saved for the current segment, based on the Best\n * Segments. This component also allows showing the Total Possible Time Save\n * for the remainder of the current attempt.\n */\nexport class PossibleTimeSaveComponentRef {\n    ptr: number;\n    /**\n     * Encodes the component's state information as JSON.\n     */\n    stateAsJson(timer: TimerRef): any {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (timer.ptr == 0) {\n            throw \"timer is disposed\";\n        }\n        const result = instance().exports.PossibleTimeSaveComponent_state_as_json(this.ptr, timer.ptr);\n        return JSON.parse(decodeString(result));\n    }\n    /**\n     * Calculates the component's state based on the timer provided.\n     */\n    state(timer: TimerRef): PossibleTimeSaveComponentState {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (timer.ptr == 0) {\n            throw \"timer is disposed\";\n        }\n        const result = new PossibleTimeSaveComponentState(instance().exports.PossibleTimeSaveComponent_state(this.ptr, timer.ptr));\n        return result;\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * The Possible Time Save Component is a component that shows how much time the\n * chosen comparison could've saved for the current segment, based on the Best\n * Segments. This component also allows showing the Total Possible Time Save\n * for the remainder of the current attempt.\n */\nexport class PossibleTimeSaveComponentRefMut extends PossibleTimeSaveComponentRef {\n}\n\n/**\n * The Possible Time Save Component is a component that shows how much time the\n * chosen comparison could've saved for the current segment, based on the Best\n * Segments. This component also allows showing the Total Possible Time Save\n * for the remainder of the current attempt.\n */\nexport class PossibleTimeSaveComponent extends PossibleTimeSaveComponentRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: PossibleTimeSaveComponent) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.PossibleTimeSaveComponent_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n    /**\n     * Creates a new Possible Time Save Component.\n     */\n    static new(): PossibleTimeSaveComponent {\n        const result = new PossibleTimeSaveComponent(instance().exports.PossibleTimeSaveComponent_new());\n        return result;\n    }\n    /**\n     * Converts the component into a generic component suitable for using with a\n     * layout.\n     */\n    intoGeneric(): Component {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new Component(instance().exports.PossibleTimeSaveComponent_into_generic(this.ptr));\n        this.ptr = 0;\n        return result;\n    }\n}\n\n/**\n * The state object describes the information to visualize for this component.\n */\nexport class PossibleTimeSaveComponentStateRef {\n    ptr: number;\n    /**\n     * The label's text.\n     */\n    text(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.PossibleTimeSaveComponentState_text(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * The current possible time save.\n     */\n    time(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.PossibleTimeSaveComponentState_time(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * The state object describes the information to visualize for this component.\n */\nexport class PossibleTimeSaveComponentStateRefMut extends PossibleTimeSaveComponentStateRef {\n}\n\n/**\n * The state object describes the information to visualize for this component.\n */\nexport class PossibleTimeSaveComponentState extends PossibleTimeSaveComponentStateRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: PossibleTimeSaveComponentState) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.PossibleTimeSaveComponentState_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n}\n\n/**\n * Describes a potential clean up that could be applied. You can query a\n * message describing the details of this potential clean up. A potential clean\n * up can then be turned into an actual clean up in order to apply it to the\n * Run.\n */\nexport class PotentialCleanUpRef {\n    ptr: number;\n    /**\n     * Accesses the message describing the potential clean up that can be applied\n     * to a Run.\n     */\n    message(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.PotentialCleanUp_message(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * Describes a potential clean up that could be applied. You can query a\n * message describing the details of this potential clean up. A potential clean\n * up can then be turned into an actual clean up in order to apply it to the\n * Run.\n */\nexport class PotentialCleanUpRefMut extends PotentialCleanUpRef {\n}\n\n/**\n * Describes a potential clean up that could be applied. You can query a\n * message describing the details of this potential clean up. A potential clean\n * up can then be turned into an actual clean up in order to apply it to the\n * Run.\n */\nexport class PotentialCleanUp extends PotentialCleanUpRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: PotentialCleanUp) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.PotentialCleanUp_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n}\n\n/**\n * The Previous Segment Component is a component that shows how much time was\n * saved or lost during the previous segment based on the chosen comparison.\n * Additionally, the potential time save for the previous segment can be\n * displayed. This component switches to a `Live Segment` view that shows\n * active time loss whenever the runner is losing time on the current segment.\n */\nexport class PreviousSegmentComponentRef {\n    ptr: number;\n    /**\n     * Encodes the component's state information as JSON.\n     */\n    stateAsJson(timer: TimerRef, layoutSettings: GeneralLayoutSettingsRef): any {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (timer.ptr == 0) {\n            throw \"timer is disposed\";\n        }\n        if (layoutSettings.ptr == 0) {\n            throw \"layoutSettings is disposed\";\n        }\n        const result = instance().exports.PreviousSegmentComponent_state_as_json(this.ptr, timer.ptr, layoutSettings.ptr);\n        return JSON.parse(decodeString(result));\n    }\n    /**\n     * Calculates the component's state based on the timer and the layout\n     * settings provided.\n     */\n    state(timer: TimerRef, layoutSettings: GeneralLayoutSettingsRef): PreviousSegmentComponentState {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (timer.ptr == 0) {\n            throw \"timer is disposed\";\n        }\n        if (layoutSettings.ptr == 0) {\n            throw \"layoutSettings is disposed\";\n        }\n        const result = new PreviousSegmentComponentState(instance().exports.PreviousSegmentComponent_state(this.ptr, timer.ptr, layoutSettings.ptr));\n        return result;\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * The Previous Segment Component is a component that shows how much time was\n * saved or lost during the previous segment based on the chosen comparison.\n * Additionally, the potential time save for the previous segment can be\n * displayed. This component switches to a `Live Segment` view that shows\n * active time loss whenever the runner is losing time on the current segment.\n */\nexport class PreviousSegmentComponentRefMut extends PreviousSegmentComponentRef {\n}\n\n/**\n * The Previous Segment Component is a component that shows how much time was\n * saved or lost during the previous segment based on the chosen comparison.\n * Additionally, the potential time save for the previous segment can be\n * displayed. This component switches to a `Live Segment` view that shows\n * active time loss whenever the runner is losing time on the current segment.\n */\nexport class PreviousSegmentComponent extends PreviousSegmentComponentRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: PreviousSegmentComponent) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.PreviousSegmentComponent_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n    /**\n     * Creates a new Previous Segment Component.\n     */\n    static new(): PreviousSegmentComponent {\n        const result = new PreviousSegmentComponent(instance().exports.PreviousSegmentComponent_new());\n        return result;\n    }\n    /**\n     * Converts the component into a generic component suitable for using with a\n     * layout.\n     */\n    intoGeneric(): Component {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new Component(instance().exports.PreviousSegmentComponent_into_generic(this.ptr));\n        this.ptr = 0;\n        return result;\n    }\n}\n\n/**\n * The state object describes the information to visualize for this component.\n */\nexport class PreviousSegmentComponentStateRef {\n    ptr: number;\n    /**\n     * The label's text.\n     */\n    text(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.PreviousSegmentComponentState_text(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * The delta (and possibly the possible time save).\n     */\n    time(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.PreviousSegmentComponentState_time(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * The semantic coloring information the delta time carries.\n     */\n    semanticColor(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.PreviousSegmentComponentState_semantic_color(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * The state object describes the information to visualize for this component.\n */\nexport class PreviousSegmentComponentStateRefMut extends PreviousSegmentComponentStateRef {\n}\n\n/**\n * The state object describes the information to visualize for this component.\n */\nexport class PreviousSegmentComponentState extends PreviousSegmentComponentStateRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: PreviousSegmentComponentState) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.PreviousSegmentComponentState_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n}\n\n/**\n * A Run stores the split times for a specific game and category of a runner.\n */\nexport class RunRef {\n    ptr: number;\n    /**\n     * Clones the Run object.\n     */\n    clone(): Run {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new Run(instance().exports.Run_clone(this.ptr));\n        return result;\n    }\n    /**\n     * Accesses the name of the game this Run is for.\n     */\n    gameName(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.Run_game_name(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * Accesses the Data URL storing the game icon's data. If there is no game\n     * icon, this returns an empty string instead of a URL.\n     */\n    gameIcon(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.Run_game_icon(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * Accesses the name of the category this Run is for.\n     */\n    categoryName(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.Run_category_name(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * Returns a file name (without the extension) suitable for this Run that\n     * is built the following way:\n     * \n     * Game Name - Category Name\n     * \n     * If either is empty, the dash is omitted. Special characters that cause\n     * problems in file names are also omitted. If an extended category name is\n     * used, the variables of the category are appended in a parenthesis.\n     */\n    extendedFileName(useExtendedCategoryName: boolean): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.Run_extended_file_name(this.ptr, useExtendedCategoryName ? 1 : 0);\n        return decodeString(result);\n    }\n    /**\n     * Returns a name suitable for this Run that is built the following way:\n     * \n     * Game Name - Category Name\n     * \n     * If either is empty, the dash is omitted. If an extended category name is\n     * used, the variables of the category are appended in a parenthesis.\n     */\n    extendedName(useExtendedCategoryName: boolean): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.Run_extended_name(this.ptr, useExtendedCategoryName ? 1 : 0);\n        return decodeString(result);\n    }\n    /**\n     * Returns an extended category name that possibly includes the region,\n     * platform and variables, depending on the arguments provided. An extended\n     * category name may look like this:\n     * \n     * Any% (No Tuner, JPN, Wii Emulator)\n     */\n    extendedCategoryName(showRegion: boolean, showPlatform: boolean, showVariables: boolean): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.Run_extended_category_name(this.ptr, showRegion ? 1 : 0, showPlatform ? 1 : 0, showVariables ? 1 : 0);\n        return decodeString(result);\n    }\n    /**\n     * Returns the amount of runs that have been attempted with these splits.\n     */\n    attemptCount(): number {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.Run_attempt_count(this.ptr);\n        return result;\n    }\n    /**\n     * Accesses additional metadata of this Run, like the platform and region\n     * of the game.\n     */\n    metadata(): RunMetadataRef {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new RunMetadataRef(instance().exports.Run_metadata(this.ptr));\n        return result;\n    }\n    /**\n     * Accesses the time an attempt of this Run should start at.\n     */\n    offset(): TimeSpanRef {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new TimeSpanRef(instance().exports.Run_offset(this.ptr));\n        return result;\n    }\n    /**\n     * Returns the amount of segments stored in this Run.\n     */\n    len(): number {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.Run_len(this.ptr);\n        return result;\n    }\n    /**\n     * Returns whether the Run has been modified and should be saved so that the\n     * changes don't get lost.\n     */\n    hasBeenModified(): boolean {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.Run_has_been_modified(this.ptr) != 0;\n        return result;\n    }\n    /**\n     * Accesses a certain segment of this Run. You may not provide an out of bounds\n     * index.\n     */\n    segment(index: number): SegmentRef {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new SegmentRef(instance().exports.Run_segment(this.ptr, index));\n        return result;\n    }\n    /**\n     * Returns the amount attempt history elements are stored in this Run.\n     */\n    attemptHistoryLen(): number {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.Run_attempt_history_len(this.ptr);\n        return result;\n    }\n    /**\n     * Accesses the an attempt history element by its index. This does not store\n     * the actual segment times, just the overall attempt information. Information\n     * about the individual segments is stored within each segment. You may not\n     * provide an out of bounds index.\n     */\n    attemptHistoryIndex(index: number): AttemptRef {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new AttemptRef(instance().exports.Run_attempt_history_index(this.ptr, index));\n        return result;\n    }\n    /**\n     * Saves a Run as a LiveSplit splits file (*.lss). If the run is actively in\n     * use by a timer, use the appropriate method on the timer instead, in order to\n     * properly save the current attempt as well.\n     */\n    saveAsLss(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.Run_save_as_lss(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * Returns the amount of custom comparisons stored in this Run.\n     */\n    customComparisonsLen(): number {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.Run_custom_comparisons_len(this.ptr);\n        return result;\n    }\n    /**\n     * Accesses a custom comparison stored in this Run by its index. This includes\n     * `Personal Best` but excludes all the other Comparison Generators. You may\n     * not provide an out of bounds index.\n     */\n    customComparison(index: number): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.Run_custom_comparison(this.ptr, index);\n        return decodeString(result);\n    }\n    /**\n     * Accesses the Auto Splitter Settings that are encoded as XML.\n     */\n    autoSplitterSettings(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.Run_auto_splitter_settings(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * A Run stores the split times for a specific game and category of a runner.\n */\nexport class RunRefMut extends RunRef {\n    /**\n     * Pushes the segment provided to the end of the list of segments of this Run.\n     */\n    pushSegment(segment: Segment) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (segment.ptr == 0) {\n            throw \"segment is disposed\";\n        }\n        instance().exports.Run_push_segment(this.ptr, segment.ptr);\n        segment.ptr = 0;\n    }\n    /**\n     * Sets the name of the game this Run is for.\n     */\n    setGameName(game: string) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const game_allocated = allocString(game);\n        instance().exports.Run_set_game_name(this.ptr, game_allocated.ptr);\n        dealloc(game_allocated);\n    }\n    /**\n     * Sets the name of the category this Run is for.\n     */\n    setCategoryName(category: string) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const category_allocated = allocString(category);\n        instance().exports.Run_set_category_name(this.ptr, category_allocated.ptr);\n        dealloc(category_allocated);\n    }\n    /**\n     * Marks the Run as modified, so that it is known that there are changes\n     * that should be saved.\n     */\n    markAsModified() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.Run_mark_as_modified(this.ptr);\n    }\n}\n\n/**\n * A Run stores the split times for a specific game and category of a runner.\n */\nexport class Run extends RunRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: Run) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.Run_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n    /**\n     * Creates a new Run object with no segments.\n     */\n    static new(): Run {\n        const result = new Run(instance().exports.Run_new());\n        return result;\n    }\n    /**\n     * Attempts to parse a splits file from an array by invoking the corresponding\n     * parser for the file format detected. A path to the splits file can be\n     * provided, which helps saving the splits file again later. Additionally you\n     * need to specify if additional files, like external images are allowed to be\n     * loaded. If you are using livesplit-core in a server-like environment, set\n     * this to false. Only client-side applications should set this to true.\n     */\n    static parse(data: number, length: number, path: string, loadFiles: boolean): ParseRunResult {\n        const path_allocated = allocString(path);\n        const result = new ParseRunResult(instance().exports.Run_parse(data, length, path_allocated.ptr, loadFiles ? 1 : 0));\n        dealloc(path_allocated);\n        return result;\n    }\n    /**\n     * Attempts to parse a splits file from a file by invoking the corresponding\n     * parser for the file format detected. A path to the splits file can be\n     * provided, which helps saving the splits file again later. Additionally you\n     * need to specify if additional files, like external images are allowed to be\n     * loaded. If you are using livesplit-core in a server-like environment, set\n     * this to false. Only client-side applications should set this to true. On\n     * Unix you pass a file descriptor to this function. On Windows you pass a file\n     * handle to this function. The file descriptor / handle does not get closed.\n     */\n    static parseFileHandle(handle: number, path: string, loadFiles: boolean): ParseRunResult {\n        const path_allocated = allocString(path);\n        const result = new ParseRunResult(instance().exports.Run_parse_file_handle(handle, path_allocated.ptr, loadFiles ? 1 : 0));\n        dealloc(path_allocated);\n        return result;\n    }\n    static parseArray(data: Int8Array, path: string, loadFiles: boolean): ParseRunResult {\n        const slice = allocInt8Array(data);\n        const result = Run.parse(slice.ptr, slice.len, path, loadFiles);\n        dealloc(slice);\n        return result;\n    }\n    static parseString(text: string, path: string, loadFiles: boolean): ParseRunResult {\n        const slice = allocString(text);\n        const result = Run.parse(slice.ptr, slice.len, path, loadFiles);\n        dealloc(slice);\n        return result;\n    }\n}\n\n/**\n * The Run Editor allows modifying Runs while ensuring that all the different\n * invariants of the Run objects are upheld no matter what kind of operations\n * are being applied to the Run. It provides the current state of the editor as\n * state objects that can be visualized by any kind of User Interface.\n */\nexport class RunEditorRef {\n    ptr: number;\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * The Run Editor allows modifying Runs while ensuring that all the different\n * invariants of the Run objects are upheld no matter what kind of operations\n * are being applied to the Run. It provides the current state of the editor as\n * state objects that can be visualized by any kind of User Interface.\n */\nexport class RunEditorRefMut extends RunEditorRef {\n    /**\n     * Calculates the Run Editor's state and encodes it as\n     * JSON in order to visualize it.\n     */\n    stateAsJson(): any {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.RunEditor_state_as_json(this.ptr);\n        return JSON.parse(decodeString(result));\n    }\n    /**\n     * Selects a different timing method for being modified.\n     */\n    selectTimingMethod(method: number) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.RunEditor_select_timing_method(this.ptr, method);\n    }\n    /**\n     * Unselects the segment with the given index. If it's not selected or the\n     * index is out of bounds, nothing happens. The segment is not unselected,\n     * when it is the only segment that is selected. If the active segment is\n     * unselected, the most recently selected segment remaining becomes the\n     * active segment.\n     */\n    unselect(index: number) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.RunEditor_unselect(this.ptr, index);\n    }\n    /**\n     * In addition to the segments that are already selected, the segment with\n     * the given index is being selected. The segment chosen also becomes the\n     * active segment.\n     * \n     * This panics if the index of the segment provided is out of bounds.\n     */\n    selectAdditionally(index: number) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.RunEditor_select_additionally(this.ptr, index);\n    }\n    /**\n     * Selects the segment with the given index. All other segments are\n     * unselected. The segment chosen also becomes the active segment.\n     * \n     * This panics if the index of the segment provided is out of bounds.\n     */\n    selectOnly(index: number) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.RunEditor_select_only(this.ptr, index);\n    }\n    /**\n     * Sets the name of the game.\n     */\n    setGameName(game: string) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const game_allocated = allocString(game);\n        instance().exports.RunEditor_set_game_name(this.ptr, game_allocated.ptr);\n        dealloc(game_allocated);\n    }\n    /**\n     * Sets the name of the category.\n     */\n    setCategoryName(category: string) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const category_allocated = allocString(category);\n        instance().exports.RunEditor_set_category_name(this.ptr, category_allocated.ptr);\n        dealloc(category_allocated);\n    }\n    /**\n     * Parses and sets the timer offset from the string provided. The timer\n     * offset specifies the time, the timer starts at when starting a new\n     * attempt.\n     */\n    parseAndSetOffset(offset: string): boolean {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const offset_allocated = allocString(offset);\n        const result = instance().exports.RunEditor_parse_and_set_offset(this.ptr, offset_allocated.ptr) != 0;\n        dealloc(offset_allocated);\n        return result;\n    }\n    /**\n     * Parses and sets the attempt count from the string provided. Changing\n     * this has no affect on the attempt history or the segment history. This\n     * number is mostly just a visual number for the runner.\n     */\n    parseAndSetAttemptCount(attempts: string): boolean {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const attempts_allocated = allocString(attempts);\n        const result = instance().exports.RunEditor_parse_and_set_attempt_count(this.ptr, attempts_allocated.ptr) != 0;\n        dealloc(attempts_allocated);\n        return result;\n    }\n    /**\n     * Sets the game's icon.\n     */\n    setGameIcon(data: number, length: number) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.RunEditor_set_game_icon(this.ptr, data, length);\n    }\n    /**\n     * Removes the game's icon.\n     */\n    removeGameIcon() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.RunEditor_remove_game_icon(this.ptr);\n    }\n    /**\n     * Sets the speedrun.com Run ID of the run. You need to ensure that the\n     * record on speedrun.com matches up with the Personal Best of this run.\n     * This may be empty if there's no association.\n     */\n    setRunId(name: string) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const name_allocated = allocString(name);\n        instance().exports.RunEditor_set_run_id(this.ptr, name_allocated.ptr);\n        dealloc(name_allocated);\n    }\n    /**\n     * Sets the name of the region this game is from. This may be empty if it's\n     * not specified.\n     */\n    setRegionName(name: string) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const name_allocated = allocString(name);\n        instance().exports.RunEditor_set_region_name(this.ptr, name_allocated.ptr);\n        dealloc(name_allocated);\n    }\n    /**\n     * Sets the name of the platform this game is run on. This may be empty if\n     * it's not specified.\n     */\n    setPlatformName(name: string) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const name_allocated = allocString(name);\n        instance().exports.RunEditor_set_platform_name(this.ptr, name_allocated.ptr);\n        dealloc(name_allocated);\n    }\n    /**\n     * Specifies whether this speedrun is done on an emulator. Keep in mind\n     * that false may also mean that this information is simply not known.\n     */\n    setEmulatorUsage(usesEmulator: boolean) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.RunEditor_set_emulator_usage(this.ptr, usesEmulator ? 1 : 0);\n    }\n    /**\n     * Sets the variable with the name specified to the value specified. A\n     * variable is an arbitrary key value pair storing additional information\n     * about the category. An example of this may be whether Amiibos are used\n     * in this category. If the variable doesn't exist yet, it is being\n     * inserted.\n     */\n    setVariable(name: string, value: string) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const name_allocated = allocString(name);\n        const value_allocated = allocString(value);\n        instance().exports.RunEditor_set_variable(this.ptr, name_allocated.ptr, value_allocated.ptr);\n        dealloc(name_allocated);\n        dealloc(value_allocated);\n    }\n    /**\n     * Removes the variable with the name specified.\n     */\n    removeVariable(name: string) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const name_allocated = allocString(name);\n        instance().exports.RunEditor_remove_variable(this.ptr, name_allocated.ptr);\n        dealloc(name_allocated);\n    }\n    /**\n     * Resets all the Metadata Information.\n     */\n    clearMetadata() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.RunEditor_clear_metadata(this.ptr);\n    }\n    /**\n     * Inserts a new empty segment above the active segment and adjusts the\n     * Run's history information accordingly. The newly created segment is then\n     * the only selected segment and also the active segment.\n     */\n    insertSegmentAbove() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.RunEditor_insert_segment_above(this.ptr);\n    }\n    /**\n     * Inserts a new empty segment below the active segment and adjusts the\n     * Run's history information accordingly. The newly created segment is then\n     * the only selected segment and also the active segment.\n     */\n    insertSegmentBelow() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.RunEditor_insert_segment_below(this.ptr);\n    }\n    /**\n     * Removes all the selected segments, unless all of them are selected. The\n     * run's information is automatically adjusted properly. The next\n     * not-to-be-removed segment after the active segment becomes the new\n     * active segment. If there's none, then the next not-to-be-removed segment\n     * before the active segment, becomes the new active segment.\n     */\n    removeSegments() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.RunEditor_remove_segments(this.ptr);\n    }\n    /**\n     * Moves all the selected segments up, unless the first segment is\n     * selected. The run's information is automatically adjusted properly. The\n     * active segment stays the active segment.\n     */\n    moveSegmentsUp() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.RunEditor_move_segments_up(this.ptr);\n    }\n    /**\n     * Moves all the selected segments down, unless the last segment is\n     * selected. The run's information is automatically adjusted properly. The\n     * active segment stays the active segment.\n     */\n    moveSegmentsDown() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.RunEditor_move_segments_down(this.ptr);\n    }\n    /**\n     * Sets the icon of the active segment.\n     */\n    activeSetIcon(data: number, length: number) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.RunEditor_active_set_icon(this.ptr, data, length);\n    }\n    /**\n     * Removes the icon of the active segment.\n     */\n    activeRemoveIcon() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.RunEditor_active_remove_icon(this.ptr);\n    }\n    /**\n     * Sets the name of the active segment.\n     */\n    activeSetName(name: string) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const name_allocated = allocString(name);\n        instance().exports.RunEditor_active_set_name(this.ptr, name_allocated.ptr);\n        dealloc(name_allocated);\n    }\n    /**\n     * Parses a split time from a string and sets it for the active segment with\n     * the chosen timing method.\n     */\n    activeParseAndSetSplitTime(time: string): boolean {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const time_allocated = allocString(time);\n        const result = instance().exports.RunEditor_active_parse_and_set_split_time(this.ptr, time_allocated.ptr) != 0;\n        dealloc(time_allocated);\n        return result;\n    }\n    /**\n     * Parses a segment time from a string and sets it for the active segment with\n     * the chosen timing method.\n     */\n    activeParseAndSetSegmentTime(time: string): boolean {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const time_allocated = allocString(time);\n        const result = instance().exports.RunEditor_active_parse_and_set_segment_time(this.ptr, time_allocated.ptr) != 0;\n        dealloc(time_allocated);\n        return result;\n    }\n    /**\n     * Parses a best segment time from a string and sets it for the active segment\n     * with the chosen timing method.\n     */\n    activeParseAndSetBestSegmentTime(time: string): boolean {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const time_allocated = allocString(time);\n        const result = instance().exports.RunEditor_active_parse_and_set_best_segment_time(this.ptr, time_allocated.ptr) != 0;\n        dealloc(time_allocated);\n        return result;\n    }\n    /**\n     * Parses a comparison time for the provided comparison and sets it for the\n     * active active segment with the chosen timing method.\n     */\n    activeParseAndSetComparisonTime(comparison: string, time: string): boolean {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const comparison_allocated = allocString(comparison);\n        const time_allocated = allocString(time);\n        const result = instance().exports.RunEditor_active_parse_and_set_comparison_time(this.ptr, comparison_allocated.ptr, time_allocated.ptr) != 0;\n        dealloc(comparison_allocated);\n        dealloc(time_allocated);\n        return result;\n    }\n    /**\n     * Adds a new custom comparison. It can't be added if it starts with\n     * `[Race]` or already exists.\n     */\n    addComparison(comparison: string): boolean {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const comparison_allocated = allocString(comparison);\n        const result = instance().exports.RunEditor_add_comparison(this.ptr, comparison_allocated.ptr) != 0;\n        dealloc(comparison_allocated);\n        return result;\n    }\n    /**\n     * Imports the Personal Best from the provided run as a comparison. The\n     * comparison can't be added if its name starts with `[Race]` or it already\n     * exists.\n     */\n    importComparison(run: RunRef, comparison: string): boolean {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (run.ptr == 0) {\n            throw \"run is disposed\";\n        }\n        const comparison_allocated = allocString(comparison);\n        const result = instance().exports.RunEditor_import_comparison(this.ptr, run.ptr, comparison_allocated.ptr) != 0;\n        dealloc(comparison_allocated);\n        return result;\n    }\n    /**\n     * Removes the chosen custom comparison. You can't remove a Comparison\n     * Generator's Comparison or the Personal Best.\n     */\n    removeComparison(comparison: string) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const comparison_allocated = allocString(comparison);\n        instance().exports.RunEditor_remove_comparison(this.ptr, comparison_allocated.ptr);\n        dealloc(comparison_allocated);\n    }\n    /**\n     * Renames a comparison. The comparison can't be renamed if the new name of\n     * the comparison starts with `[Race]` or it already exists.\n     */\n    renameComparison(oldName: string, newName: string): boolean {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const oldName_allocated = allocString(oldName);\n        const newName_allocated = allocString(newName);\n        const result = instance().exports.RunEditor_rename_comparison(this.ptr, oldName_allocated.ptr, newName_allocated.ptr) != 0;\n        dealloc(oldName_allocated);\n        dealloc(newName_allocated);\n        return result;\n    }\n    /**\n     * Reorders the custom comparisons by moving the comparison with the source\n     * index specified to the destination index specified. Returns false if one\n     * of the indices is invalid. The indices are based on the comparison names of\n     * the Run Editor's state.\n     */\n    moveComparison(srcIndex: number, dstIndex: number): boolean {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.RunEditor_move_comparison(this.ptr, srcIndex, dstIndex) != 0;\n        return result;\n    }\n    /**\n     * Clears out the Attempt History and the Segment Histories of all the\n     * segments.\n     */\n    clearHistory() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.RunEditor_clear_history(this.ptr);\n    }\n    /**\n     * Clears out the Attempt History, the Segment Histories, all the times,\n     * sets the Attempt Count to 0 and clears the speedrun.com run id\n     * association. All Custom Comparisons other than `Personal Best` are\n     * deleted as well.\n     */\n    clearTimes() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.RunEditor_clear_times(this.ptr);\n    }\n    /**\n     * Creates a Sum of Best Cleaner which allows you to interactively remove\n     * potential issues in the segment history that lead to an inaccurate Sum\n     * of Best. If you skip a split, whenever you will do the next split, the\n     * combined segment time might be faster than the sum of the individual\n     * best segments. The Sum of Best Cleaner will point out all of these and\n     * allows you to delete them individually if any of them seem wrong.\n     */\n    cleanSumOfBest(): SumOfBestCleaner {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new SumOfBestCleaner(instance().exports.RunEditor_clean_sum_of_best(this.ptr));\n        return result;\n    }\n    setGameIconFromArray(data: Int8Array) {\n        const slice = allocInt8Array(data);\n        this.setGameIcon(slice.ptr, slice.len);\n        dealloc(slice);\n    }\n    activeSetIconFromArray(data: Int8Array) {\n        const slice = allocInt8Array(data);\n        this.activeSetIcon(slice.ptr, slice.len);\n        dealloc(slice);\n    }\n}\n\n/**\n * The Run Editor allows modifying Runs while ensuring that all the different\n * invariants of the Run objects are upheld no matter what kind of operations\n * are being applied to the Run. It provides the current state of the editor as\n * state objects that can be visualized by any kind of User Interface.\n */\nexport class RunEditor extends RunEditorRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: RunEditor) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            this.ptr = 0;\n        }\n    }\n    /**\n     * Creates a new Run Editor that modifies the Run provided. Creation of the Run\n     * Editor fails when a Run with no segments is provided. If a Run object with\n     * no segments is provided, the Run Editor creation fails and null is\n     * returned.\n     */\n    static new(run: Run): RunEditor | null {\n        if (run.ptr == 0) {\n            throw \"run is disposed\";\n        }\n        const result = new RunEditor(instance().exports.RunEditor_new(run.ptr));\n        run.ptr = 0;\n        if (result.ptr == 0) {\n            return null;\n        }\n        return result;\n    }\n    /**\n     * Closes the Run Editor and gives back access to the modified Run object. In\n     * case you want to implement a Cancel Button, just dispose the Run object you\n     * get here.\n     */\n    close(): Run {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new Run(instance().exports.RunEditor_close(this.ptr));\n        this.ptr = 0;\n        return result;\n    }\n}\n\n/**\n * The Run Metadata stores additional information about a run, like the\n * platform and region of the game. All of this information is optional.\n */\nexport class RunMetadataRef {\n    ptr: number;\n    /**\n     * Accesses the speedrun.com Run ID of the run. This Run ID specify which\n     * Record on speedrun.com this run is associated with. This should be\n     * changed once the Personal Best doesn't match up with that record\n     * anymore. This may be empty if there's no association.\n     */\n    runId(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.RunMetadata_run_id(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * Accesses the name of the platform this game is run on. This may be empty\n     * if it's not specified.\n     */\n    platformName(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.RunMetadata_platform_name(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * Returns true if this speedrun is done on an emulator. However false\n     * may also indicate that this information is simply not known.\n     */\n    usesEmulator(): boolean {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.RunMetadata_uses_emulator(this.ptr) != 0;\n        return result;\n    }\n    /**\n     * Accesses the name of the region this game is from. This may be empty if\n     * it's not specified.\n     */\n    regionName(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.RunMetadata_region_name(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * Returns an iterator iterating over all the variables and their values\n     * that have been specified.\n     */\n    variables(): RunMetadataVariablesIter {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new RunMetadataVariablesIter(instance().exports.RunMetadata_variables(this.ptr));\n        return result;\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * The Run Metadata stores additional information about a run, like the\n * platform and region of the game. All of this information is optional.\n */\nexport class RunMetadataRefMut extends RunMetadataRef {\n}\n\n/**\n * The Run Metadata stores additional information about a run, like the\n * platform and region of the game. All of this information is optional.\n */\nexport class RunMetadata extends RunMetadataRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: RunMetadata) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            this.ptr = 0;\n        }\n    }\n}\n\n/**\n * A Run Metadata variable is an arbitrary key value pair storing additional\n * information about the category. An example of this may be whether Amiibos\n * are used in the category.\n */\nexport class RunMetadataVariableRef {\n    ptr: number;\n    /**\n     * Accesses the name of this Run Metadata variable.\n     */\n    name(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.RunMetadataVariable_name(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * Accesses the value of this Run Metadata variable.\n     */\n    value(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.RunMetadataVariable_value(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * A Run Metadata variable is an arbitrary key value pair storing additional\n * information about the category. An example of this may be whether Amiibos\n * are used in the category.\n */\nexport class RunMetadataVariableRefMut extends RunMetadataVariableRef {\n}\n\n/**\n * A Run Metadata variable is an arbitrary key value pair storing additional\n * information about the category. An example of this may be whether Amiibos\n * are used in the category.\n */\nexport class RunMetadataVariable extends RunMetadataVariableRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: RunMetadataVariable) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.RunMetadataVariable_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n}\n\n/**\n * An iterator iterating over all the Run Metadata variables and their values\n * that have been specified.\n */\nexport class RunMetadataVariablesIterRef {\n    ptr: number;\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * An iterator iterating over all the Run Metadata variables and their values\n * that have been specified.\n */\nexport class RunMetadataVariablesIterRefMut extends RunMetadataVariablesIterRef {\n    /**\n     * Accesses the next Run Metadata variable. Returns null if there are no more\n     * variables.\n     */\n    next(): RunMetadataVariableRef | null {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new RunMetadataVariableRef(instance().exports.RunMetadataVariablesIter_next(this.ptr));\n        if (result.ptr == 0) {\n            return null;\n        }\n        return result;\n    }\n}\n\n/**\n * An iterator iterating over all the Run Metadata variables and their values\n * that have been specified.\n */\nexport class RunMetadataVariablesIter extends RunMetadataVariablesIterRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: RunMetadataVariablesIter) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.RunMetadataVariablesIter_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n}\n\n/**\n * A Segment describes a point in a speedrun that is suitable for storing a\n * split time. This stores the name of that segment, an icon, the split times\n * of different comparisons, and a history of segment times.\n */\nexport class SegmentRef {\n    ptr: number;\n    /**\n     * Accesses the name of the segment.\n     */\n    name(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.Segment_name(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * Accesses the icon of the segment encoded as a Data URL storing the image's\n     * data. If the image's data is empty, this returns an empty string instead of\n     * a URL.\n     */\n    icon(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.Segment_icon(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * Accesses the specified comparison's time. If there's none for this\n     * comparison, an empty time is being returned (but not stored in the\n     * segment).\n     */\n    comparison(comparison: string): TimeRef {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const comparison_allocated = allocString(comparison);\n        const result = new TimeRef(instance().exports.Segment_comparison(this.ptr, comparison_allocated.ptr));\n        dealloc(comparison_allocated);\n        return result;\n    }\n    /**\n     * Accesses the split time of the Personal Best for this segment. If it\n     * doesn't exist, an empty time is returned.\n     */\n    personalBestSplitTime(): TimeRef {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new TimeRef(instance().exports.Segment_personal_best_split_time(this.ptr));\n        return result;\n    }\n    /**\n     * Accesses the Best Segment Time.\n     */\n    bestSegmentTime(): TimeRef {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new TimeRef(instance().exports.Segment_best_segment_time(this.ptr));\n        return result;\n    }\n    /**\n     * Accesses the Segment History of this segment.\n     */\n    segmentHistory(): SegmentHistoryRef {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new SegmentHistoryRef(instance().exports.Segment_segment_history(this.ptr));\n        return result;\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * A Segment describes a point in a speedrun that is suitable for storing a\n * split time. This stores the name of that segment, an icon, the split times\n * of different comparisons, and a history of segment times.\n */\nexport class SegmentRefMut extends SegmentRef {\n}\n\n/**\n * A Segment describes a point in a speedrun that is suitable for storing a\n * split time. This stores the name of that segment, an icon, the split times\n * of different comparisons, and a history of segment times.\n */\nexport class Segment extends SegmentRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: Segment) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.Segment_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n    /**\n     * Creates a new Segment with the name given.\n     */\n    static new(name: string): Segment {\n        const name_allocated = allocString(name);\n        const result = new Segment(instance().exports.Segment_new(name_allocated.ptr));\n        dealloc(name_allocated);\n        return result;\n    }\n}\n\n/**\n * Stores the segment times achieved for a certain segment. Each segment is\n * tagged with an index. Only segment times with an index larger than 0 are\n * considered times actually achieved by the runner, while the others are\n * artifacts of route changes and similar algorithmic changes.\n */\nexport class SegmentHistoryRef {\n    ptr: number;\n    /**\n     * Iterates over all the segment times and their indices.\n     */\n    iter(): SegmentHistoryIter {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new SegmentHistoryIter(instance().exports.SegmentHistory_iter(this.ptr));\n        return result;\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * Stores the segment times achieved for a certain segment. Each segment is\n * tagged with an index. Only segment times with an index larger than 0 are\n * considered times actually achieved by the runner, while the others are\n * artifacts of route changes and similar algorithmic changes.\n */\nexport class SegmentHistoryRefMut extends SegmentHistoryRef {\n}\n\n/**\n * Stores the segment times achieved for a certain segment. Each segment is\n * tagged with an index. Only segment times with an index larger than 0 are\n * considered times actually achieved by the runner, while the others are\n * artifacts of route changes and similar algorithmic changes.\n */\nexport class SegmentHistory extends SegmentHistoryRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: SegmentHistory) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            this.ptr = 0;\n        }\n    }\n}\n\n/**\n * A segment time achieved for a segment. It is tagged with an index. Only\n * segment times with an index larger than 0 are considered times actually\n * achieved by the runner, while the others are artifacts of route changes and\n * similar algorithmic changes.\n */\nexport class SegmentHistoryElementRef {\n    ptr: number;\n    /**\n     * Accesses the index of the segment history element.\n     */\n    index(): number {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.SegmentHistoryElement_index(this.ptr);\n        return result;\n    }\n    /**\n     * Accesses the segment time of the segment history element.\n     */\n    time(): TimeRef {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new TimeRef(instance().exports.SegmentHistoryElement_time(this.ptr));\n        return result;\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * A segment time achieved for a segment. It is tagged with an index. Only\n * segment times with an index larger than 0 are considered times actually\n * achieved by the runner, while the others are artifacts of route changes and\n * similar algorithmic changes.\n */\nexport class SegmentHistoryElementRefMut extends SegmentHistoryElementRef {\n}\n\n/**\n * A segment time achieved for a segment. It is tagged with an index. Only\n * segment times with an index larger than 0 are considered times actually\n * achieved by the runner, while the others are artifacts of route changes and\n * similar algorithmic changes.\n */\nexport class SegmentHistoryElement extends SegmentHistoryElementRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: SegmentHistoryElement) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            this.ptr = 0;\n        }\n    }\n}\n\n/**\n * Iterates over all the segment times of a segment and their indices.\n */\nexport class SegmentHistoryIterRef {\n    ptr: number;\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * Iterates over all the segment times of a segment and their indices.\n */\nexport class SegmentHistoryIterRefMut extends SegmentHistoryIterRef {\n    /**\n     * Accesses the next Segment History element. Returns null if there are no\n     * more elements.\n     */\n    next(): SegmentHistoryElementRef | null {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new SegmentHistoryElementRef(instance().exports.SegmentHistoryIter_next(this.ptr));\n        if (result.ptr == 0) {\n            return null;\n        }\n        return result;\n    }\n}\n\n/**\n * Iterates over all the segment times of a segment and their indices.\n */\nexport class SegmentHistoryIter extends SegmentHistoryIterRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: SegmentHistoryIter) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.SegmentHistoryIter_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n}\n\n/**\n * The Separator Component is a simple component that only serves to render\n * separators between components.\n */\nexport class SeparatorComponentRef {\n    ptr: number;\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * The Separator Component is a simple component that only serves to render\n * separators between components.\n */\nexport class SeparatorComponentRefMut extends SeparatorComponentRef {\n}\n\n/**\n * The Separator Component is a simple component that only serves to render\n * separators between components.\n */\nexport class SeparatorComponent extends SeparatorComponentRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: SeparatorComponent) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.SeparatorComponent_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n    /**\n     * Creates a new Separator Component.\n     */\n    static new(): SeparatorComponent {\n        const result = new SeparatorComponent(instance().exports.SeparatorComponent_new());\n        return result;\n    }\n    /**\n     * Converts the component into a generic component suitable for using with a\n     * layout.\n     */\n    intoGeneric(): Component {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new Component(instance().exports.SeparatorComponent_into_generic(this.ptr));\n        this.ptr = 0;\n        return result;\n    }\n}\n\n/**\n * Describes a setting's value. Such a value can be of a variety of different\n * types.\n */\nexport class SettingValueRef {\n    ptr: number;\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * Describes a setting's value. Such a value can be of a variety of different\n * types.\n */\nexport class SettingValueRefMut extends SettingValueRef {\n}\n\n/**\n * Describes a setting's value. Such a value can be of a variety of different\n * types.\n */\nexport class SettingValue extends SettingValueRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: SettingValue) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.SettingValue_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n    /**\n     * Creates a new setting value from a boolean value.\n     */\n    static fromBool(value: boolean): SettingValue {\n        const result = new SettingValue(instance().exports.SettingValue_from_bool(value ? 1 : 0));\n        return result;\n    }\n    /**\n     * Creates a new setting value from an unsigned integer.\n     */\n    static fromUint(value: number): SettingValue {\n        const result = new SettingValue(instance().exports.SettingValue_from_uint(value));\n        return result;\n    }\n    /**\n     * Creates a new setting value from a signed integer.\n     */\n    static fromInt(value: number): SettingValue {\n        const result = new SettingValue(instance().exports.SettingValue_from_int(value));\n        return result;\n    }\n    /**\n     * Creates a new setting value from a string.\n     */\n    static fromString(value: string): SettingValue {\n        const value_allocated = allocString(value);\n        const result = new SettingValue(instance().exports.SettingValue_from_string(value_allocated.ptr));\n        dealloc(value_allocated);\n        return result;\n    }\n    /**\n     * Creates a new setting value from a string that has the type `optional string`.\n     */\n    static fromOptionalString(value: string): SettingValue {\n        const value_allocated = allocString(value);\n        const result = new SettingValue(instance().exports.SettingValue_from_optional_string(value_allocated.ptr));\n        dealloc(value_allocated);\n        return result;\n    }\n    /**\n     * Creates a new empty setting value that has the type `optional string`.\n     */\n    static fromOptionalEmptyString(): SettingValue {\n        const result = new SettingValue(instance().exports.SettingValue_from_optional_empty_string());\n        return result;\n    }\n    /**\n     * Creates a new setting value from a floating point number.\n     */\n    static fromFloat(value: number): SettingValue {\n        const result = new SettingValue(instance().exports.SettingValue_from_float(value));\n        return result;\n    }\n    /**\n     * Creates a new setting value from an accuracy name. If it doesn't match a\n     * known accuracy, null is returned.\n     */\n    static fromAccuracy(value: string): SettingValue | null {\n        const value_allocated = allocString(value);\n        const result = new SettingValue(instance().exports.SettingValue_from_accuracy(value_allocated.ptr));\n        dealloc(value_allocated);\n        if (result.ptr == 0) {\n            return null;\n        }\n        return result;\n    }\n    /**\n     * Creates a new setting value from a digits format name. If it doesn't match a\n     * known digits format, null is returned.\n     */\n    static fromDigitsFormat(value: string): SettingValue | null {\n        const value_allocated = allocString(value);\n        const result = new SettingValue(instance().exports.SettingValue_from_digits_format(value_allocated.ptr));\n        dealloc(value_allocated);\n        if (result.ptr == 0) {\n            return null;\n        }\n        return result;\n    }\n    /**\n     * Creates a new setting value from a timing method name with the type\n     * `optional timing method`. If it doesn't match a known timing method, null\n     * is returned.\n     */\n    static fromOptionalTimingMethod(value: string): SettingValue | null {\n        const value_allocated = allocString(value);\n        const result = new SettingValue(instance().exports.SettingValue_from_optional_timing_method(value_allocated.ptr));\n        dealloc(value_allocated);\n        if (result.ptr == 0) {\n            return null;\n        }\n        return result;\n    }\n    /**\n     * Creates a new empty setting value with the type `optional timing method`.\n     */\n    static fromOptionalEmptyTimingMethod(): SettingValue {\n        const result = new SettingValue(instance().exports.SettingValue_from_optional_empty_timing_method());\n        return result;\n    }\n    /**\n     * Creates a new setting value from the color provided as RGBA.\n     */\n    static fromColor(r: number, g: number, b: number, a: number): SettingValue {\n        const result = new SettingValue(instance().exports.SettingValue_from_color(r, g, b, a));\n        return result;\n    }\n    /**\n     * Creates a new setting value from the color provided as RGBA with the type\n     * `optional color`.\n     */\n    static fromOptionalColor(r: number, g: number, b: number, a: number): SettingValue {\n        const result = new SettingValue(instance().exports.SettingValue_from_optional_color(r, g, b, a));\n        return result;\n    }\n    /**\n     * Creates a new empty setting value with the type `optional color`.\n     */\n    static fromOptionalEmptyColor(): SettingValue {\n        const result = new SettingValue(instance().exports.SettingValue_from_optional_empty_color());\n        return result;\n    }\n    /**\n     * Creates a new setting value that is a transparent gradient.\n     */\n    static fromTransparentGradient(): SettingValue {\n        const result = new SettingValue(instance().exports.SettingValue_from_transparent_gradient());\n        return result;\n    }\n    /**\n     * Creates a new setting value from the vertical gradient provided as two RGBA colors.\n     */\n    static fromVerticalGradient(r1: number, g1: number, b1: number, a1: number, r2: number, g2: number, b2: number, a2: number): SettingValue {\n        const result = new SettingValue(instance().exports.SettingValue_from_vertical_gradient(r1, g1, b1, a1, r2, g2, b2, a2));\n        return result;\n    }\n    /**\n     * Creates a new setting value from the horizontal gradient provided as two RGBA colors.\n     */\n    static fromHorizontalGradient(r1: number, g1: number, b1: number, a1: number, r2: number, g2: number, b2: number, a2: number): SettingValue {\n        const result = new SettingValue(instance().exports.SettingValue_from_horizontal_gradient(r1, g1, b1, a1, r2, g2, b2, a2));\n        return result;\n    }\n    /**\n     * Creates a new setting value from the alignment name provided. If it doesn't\n     * match a known alignment, null is returned.\n     */\n    static fromAlignment(value: string): SettingValue | null {\n        const value_allocated = allocString(value);\n        const result = new SettingValue(instance().exports.SettingValue_from_alignment(value_allocated.ptr));\n        dealloc(value_allocated);\n        if (result.ptr == 0) {\n            return null;\n        }\n        return result;\n    }\n}\n\n/**\n * A Shared Timer that can be used to share a single timer object with multiple\n * owners.\n */\nexport class SharedTimerRef {\n    ptr: number;\n    /**\n     * Creates a new shared timer handle that shares the same timer. The inner\n     * timer object only gets disposed when the final handle gets disposed.\n     */\n    share(): SharedTimer {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new SharedTimer(instance().exports.SharedTimer_share(this.ptr));\n        return result;\n    }\n    /**\n     * Requests read access to the timer that is being shared. This blocks the\n     * thread as long as there is an active write lock. Dispose the read lock when\n     * you are done using the timer.\n     */\n    read(): TimerReadLock {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new TimerReadLock(instance().exports.SharedTimer_read(this.ptr));\n        return result;\n    }\n    /**\n     * Requests write access to the timer that is being shared. This blocks the\n     * thread as long as there are active write or read locks. Dispose the write\n     * lock when you are done using the timer.\n     */\n    write(): TimerWriteLock {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new TimerWriteLock(instance().exports.SharedTimer_write(this.ptr));\n        return result;\n    }\n    /**\n     * Replaces the timer that is being shared by the timer provided. This blocks\n     * the thread as long as there are active write or read locks. Everyone who is\n     * sharing the old timer will share the provided timer after successful\n     * completion.\n     */\n    replaceInner(timer: Timer) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (timer.ptr == 0) {\n            throw \"timer is disposed\";\n        }\n        instance().exports.SharedTimer_replace_inner(this.ptr, timer.ptr);\n        timer.ptr = 0;\n    }\n    readWith<T>(action: (timer: TimerRef) => T): T {\n        return this.read().with(function (lock) {\n            return action(lock.timer());\n        });\n    }\n    writeWith<T>(action: (timer: TimerRefMut) => T): T {\n        return this.write().with(function (lock) {\n            return action(lock.timer());\n        });\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * A Shared Timer that can be used to share a single timer object with multiple\n * owners.\n */\nexport class SharedTimerRefMut extends SharedTimerRef {\n}\n\n/**\n * A Shared Timer that can be used to share a single timer object with multiple\n * owners.\n */\nexport class SharedTimer extends SharedTimerRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: SharedTimer) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.SharedTimer_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n}\n\n/**\n * The Splits Component is the main component for visualizing all the split\n * times. Each segment is shown in a tabular fashion showing the segment icon,\n * segment name, the delta compared to the chosen comparison, and the split\n * time. The list provides scrolling functionality, so not every segment needs\n * to be shown all the time.\n */\nexport class SplitsComponentRef {\n    ptr: number;\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * The Splits Component is the main component for visualizing all the split\n * times. Each segment is shown in a tabular fashion showing the segment icon,\n * segment name, the delta compared to the chosen comparison, and the split\n * time. The list provides scrolling functionality, so not every segment needs\n * to be shown all the time.\n */\nexport class SplitsComponentRefMut extends SplitsComponentRef {\n    /**\n     * Encodes the component's state information as JSON.\n     */\n    stateAsJson(timer: TimerRef, layoutSettings: GeneralLayoutSettingsRef): any {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (timer.ptr == 0) {\n            throw \"timer is disposed\";\n        }\n        if (layoutSettings.ptr == 0) {\n            throw \"layoutSettings is disposed\";\n        }\n        const result = instance().exports.SplitsComponent_state_as_json(this.ptr, timer.ptr, layoutSettings.ptr);\n        return JSON.parse(decodeString(result));\n    }\n    /**\n     * Calculates the component's state based on the timer and layout settings\n     * provided.\n     */\n    state(timer: TimerRef, layoutSettings: GeneralLayoutSettingsRef): SplitsComponentState {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (timer.ptr == 0) {\n            throw \"timer is disposed\";\n        }\n        if (layoutSettings.ptr == 0) {\n            throw \"layoutSettings is disposed\";\n        }\n        const result = new SplitsComponentState(instance().exports.SplitsComponent_state(this.ptr, timer.ptr, layoutSettings.ptr));\n        return result;\n    }\n    /**\n     * Scrolls up the window of the segments that are shown. Doesn't move the\n     * scroll window if it reaches the top of the segments.\n     */\n    scrollUp() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.SplitsComponent_scroll_up(this.ptr);\n    }\n    /**\n     * Scrolls down the window of the segments that are shown. Doesn't move the\n     * scroll window if it reaches the bottom of the segments.\n     */\n    scrollDown() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.SplitsComponent_scroll_down(this.ptr);\n    }\n    /**\n     * The amount of segments to show in the list at any given time. If this is\n     * set to 0, all the segments are shown. If this is set to a number lower\n     * than the total amount of segments, only a certain window of all the\n     * segments is shown. This window can scroll up or down.\n     */\n    setVisualSplitCount(count: number) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.SplitsComponent_set_visual_split_count(this.ptr, count);\n    }\n    /**\n     * If there's more segments than segments that are shown, the window\n     * showing the segments automatically scrolls up and down when the current\n     * segment changes. This count determines the minimum number of future\n     * segments to be shown in this scrolling window when it automatically\n     * scrolls.\n     */\n    setSplitPreviewCount(count: number) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.SplitsComponent_set_split_preview_count(this.ptr, count);\n    }\n    /**\n     * If not every segment is shown in the scrolling window of segments, then\n     * this determines whether the final segment is always to be shown, as it\n     * contains valuable information about the total duration of the chosen\n     * comparison, which is often the runner's Personal Best.\n     */\n    setAlwaysShowLastSplit(alwaysShowLastSplit: boolean) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.SplitsComponent_set_always_show_last_split(this.ptr, alwaysShowLastSplit ? 1 : 0);\n    }\n    /**\n     * If the last segment is to always be shown, this determines whether to\n     * show a more pronounced separator in front of the last segment, if it is\n     * not directly adjacent to the segment shown right before it in the\n     * scrolling window.\n     */\n    setSeparatorLastSplit(separatorLastSplit: boolean) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.SplitsComponent_set_separator_last_split(this.ptr, separatorLastSplit ? 1 : 0);\n    }\n}\n\n/**\n * The Splits Component is the main component for visualizing all the split\n * times. Each segment is shown in a tabular fashion showing the segment icon,\n * segment name, the delta compared to the chosen comparison, and the split\n * time. The list provides scrolling functionality, so not every segment needs\n * to be shown all the time.\n */\nexport class SplitsComponent extends SplitsComponentRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: SplitsComponent) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.SplitsComponent_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n    /**\n     * Creates a new Splits Component.\n     */\n    static new(): SplitsComponent {\n        const result = new SplitsComponent(instance().exports.SplitsComponent_new());\n        return result;\n    }\n    /**\n     * Converts the component into a generic component suitable for using with a\n     * layout.\n     */\n    intoGeneric(): Component {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new Component(instance().exports.SplitsComponent_into_generic(this.ptr));\n        this.ptr = 0;\n        return result;\n    }\n}\n\n/**\n * The state object that describes a single segment's information to visualize.\n */\nexport class SplitsComponentStateRef {\n    ptr: number;\n    /**\n     * Describes whether a more pronounced separator should be shown in front of\n     * the last segment provided.\n     */\n    finalSeparatorShown(): boolean {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.SplitsComponentState_final_separator_shown(this.ptr) != 0;\n        return result;\n    }\n    /**\n     * Returns the amount of segments to visualize.\n     */\n    len(): number {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.SplitsComponentState_len(this.ptr);\n        return result;\n    }\n    /**\n     * Returns the amount of icon changes that happened in this state object.\n     */\n    iconChangeCount(): number {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.SplitsComponentState_icon_change_count(this.ptr);\n        return result;\n    }\n    /**\n     * Accesses the index of the segment of the icon change with the specified\n     * index. This is based on the index in the run, not on the index of the\n     * SplitState in the State object. The corresponding index is the index field\n     * of the SplitState object. You may not provide an out of bounds index.\n     */\n    iconChangeSegmentIndex(iconChangeIndex: number): number {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.SplitsComponentState_icon_change_segment_index(this.ptr, iconChangeIndex);\n        return result;\n    }\n    /**\n     * The segment's icon encoded as a Data URL of the icon change with the\n     * specified index. The String itself may be empty. This indicates that there\n     * is no icon. You may not provide an out of bounds index.\n     */\n    iconChangeIcon(iconChangeIndex: number): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.SplitsComponentState_icon_change_icon(this.ptr, iconChangeIndex);\n        return decodeString(result);\n    }\n    /**\n     * The name of the segment with the specified index. You may not provide an out\n     * of bounds index.\n     */\n    name(index: number): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.SplitsComponentState_name(this.ptr, index);\n        return decodeString(result);\n    }\n    /**\n     * The delta to show for the segment with the specified index. You may not\n     * provide an out of bounds index.\n     */\n    delta(index: number): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.SplitsComponentState_delta(this.ptr, index);\n        return decodeString(result);\n    }\n    /**\n     * The split time to show for the segment with the specified index. You may not\n     * provide an out of bounds index.\n     */\n    time(index: number): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.SplitsComponentState_time(this.ptr, index);\n        return decodeString(result);\n    }\n    /**\n     * The semantic coloring information the delta time carries of the segment with\n     * the specified index. You may not provide an out of bounds index.\n     */\n    semanticColor(index: number): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.SplitsComponentState_semantic_color(this.ptr, index);\n        return decodeString(result);\n    }\n    /**\n     * Describes if the segment with the specified index is the segment the active\n     * attempt is currently on.\n     */\n    isCurrentSplit(index: number): boolean {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.SplitsComponentState_is_current_split(this.ptr, index) != 0;\n        return result;\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * The state object that describes a single segment's information to visualize.\n */\nexport class SplitsComponentStateRefMut extends SplitsComponentStateRef {\n}\n\n/**\n * The state object that describes a single segment's information to visualize.\n */\nexport class SplitsComponentState extends SplitsComponentStateRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: SplitsComponentState) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.SplitsComponentState_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n}\n\n/**\n * A Sum of Best Cleaner allows you to interactively remove potential issues in\n * the Segment History that lead to an inaccurate Sum of Best. If you skip a\n * split, whenever you get to the next split, the combined segment time might\n * be faster than the sum of the individual best segments. The Sum of Best\n * Cleaner will point out all of occurrences of this and allows you to delete\n * them individually if any of them seem wrong.\n */\nexport class SumOfBestCleanerRef {\n    ptr: number;\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * A Sum of Best Cleaner allows you to interactively remove potential issues in\n * the Segment History that lead to an inaccurate Sum of Best. If you skip a\n * split, whenever you get to the next split, the combined segment time might\n * be faster than the sum of the individual best segments. The Sum of Best\n * Cleaner will point out all of occurrences of this and allows you to delete\n * them individually if any of them seem wrong.\n */\nexport class SumOfBestCleanerRefMut extends SumOfBestCleanerRef {\n    /**\n     * Returns the next potential clean up. If there are no more potential\n     * clean ups, null is returned.\n     */\n    nextPotentialCleanUp(): PotentialCleanUp | null {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new PotentialCleanUp(instance().exports.SumOfBestCleaner_next_potential_clean_up(this.ptr));\n        if (result.ptr == 0) {\n            return null;\n        }\n        return result;\n    }\n    /**\n     * Applies a clean up to the Run.\n     */\n    apply(cleanUp: PotentialCleanUp) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (cleanUp.ptr == 0) {\n            throw \"cleanUp is disposed\";\n        }\n        instance().exports.SumOfBestCleaner_apply(this.ptr, cleanUp.ptr);\n        cleanUp.ptr = 0;\n    }\n}\n\n/**\n * A Sum of Best Cleaner allows you to interactively remove potential issues in\n * the Segment History that lead to an inaccurate Sum of Best. If you skip a\n * split, whenever you get to the next split, the combined segment time might\n * be faster than the sum of the individual best segments. The Sum of Best\n * Cleaner will point out all of occurrences of this and allows you to delete\n * them individually if any of them seem wrong.\n */\nexport class SumOfBestCleaner extends SumOfBestCleanerRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: SumOfBestCleaner) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.SumOfBestCleaner_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n}\n\n/**\n * The Sum of Best Segments Component shows the fastest possible time to\n * complete a run of this category, based on information collected from all the\n * previous attempts. This often matches up with the sum of the best segment\n * times of all the segments, but that may not always be the case, as skipped\n * segments may introduce combined segments that may be faster than the actual\n * sum of their best segment times. The name is therefore a bit misleading, but\n * sticks around for historical reasons.\n */\nexport class SumOfBestComponentRef {\n    ptr: number;\n    /**\n     * Encodes the component's state information as JSON.\n     */\n    stateAsJson(timer: TimerRef): any {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (timer.ptr == 0) {\n            throw \"timer is disposed\";\n        }\n        const result = instance().exports.SumOfBestComponent_state_as_json(this.ptr, timer.ptr);\n        return JSON.parse(decodeString(result));\n    }\n    /**\n     * Calculates the component's state based on the timer provided.\n     */\n    state(timer: TimerRef): SumOfBestComponentState {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (timer.ptr == 0) {\n            throw \"timer is disposed\";\n        }\n        const result = new SumOfBestComponentState(instance().exports.SumOfBestComponent_state(this.ptr, timer.ptr));\n        return result;\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * The Sum of Best Segments Component shows the fastest possible time to\n * complete a run of this category, based on information collected from all the\n * previous attempts. This often matches up with the sum of the best segment\n * times of all the segments, but that may not always be the case, as skipped\n * segments may introduce combined segments that may be faster than the actual\n * sum of their best segment times. The name is therefore a bit misleading, but\n * sticks around for historical reasons.\n */\nexport class SumOfBestComponentRefMut extends SumOfBestComponentRef {\n}\n\n/**\n * The Sum of Best Segments Component shows the fastest possible time to\n * complete a run of this category, based on information collected from all the\n * previous attempts. This often matches up with the sum of the best segment\n * times of all the segments, but that may not always be the case, as skipped\n * segments may introduce combined segments that may be faster than the actual\n * sum of their best segment times. The name is therefore a bit misleading, but\n * sticks around for historical reasons.\n */\nexport class SumOfBestComponent extends SumOfBestComponentRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: SumOfBestComponent) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.SumOfBestComponent_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n    /**\n     * Creates a new Sum of Best Segments Component.\n     */\n    static new(): SumOfBestComponent {\n        const result = new SumOfBestComponent(instance().exports.SumOfBestComponent_new());\n        return result;\n    }\n    /**\n     * Converts the component into a generic component suitable for using with a\n     * layout.\n     */\n    intoGeneric(): Component {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new Component(instance().exports.SumOfBestComponent_into_generic(this.ptr));\n        this.ptr = 0;\n        return result;\n    }\n}\n\n/**\n * The state object describes the information to visualize for this component.\n */\nexport class SumOfBestComponentStateRef {\n    ptr: number;\n    /**\n     * The label's text.\n     */\n    text(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.SumOfBestComponentState_text(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * The sum of best segments.\n     */\n    time(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.SumOfBestComponentState_time(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * The state object describes the information to visualize for this component.\n */\nexport class SumOfBestComponentStateRefMut extends SumOfBestComponentStateRef {\n}\n\n/**\n * The state object describes the information to visualize for this component.\n */\nexport class SumOfBestComponentState extends SumOfBestComponentStateRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: SumOfBestComponentState) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.SumOfBestComponentState_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n}\n\n/**\n * The Text Component simply visualizes any given text. This can either be a\n * single centered text, or split up into a left and right text, which is\n * suitable for a situation where you have a label and a value.\n */\nexport class TextComponentRef {\n    ptr: number;\n    /**\n     * Encodes the component's state information as JSON.\n     */\n    stateAsJson(): any {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.TextComponent_state_as_json(this.ptr);\n        return JSON.parse(decodeString(result));\n    }\n    /**\n     * Calculates the component's state.\n     */\n    state(): TextComponentState {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new TextComponentState(instance().exports.TextComponent_state(this.ptr));\n        return result;\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * The Text Component simply visualizes any given text. This can either be a\n * single centered text, or split up into a left and right text, which is\n * suitable for a situation where you have a label and a value.\n */\nexport class TextComponentRefMut extends TextComponentRef {\n    /**\n     * Sets the centered text. If the current mode is split, it is switched to\n     * centered mode.\n     */\n    setCenter(text: string) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const text_allocated = allocString(text);\n        instance().exports.TextComponent_set_center(this.ptr, text_allocated.ptr);\n        dealloc(text_allocated);\n    }\n    /**\n     * Sets the left text. If the current mode is centered, it is switched to\n     * split mode, with the right text being empty.\n     */\n    setLeft(text: string) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const text_allocated = allocString(text);\n        instance().exports.TextComponent_set_left(this.ptr, text_allocated.ptr);\n        dealloc(text_allocated);\n    }\n    /**\n     * Sets the right text. If the current mode is centered, it is switched to\n     * split mode, with the left text being empty.\n     */\n    setRight(text: string) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const text_allocated = allocString(text);\n        instance().exports.TextComponent_set_right(this.ptr, text_allocated.ptr);\n        dealloc(text_allocated);\n    }\n}\n\n/**\n * The Text Component simply visualizes any given text. This can either be a\n * single centered text, or split up into a left and right text, which is\n * suitable for a situation where you have a label and a value.\n */\nexport class TextComponent extends TextComponentRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: TextComponent) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.TextComponent_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n    /**\n     * Creates a new Text Component.\n     */\n    static new(): TextComponent {\n        const result = new TextComponent(instance().exports.TextComponent_new());\n        return result;\n    }\n    /**\n     * Converts the component into a generic component suitable for using with a\n     * layout.\n     */\n    intoGeneric(): Component {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new Component(instance().exports.TextComponent_into_generic(this.ptr));\n        this.ptr = 0;\n        return result;\n    }\n}\n\n/**\n * The state object describes the information to visualize for this component.\n */\nexport class TextComponentStateRef {\n    ptr: number;\n    /**\n     * Accesses the left part of the text. If the text isn't split up, an empty\n     * string is returned instead.\n     */\n    left(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.TextComponentState_left(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * Accesses the right part of the text. If the text isn't split up, an empty\n     * string is returned instead.\n     */\n    right(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.TextComponentState_right(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * Accesses the centered text. If the text isn't centered, an empty string is\n     * returned instead.\n     */\n    center(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.TextComponentState_center(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * Returns whether the text is split up into a left and right part.\n     */\n    isSplit(): boolean {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.TextComponentState_is_split(this.ptr) != 0;\n        return result;\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * The state object describes the information to visualize for this component.\n */\nexport class TextComponentStateRefMut extends TextComponentStateRef {\n}\n\n/**\n * The state object describes the information to visualize for this component.\n */\nexport class TextComponentState extends TextComponentStateRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: TextComponentState) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.TextComponentState_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n}\n\n/**\n * A time that can store a Real Time and a Game Time. Both of them are\n * optional.\n */\nexport class TimeRef {\n    ptr: number;\n    /**\n     * Clones the time.\n     */\n    clone(): Time {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new Time(instance().exports.Time_clone(this.ptr));\n        return result;\n    }\n    /**\n     * The Real Time value. This may be null if this time has no Real Time value.\n     */\n    realTime(): TimeSpanRef | null {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new TimeSpanRef(instance().exports.Time_real_time(this.ptr));\n        if (result.ptr == 0) {\n            return null;\n        }\n        return result;\n    }\n    /**\n     * The Game Time value. This may be null if this time has no Game Time value.\n     */\n    gameTime(): TimeSpanRef | null {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new TimeSpanRef(instance().exports.Time_game_time(this.ptr));\n        if (result.ptr == 0) {\n            return null;\n        }\n        return result;\n    }\n    /**\n     * Access the time's value for the timing method specified.\n     */\n    index(timingMethod: number): TimeSpanRef | null {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new TimeSpanRef(instance().exports.Time_index(this.ptr, timingMethod));\n        if (result.ptr == 0) {\n            return null;\n        }\n        return result;\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * A time that can store a Real Time and a Game Time. Both of them are\n * optional.\n */\nexport class TimeRefMut extends TimeRef {\n}\n\n/**\n * A time that can store a Real Time and a Game Time. Both of them are\n * optional.\n */\nexport class Time extends TimeRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: Time) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.Time_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n}\n\n/**\n * A Time Span represents a certain span of time.\n */\nexport class TimeSpanRef {\n    ptr: number;\n    /**\n     * Clones the Time Span.\n     */\n    clone(): TimeSpan {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new TimeSpan(instance().exports.TimeSpan_clone(this.ptr));\n        return result;\n    }\n    /**\n     * Returns the total amount of seconds (including decimals) this Time Span\n     * represents.\n     */\n    totalSeconds(): number {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.TimeSpan_total_seconds(this.ptr);\n        return result;\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * A Time Span represents a certain span of time.\n */\nexport class TimeSpanRefMut extends TimeSpanRef {\n}\n\n/**\n * A Time Span represents a certain span of time.\n */\nexport class TimeSpan extends TimeSpanRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: TimeSpan) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.TimeSpan_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n    /**\n     * Creates a new Time Span from a given amount of seconds.\n     */\n    static fromSeconds(seconds: number): TimeSpan {\n        const result = new TimeSpan(instance().exports.TimeSpan_from_seconds(seconds));\n        return result;\n    }\n    /**\n     * Parses a Time Span from a string. Returns null if the time can't be\n     * parsed.\n     */\n    static parse(text: string): TimeSpan | null {\n        const text_allocated = allocString(text);\n        const result = new TimeSpan(instance().exports.TimeSpan_parse(text_allocated.ptr));\n        dealloc(text_allocated);\n        if (result.ptr == 0) {\n            return null;\n        }\n        return result;\n    }\n}\n\n/**\n * A Timer provides all the capabilities necessary for doing speedrun attempts.\n */\nexport class TimerRef {\n    ptr: number;\n    /**\n     * Returns the currently selected Timing Method.\n     */\n    currentTimingMethod(): number {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.Timer_current_timing_method(this.ptr);\n        return result;\n    }\n    /**\n     * Returns the current comparison that is being compared against. This may\n     * be a custom comparison or one of the Comparison Generators.\n     */\n    currentComparison(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.Timer_current_comparison(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * Returns whether Game Time is currently initialized. Game Time\n     * automatically gets uninitialized for each new attempt.\n     */\n    isGameTimeInitialized(): boolean {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.Timer_is_game_time_initialized(this.ptr) != 0;\n        return result;\n    }\n    /**\n     * Returns whether the Game Timer is currently paused. If the Game Timer is\n     * not paused, it automatically increments similar to Real Time.\n     */\n    isGameTimePaused(): boolean {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.Timer_is_game_time_paused(this.ptr) != 0;\n        return result;\n    }\n    /**\n     * Accesses the loading times. Loading times are defined as Game Time - Real Time.\n     */\n    loadingTimes(): TimeSpanRef {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new TimeSpanRef(instance().exports.Timer_loading_times(this.ptr));\n        return result;\n    }\n    /**\n     * Returns the current Timer Phase.\n     */\n    currentPhase(): number {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.Timer_current_phase(this.ptr);\n        return result;\n    }\n    /**\n     * Accesses the Run in use by the Timer.\n     */\n    getRun(): RunRef {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new RunRef(instance().exports.Timer_get_run(this.ptr));\n        return result;\n    }\n    /**\n     * Saves the Run in use by the Timer as a LiveSplit splits file (*.lss).\n     */\n    saveAsLss(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.Timer_save_as_lss(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * Prints out debug information representing the whole state of the Timer. This\n     * is being written to stdout.\n     */\n    printDebug() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.Timer_print_debug(this.ptr);\n    }\n    /**\n     * Returns the current time of the Timer. The Game Time is null if the Game\n     * Time has not been initialized.\n     */\n    currentTime(): TimeRef {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new TimeRef(instance().exports.Timer_current_time(this.ptr));\n        return result;\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * A Timer provides all the capabilities necessary for doing speedrun attempts.\n */\nexport class TimerRefMut extends TimerRef {\n    /**\n     * Replaces the Run object used by the Timer with the Run object provided. If\n     * the Run provided contains no segments, it can't be used for timing and is\n     * not being modified. Otherwise the Run that was in use by the Timer gets\n     * stored in the Run object provided. Before the Run is returned, the current\n     * attempt is reset and the splits are being updated depending on the\n     * `update_splits` parameter. The return value indicates whether the Run got\n     * replaced successfully.\n     */\n    replaceRun(run: RunRefMut, updateSplits: boolean): boolean {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (run.ptr == 0) {\n            throw \"run is disposed\";\n        }\n        const result = instance().exports.Timer_replace_run(this.ptr, run.ptr, updateSplits ? 1 : 0) != 0;\n        return result;\n    }\n    /**\n     * Sets the Run object used by the Timer with the Run object provided. If the\n     * Run provided contains no segments, it can't be used for timing and gets\n     * returned again. If the Run object can be set, the original Run object in use\n     * by the Timer is disposed by this method and null is returned.\n     */\n    setRun(run: Run): Run | null {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (run.ptr == 0) {\n            throw \"run is disposed\";\n        }\n        const result = new Run(instance().exports.Timer_set_run(this.ptr, run.ptr));\n        run.ptr = 0;\n        if (result.ptr == 0) {\n            return null;\n        }\n        return result;\n    }\n    /**\n     * Starts the Timer if there is no attempt in progress. If that's not the\n     * case, nothing happens.\n     */\n    start() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.Timer_start(this.ptr);\n    }\n    /**\n     * If an attempt is in progress, stores the current time as the time of the\n     * current split. The attempt ends if the last split time is stored.\n     */\n    split() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.Timer_split(this.ptr);\n    }\n    /**\n     * Starts a new attempt or stores the current time as the time of the\n     * current split. The attempt ends if the last split time is stored.\n     */\n    splitOrStart() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.Timer_split_or_start(this.ptr);\n    }\n    /**\n     * Skips the current split if an attempt is in progress and the\n     * current split is not the last split.\n     */\n    skipSplit() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.Timer_skip_split(this.ptr);\n    }\n    /**\n     * Removes the split time from the last split if an attempt is in progress\n     * and there is a previous split. The Timer Phase also switches to\n     * `Running` if it previously was `Ended`.\n     */\n    undoSplit() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.Timer_undo_split(this.ptr);\n    }\n    /**\n     * Resets the current attempt if there is one in progress. If the splits\n     * are to be updated, all the information of the current attempt is stored\n     * in the Run's history. Otherwise the current attempt's information is\n     * discarded.\n     */\n    reset(updateSplits: boolean) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.Timer_reset(this.ptr, updateSplits ? 1 : 0);\n    }\n    /**\n     * Resets the current attempt if there is one in progress. The splits are\n     * updated such that the current attempt's split times are being stored as\n     * the new Personal Best.\n     */\n    resetAndSetAttemptAsPb() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.Timer_reset_and_set_attempt_as_pb(this.ptr);\n    }\n    /**\n     * Pauses an active attempt that is not paused.\n     */\n    pause() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.Timer_pause(this.ptr);\n    }\n    /**\n     * Resumes an attempt that is paused.\n     */\n    resume() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.Timer_resume(this.ptr);\n    }\n    /**\n     * Toggles an active attempt between `Paused` and `Running`.\n     */\n    togglePause() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.Timer_toggle_pause(this.ptr);\n    }\n    /**\n     * Toggles an active attempt between `Paused` and `Running` or starts an\n     * attempt if there's none in progress.\n     */\n    togglePauseOrStart() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.Timer_toggle_pause_or_start(this.ptr);\n    }\n    /**\n     * Removes all the pause times from the current time. If the current\n     * attempt is paused, it also resumes that attempt. Additionally, if the\n     * attempt is finished, the final split time is adjusted to not include the\n     * pause times as well.\n     * \n     * # Warning\n     * \n     * This behavior is not entirely optimal, as generally only the final split\n     * time is modified, while all other split times are left unmodified, which\n     * may not be what actually happened during the run.\n     */\n    undoAllPauses() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.Timer_undo_all_pauses(this.ptr);\n    }\n    /**\n     * Sets the current Timing Method to the Timing Method provided.\n     */\n    setCurrentTimingMethod(method: number) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.Timer_set_current_timing_method(this.ptr, method);\n    }\n    /**\n     * Switches the current comparison to the next comparison in the list.\n     */\n    switchToNextComparison() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.Timer_switch_to_next_comparison(this.ptr);\n    }\n    /**\n     * Switches the current comparison to the previous comparison in the list.\n     */\n    switchToPreviousComparison() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.Timer_switch_to_previous_comparison(this.ptr);\n    }\n    /**\n     * Initializes Game Time for the current attempt. Game Time automatically\n     * gets uninitialized for each new attempt.\n     */\n    initializeGameTime() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.Timer_initialize_game_time(this.ptr);\n    }\n    /**\n     * Deinitializes Game Time for the current attempt.\n     */\n    deinitializeGameTime() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.Timer_deinitialize_game_time(this.ptr);\n    }\n    /**\n     * Pauses the Game Timer such that it doesn't automatically increment\n     * similar to Real Time.\n     */\n    pauseGameTime() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.Timer_pause_game_time(this.ptr);\n    }\n    /**\n     * Resumes the Game Timer such that it automatically increments similar to\n     * Real Time, starting from the Game Time it was paused at.\n     */\n    resumeGameTime() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.Timer_resume_game_time(this.ptr);\n    }\n    /**\n     * Sets the Game Time to the time specified. This also works if the Game\n     * Time is paused, which can be used as a way of updating the Game Timer\n     * periodically without it automatically moving forward. This ensures that\n     * the Game Timer never shows any time that is not coming from the game.\n     */\n    setGameTime(time: TimeSpanRef) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (time.ptr == 0) {\n            throw \"time is disposed\";\n        }\n        instance().exports.Timer_set_game_time(this.ptr, time.ptr);\n    }\n    /**\n     * Instead of setting the Game Time directly, this method can be used to\n     * just specify the amount of time the game has been loading. The Game Time\n     * is then automatically determined by Real Time - Loading Times.\n     */\n    setLoadingTimes(time: TimeSpanRef) {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (time.ptr == 0) {\n            throw \"time is disposed\";\n        }\n        instance().exports.Timer_set_loading_times(this.ptr, time.ptr);\n    }\n    /**\n     * Marks the Run as unmodified, so that it is known that all the changes\n     * have been saved.\n     */\n    markAsUnmodified() {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        instance().exports.Timer_mark_as_unmodified(this.ptr);\n    }\n}\n\n/**\n * A Timer provides all the capabilities necessary for doing speedrun attempts.\n */\nexport class Timer extends TimerRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: Timer) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.Timer_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n    /**\n     * Creates a new Timer based on a Run object storing all the information\n     * about the splits. The Run object needs to have at least one segment, so\n     * that the Timer can store the final time. If a Run object with no\n     * segments is provided, the Timer creation fails and null is returned.\n     */\n    static new(run: Run): Timer | null {\n        if (run.ptr == 0) {\n            throw \"run is disposed\";\n        }\n        const result = new Timer(instance().exports.Timer_new(run.ptr));\n        run.ptr = 0;\n        if (result.ptr == 0) {\n            return null;\n        }\n        return result;\n    }\n    /**\n     * Consumes the Timer and creates a Shared Timer that can be shared across\n     * multiple threads with multiple owners.\n     */\n    intoShared(): SharedTimer {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new SharedTimer(instance().exports.Timer_into_shared(this.ptr));\n        this.ptr = 0;\n        return result;\n    }\n    /**\n     * Takes out the Run from the Timer and resets the current attempt if there\n     * is one in progress. If the splits are to be updated, all the information\n     * of the current attempt is stored in the Run's history. Otherwise the\n     * current attempt's information is discarded.\n     */\n    intoRun(updateSplits: boolean): Run {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new Run(instance().exports.Timer_into_run(this.ptr, updateSplits ? 1 : 0));\n        this.ptr = 0;\n        return result;\n    }\n}\n\n/**\n * The Timer Component is a component that shows the total time of the current\n * attempt as a digital clock. The color of the time shown is based on a how\n * well the current attempt is doing compared to the chosen comparison.\n */\nexport class TimerComponentRef {\n    ptr: number;\n    /**\n     * Encodes the component's state information as JSON.\n     */\n    stateAsJson(timer: TimerRef, layoutSettings: GeneralLayoutSettingsRef): any {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (timer.ptr == 0) {\n            throw \"timer is disposed\";\n        }\n        if (layoutSettings.ptr == 0) {\n            throw \"layoutSettings is disposed\";\n        }\n        const result = instance().exports.TimerComponent_state_as_json(this.ptr, timer.ptr, layoutSettings.ptr);\n        return JSON.parse(decodeString(result));\n    }\n    /**\n     * Calculates the component's state based on the timer and the layout\n     * settings provided.\n     */\n    state(timer: TimerRef, layoutSettings: GeneralLayoutSettingsRef): TimerComponentState {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (timer.ptr == 0) {\n            throw \"timer is disposed\";\n        }\n        if (layoutSettings.ptr == 0) {\n            throw \"layoutSettings is disposed\";\n        }\n        const result = new TimerComponentState(instance().exports.TimerComponent_state(this.ptr, timer.ptr, layoutSettings.ptr));\n        return result;\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * The Timer Component is a component that shows the total time of the current\n * attempt as a digital clock. The color of the time shown is based on a how\n * well the current attempt is doing compared to the chosen comparison.\n */\nexport class TimerComponentRefMut extends TimerComponentRef {\n}\n\n/**\n * The Timer Component is a component that shows the total time of the current\n * attempt as a digital clock. The color of the time shown is based on a how\n * well the current attempt is doing compared to the chosen comparison.\n */\nexport class TimerComponent extends TimerComponentRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: TimerComponent) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.TimerComponent_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n    /**\n     * Creates a new Timer Component.\n     */\n    static new(): TimerComponent {\n        const result = new TimerComponent(instance().exports.TimerComponent_new());\n        return result;\n    }\n    /**\n     * Converts the component into a generic component suitable for using with a\n     * layout.\n     */\n    intoGeneric(): Component {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new Component(instance().exports.TimerComponent_into_generic(this.ptr));\n        this.ptr = 0;\n        return result;\n    }\n}\n\n/**\n * The state object describes the information to visualize for this component.\n */\nexport class TimerComponentStateRef {\n    ptr: number;\n    /**\n     * The time shown by the component without the fractional part.\n     */\n    time(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.TimerComponentState_time(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * The fractional part of the time shown (including the dot).\n     */\n    fraction(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.TimerComponentState_fraction(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * The semantic coloring information the time carries.\n     */\n    semanticColor(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.TimerComponentState_semantic_color(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * The state object describes the information to visualize for this component.\n */\nexport class TimerComponentStateRefMut extends TimerComponentStateRef {\n}\n\n/**\n * The state object describes the information to visualize for this component.\n */\nexport class TimerComponentState extends TimerComponentStateRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: TimerComponentState) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.TimerComponentState_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n}\n\n/**\n * A Timer Read Lock allows temporary read access to a timer. Dispose this to\n * release the read lock.\n */\nexport class TimerReadLockRef {\n    ptr: number;\n    /**\n     * Accesses the timer.\n     */\n    timer(): TimerRef {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new TimerRef(instance().exports.TimerReadLock_timer(this.ptr));\n        return result;\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * A Timer Read Lock allows temporary read access to a timer. Dispose this to\n * release the read lock.\n */\nexport class TimerReadLockRefMut extends TimerReadLockRef {\n}\n\n/**\n * A Timer Read Lock allows temporary read access to a timer. Dispose this to\n * release the read lock.\n */\nexport class TimerReadLock extends TimerReadLockRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: TimerReadLock) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.TimerReadLock_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n}\n\n/**\n * A Timer Write Lock allows temporary write access to a timer. Dispose this to\n * release the write lock.\n */\nexport class TimerWriteLockRef {\n    ptr: number;\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * A Timer Write Lock allows temporary write access to a timer. Dispose this to\n * release the write lock.\n */\nexport class TimerWriteLockRefMut extends TimerWriteLockRef {\n    /**\n     * Accesses the timer.\n     */\n    timer(): TimerRefMut {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new TimerRefMut(instance().exports.TimerWriteLock_timer(this.ptr));\n        return result;\n    }\n}\n\n/**\n * A Timer Write Lock allows temporary write access to a timer. Dispose this to\n * release the write lock.\n */\nexport class TimerWriteLock extends TimerWriteLockRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: TimerWriteLock) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.TimerWriteLock_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n}\n\n/**\n * The Title Component is a component that shows the name of the game and the\n * category that is being run. Additionally, the game icon, the attempt count,\n * and the total number of successfully finished runs can be shown.\n */\nexport class TitleComponentRef {\n    ptr: number;\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * The Title Component is a component that shows the name of the game and the\n * category that is being run. Additionally, the game icon, the attempt count,\n * and the total number of successfully finished runs can be shown.\n */\nexport class TitleComponentRefMut extends TitleComponentRef {\n    /**\n     * Encodes the component's state information as JSON.\n     */\n    stateAsJson(timer: TimerRef): any {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (timer.ptr == 0) {\n            throw \"timer is disposed\";\n        }\n        const result = instance().exports.TitleComponent_state_as_json(this.ptr, timer.ptr);\n        return JSON.parse(decodeString(result));\n    }\n    /**\n     * Calculates the component's state based on the timer provided.\n     */\n    state(timer: TimerRef): TitleComponentState {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (timer.ptr == 0) {\n            throw \"timer is disposed\";\n        }\n        const result = new TitleComponentState(instance().exports.TitleComponent_state(this.ptr, timer.ptr));\n        return result;\n    }\n}\n\n/**\n * The Title Component is a component that shows the name of the game and the\n * category that is being run. Additionally, the game icon, the attempt count,\n * and the total number of successfully finished runs can be shown.\n */\nexport class TitleComponent extends TitleComponentRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: TitleComponent) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.TitleComponent_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n    /**\n     * Creates a new Title Component.\n     */\n    static new(): TitleComponent {\n        const result = new TitleComponent(instance().exports.TitleComponent_new());\n        return result;\n    }\n    /**\n     * Converts the component into a generic component suitable for using with a\n     * layout.\n     */\n    intoGeneric(): Component {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new Component(instance().exports.TitleComponent_into_generic(this.ptr));\n        this.ptr = 0;\n        return result;\n    }\n}\n\n/**\n * The state object describes the information to visualize for this component.\n */\nexport class TitleComponentStateRef {\n    ptr: number;\n    /**\n     * The game's icon encoded as a Data URL. This value is only specified whenever\n     * the icon changes. If you explicitly want to query this value, remount the\n     * component. The String itself may be empty. This indicates that there is no\n     * icon. If no change occurred, null is returned instead.\n     */\n    iconChange(): string | null {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.TitleComponentState_icon_change(this.ptr);\n        if (result == 0) {\n            return null;\n        }\n        return decodeString(result);\n    }\n    /**\n     * The first title line to show. This is either the game's name, or a\n     * combination of the game's name and the category.\n     */\n    line1(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.TitleComponentState_line1(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * By default the category name is shown on the second line. Based on the\n     * settings, it can however instead be shown in a single line together with\n     * the game name. In that case null is returned instead.\n     */\n    line2(): string | null {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.TitleComponentState_line2(this.ptr);\n        if (result == 0) {\n            return null;\n        }\n        return decodeString(result);\n    }\n    /**\n     * Specifies whether the title should centered or aligned to the left\n     * instead.\n     */\n    isCentered(): boolean {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.TitleComponentState_is_centered(this.ptr) != 0;\n        return result;\n    }\n    /**\n     * Returns whether the amount of successfully finished attempts is supposed to\n     * be shown.\n     */\n    showsFinishedRuns(): boolean {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.TitleComponentState_shows_finished_runs(this.ptr) != 0;\n        return result;\n    }\n    /**\n     * Returns the amount of successfully finished attempts.\n     */\n    finishedRuns(): number {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.TitleComponentState_finished_runs(this.ptr);\n        return result;\n    }\n    /**\n     * Returns whether the amount of total attempts is supposed to be shown.\n     */\n    showsAttempts(): boolean {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.TitleComponentState_shows_attempts(this.ptr) != 0;\n        return result;\n    }\n    /**\n     * Returns the amount of total attempts.\n     */\n    attempts(): number {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.TitleComponentState_attempts(this.ptr);\n        return result;\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * The state object describes the information to visualize for this component.\n */\nexport class TitleComponentStateRefMut extends TitleComponentStateRef {\n}\n\n/**\n * The state object describes the information to visualize for this component.\n */\nexport class TitleComponentState extends TitleComponentStateRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: TitleComponentState) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.TitleComponentState_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n}\n\n/**\n * The Total Playtime Component is a component that shows the total amount of\n * time that the current category has been played for.\n */\nexport class TotalPlaytimeComponentRef {\n    ptr: number;\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * The Total Playtime Component is a component that shows the total amount of\n * time that the current category has been played for.\n */\nexport class TotalPlaytimeComponentRefMut extends TotalPlaytimeComponentRef {\n    /**\n     * Encodes the component's state information as JSON.\n     */\n    stateAsJson(timer: TimerRef): any {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (timer.ptr == 0) {\n            throw \"timer is disposed\";\n        }\n        const result = instance().exports.TotalPlaytimeComponent_state_as_json(this.ptr, timer.ptr);\n        return JSON.parse(decodeString(result));\n    }\n    /**\n     * Calculates the component's state based on the timer provided.\n     */\n    state(timer: TimerRef): TotalPlaytimeComponentState {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        if (timer.ptr == 0) {\n            throw \"timer is disposed\";\n        }\n        const result = new TotalPlaytimeComponentState(instance().exports.TotalPlaytimeComponent_state(this.ptr, timer.ptr));\n        return result;\n    }\n}\n\n/**\n * The Total Playtime Component is a component that shows the total amount of\n * time that the current category has been played for.\n */\nexport class TotalPlaytimeComponent extends TotalPlaytimeComponentRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: TotalPlaytimeComponent) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.TotalPlaytimeComponent_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n    /**\n     * Creates a new Total Playtime Component.\n     */\n    static new(): TotalPlaytimeComponent {\n        const result = new TotalPlaytimeComponent(instance().exports.TotalPlaytimeComponent_new());\n        return result;\n    }\n    /**\n     * Converts the component into a generic component suitable for using with a\n     * layout.\n     */\n    intoGeneric(): Component {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = new Component(instance().exports.TotalPlaytimeComponent_into_generic(this.ptr));\n        this.ptr = 0;\n        return result;\n    }\n}\n\n/**\n * The state object describes the information to visualize for this component.\n */\nexport class TotalPlaytimeComponentStateRef {\n    ptr: number;\n    /**\n     * The label's text.\n     */\n    text(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.TotalPlaytimeComponentState_text(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * The total playtime.\n     */\n    time(): string {\n        if (this.ptr == 0) {\n            throw \"this is disposed\";\n        }\n        const result = instance().exports.TotalPlaytimeComponentState_time(this.ptr);\n        return decodeString(result);\n    }\n    /**\n     * This constructor is an implementation detail. Do not use this.\n     */\n    constructor(ptr: number) {\n        this.ptr = ptr;\n    }\n}\n\n/**\n * The state object describes the information to visualize for this component.\n */\nexport class TotalPlaytimeComponentStateRefMut extends TotalPlaytimeComponentStateRef {\n}\n\n/**\n * The state object describes the information to visualize for this component.\n */\nexport class TotalPlaytimeComponentState extends TotalPlaytimeComponentStateRefMut {\n    /**\n     * Allows for scoped usage of the object. The object is guaranteed to get\n     * disposed once this function returns. You are free to dispose the object\n     * early yourself anywhere within the scope. The scope's return value gets\n     * carried to the outside of this function.\n     */\n    with<T>(closure: (obj: TotalPlaytimeComponentState) => T): T {\n        try {\n            return closure(this);\n        } finally {\n            this.dispose();\n        }\n    }\n    /**\n     * Disposes the object, allowing it to clean up all of its memory. You need\n     * to call this for every object that you don't use anymore and hasn't\n     * already been disposed.\n     */\n    dispose() {\n        if (this.ptr != 0) {\n            instance().exports.TotalPlaytimeComponentState_drop(this.ptr);\n            this.ptr = 0;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/livesplit.ts","'use strict';\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n  window.Promise = require('promise/lib/es6-extensions.js');\n}\n\n// fetch() polyfill for making API calls.\nrequire('whatwg-fetch');\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = require('object-assign');\n\n// In tests, polyfill requestAnimationFrame since jsdom doesn't provide it yet.\n// We don't polyfill it in the browser--this is user's responsibility.\nif (process.env.NODE_ENV === 'test') {\n  require('raf').polyfill(global);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./config/polyfills.js\n// module id = 10\n// module chunks = 0","'use strict';\n\nvar Promise = require('./core');\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._47 = null;\n  Promise._71 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._47 = function (promise) {\n    if (\n      promise._83 === 2 && // IS REJECTED\n      rejections[promise._56]\n    ) {\n      if (rejections[promise._56].logged) {\n        onHandled(promise._56);\n      } else {\n        clearTimeout(rejections[promise._56].timeout);\n      }\n      delete rejections[promise._56];\n    }\n  };\n  Promise._71 = function (promise, err) {\n    if (promise._75 === 0) { // not yet handled\n      promise._56 = id++;\n      rejections[promise._56] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._56),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/promise/lib/rejection-tracking.js\n// module id = 11\n// module chunks = 0","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/asap/browser-raw.js\n// module id = 12\n// module chunks = 0","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._44);\n  p._83 = 1;\n  p._18 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._83 === 3) {\n            val = val._18;\n          }\n          if (val._83 === 1) return res(i, val._18);\n          if (val._83 === 2) reject(val._18);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/promise/lib/es6-extensions.js\n// module id = 13\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/whatwg-fetch/fetch.js\n// module id = 14\n// module chunks = 0","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.tsx","/** @license React v16.4.2\n * react.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var k=require(\"object-assign\"),n=require(\"fbjs/lib/invariant\"),p=require(\"fbjs/lib/emptyObject\"),q=require(\"fbjs/lib/emptyFunction\"),r=\"function\"===typeof Symbol&&Symbol.for,t=r?Symbol.for(\"react.element\"):60103,u=r?Symbol.for(\"react.portal\"):60106,v=r?Symbol.for(\"react.fragment\"):60107,w=r?Symbol.for(\"react.strict_mode\"):60108,x=r?Symbol.for(\"react.profiler\"):60114,y=r?Symbol.for(\"react.provider\"):60109,z=r?Symbol.for(\"react.context\"):60110,A=r?Symbol.for(\"react.async_mode\"):60111,B=\nr?Symbol.for(\"react.forward_ref\"):60112;r&&Symbol.for(\"react.timeout\");var C=\"function\"===typeof Symbol&&Symbol.iterator;function D(a){for(var b=arguments.length-1,e=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=0;c<b;c++)e+=\"&args[]=\"+encodeURIComponent(arguments[c+1]);n(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",e)}\nvar E={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function F(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||E}F.prototype.isReactComponent={};F.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?D(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function G(){}\nG.prototype=F.prototype;function H(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||E}var I=H.prototype=new G;I.constructor=H;k(I,F.prototype);I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var c=void 0,d={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,c)&&!L.hasOwnProperty(c)&&(d[c]=b[c]);var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];d.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===d[c]&&(d[c]=f[c]);return{$$typeof:t,type:a,key:g,ref:h,props:d,_owner:J.current}}\nfunction N(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===t}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var O=/\\/+/g,P=[];function Q(a,b,e,c){if(P.length){var d=P.pop();d.result=a;d.keyPrefix=b;d.func=e;d.context=c;d.count=0;return d}return{result:a,keyPrefix:b,func:e,context:c,count:0}}function R(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>P.length&&P.push(a)}\nfunction S(a,b,e,c){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case t:case u:g=!0}}if(g)return e(c,a,\"\"===b?\".\"+T(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){d=a[h];var f=b+T(d,h);g+=S(d,f,e,c)}else if(null===a||\"undefined\"===typeof a?f=null:(f=C&&a[C]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),\nh=0;!(d=a.next()).done;)d=d.value,f=b+T(d,h++),g+=S(d,f,e,c);else\"object\"===d&&(e=\"\"+a,D(\"31\",\"[object Object]\"===e?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":e,\"\"));return g}function T(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function U(a,b){a.func.call(a.context,b,a.count++)}\nfunction V(a,b,e){var c=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?W(a,c,e,q.thatReturnsArgument):null!=a&&(N(a)&&(b=d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(O,\"$&/\")+\"/\")+e,a={$$typeof:t,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}),c.push(a))}function W(a,b,e,c,d){var g=\"\";null!=e&&(g=(\"\"+e).replace(O,\"$&/\")+\"/\");b=Q(b,g,c,d);null==a||S(a,\"\",V,b);R(b)}\nvar X={Children:{map:function(a,b,e){if(null==a)return a;var c=[];W(a,c,null,b,e);return c},forEach:function(a,b,e){if(null==a)return a;b=Q(null,null,b,e);null==a||S(a,\"\",U,b);R(b)},count:function(a){return null==a?0:S(a,\"\",q.thatReturnsNull,null)},toArray:function(a){var b=[];W(a,b,null,q.thatReturnsArgument);return b},only:function(a){N(a)?void 0:D(\"143\");return a}},createRef:function(){return{current:null}},Component:F,PureComponent:H,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:z,\n_calculateChangedBits:b,_defaultValue:a,_currentValue:a,_currentValue2:a,_changedBits:0,_changedBits2:0,Provider:null,Consumer:null};a.Provider={$$typeof:y,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:B,render:a}},Fragment:v,StrictMode:w,unstable_AsyncMode:A,unstable_Profiler:x,createElement:M,cloneElement:function(a,b,e){null===a||void 0===a?D(\"267\",a):void 0;var c=void 0,d=k({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=b){void 0!==b.ref&&(h=b.ref,f=J.current);void 0!==\nb.key&&(g=\"\"+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)K.call(b,c)&&!L.hasOwnProperty(c)&&(d[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)d.children=e;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];d.children=l}return{$$typeof:t,type:a.type,key:g,ref:h,props:d,_owner:f}},createFactory:function(a){var b=M.bind(null,a);b.type=a;return b},isValidElement:N,version:\"16.4.2\",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:J,\nassign:k}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default?Z.default:Z;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react/cjs/react.production.min.js\n// module id = 16\n// module chunks = 0","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-dom/index.js\n// module id = 17\n// module chunks = 0","/** @license React v16.4.2\n * react-dom.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"fbjs/lib/invariant\"),ba=require(\"react\"),m=require(\"fbjs/lib/ExecutionEnvironment\"),p=require(\"object-assign\"),v=require(\"fbjs/lib/emptyFunction\"),da=require(\"fbjs/lib/getActiveElement\"),ea=require(\"fbjs/lib/shallowEqual\"),fa=require(\"fbjs/lib/containsNode\"),ha=require(\"fbjs/lib/emptyObject\");\nfunction A(a){for(var b=arguments.length-1,c=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,d=0;d<b;d++)c+=\"&args[]=\"+encodeURIComponent(arguments[d+1]);aa(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",c)}ba?void 0:A(\"227\");\nfunction ia(a,b,c,d,e,f,g,h,k){this._hasCaughtError=!1;this._caughtError=null;var n=Array.prototype.slice.call(arguments,3);try{b.apply(c,n)}catch(r){this._caughtError=r,this._hasCaughtError=!0}}\nvar B={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,invokeGuardedCallback:function(a,b,c,d,e,f,g,h,k){ia.apply(B,arguments)},invokeGuardedCallbackAndCatchFirstError:function(a,b,c,d,e,f,g,h,k){B.invokeGuardedCallback.apply(this,arguments);if(B.hasCaughtError()){var n=B.clearCaughtError();B._hasRethrowError||(B._hasRethrowError=!0,B._rethrowError=n)}},rethrowCaughtError:function(){return ka.apply(B,arguments)},hasCaughtError:function(){return B._hasCaughtError},clearCaughtError:function(){if(B._hasCaughtError){var a=\nB._caughtError;B._caughtError=null;B._hasCaughtError=!1;return a}A(\"198\")}};function ka(){if(B._hasRethrowError){var a=B._rethrowError;B._rethrowError=null;B._hasRethrowError=!1;throw a;}}var la=null,ma={};\nfunction na(){if(la)for(var a in ma){var b=ma[a],c=la.indexOf(a);-1<c?void 0:A(\"96\",a);if(!oa[c]){b.extractEvents?void 0:A(\"97\",a);oa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;pa.hasOwnProperty(h)?A(\"99\",h):void 0;pa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&qa(k[e],g,h);e=!0}else f.registrationName?(qa(f.registrationName,g,h),e=!0):e=!1;e?void 0:A(\"98\",d,a)}}}}\nfunction qa(a,b,c){ra[a]?A(\"100\",a):void 0;ra[a]=b;sa[a]=b.eventTypes[c].dependencies}var oa=[],pa={},ra={},sa={};function ta(a){la?A(\"101\"):void 0;la=Array.prototype.slice.call(a);na()}function ua(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];ma.hasOwnProperty(c)&&ma[c]===d||(ma[c]?A(\"102\",c):void 0,ma[c]=d,b=!0)}b&&na()}\nvar va={plugins:oa,eventNameDispatchConfigs:pa,registrationNameModules:ra,registrationNameDependencies:sa,possibleRegistrationNames:null,injectEventPluginOrder:ta,injectEventPluginsByName:ua},wa=null,xa=null,ya=null;function za(a,b,c,d){b=a.type||\"unknown-event\";a.currentTarget=ya(d);B.invokeGuardedCallbackAndCatchFirstError(b,c,void 0,a);a.currentTarget=null}\nfunction Aa(a,b){null==b?A(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function Ba(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var Ca=null;\nfunction Da(a,b){if(a){var c=a._dispatchListeners,d=a._dispatchInstances;if(Array.isArray(c))for(var e=0;e<c.length&&!a.isPropagationStopped();e++)za(a,b,c[e],d[e]);else c&&za(a,b,c,d);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function Ea(a){return Da(a,!0)}function Fa(a){return Da(a,!1)}var Ga={injectEventPluginOrder:ta,injectEventPluginsByName:ua};\nfunction Ha(a,b){var c=a.stateNode;if(!c)return null;var d=wa(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?A(\"231\",b,typeof c):void 0;\nreturn c}function Ia(a,b){null!==a&&(Ca=Aa(Ca,a));a=Ca;Ca=null;a&&(b?Ba(a,Ea):Ba(a,Fa),Ca?A(\"95\"):void 0,B.rethrowCaughtError())}function Ja(a,b,c,d){for(var e=null,f=0;f<oa.length;f++){var g=oa[f];g&&(g=g.extractEvents(a,b,c,d))&&(e=Aa(e,g))}Ia(e,!1)}var Ka={injection:Ga,getListener:Ha,runEventsInBatch:Ia,runExtractedEventsInBatch:Ja},La=Math.random().toString(36).slice(2),C=\"__reactInternalInstance$\"+La,Ma=\"__reactEventHandlers$\"+La;\nfunction Na(a){if(a[C])return a[C];for(;!a[C];)if(a.parentNode)a=a.parentNode;else return null;a=a[C];return 5===a.tag||6===a.tag?a:null}function Oa(a){if(5===a.tag||6===a.tag)return a.stateNode;A(\"33\")}function Pa(a){return a[Ma]||null}var Qa={precacheFiberNode:function(a,b){b[C]=a},getClosestInstanceFromNode:Na,getInstanceFromNode:function(a){a=a[C];return!a||5!==a.tag&&6!==a.tag?null:a},getNodeFromInstance:Oa,getFiberCurrentPropsFromNode:Pa,updateFiberProps:function(a,b){a[Ma]=b}};\nfunction F(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Ra(a,b,c){for(var d=[];a;)d.push(a),a=F(a);for(a=d.length;0<a--;)b(d[a],\"captured\",c);for(a=0;a<d.length;a++)b(d[a],\"bubbled\",c)}function Sa(a,b,c){if(b=Ha(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=Aa(c._dispatchListeners,b),c._dispatchInstances=Aa(c._dispatchInstances,a)}function Ta(a){a&&a.dispatchConfig.phasedRegistrationNames&&Ra(a._targetInst,Sa,a)}\nfunction Ua(a){if(a&&a.dispatchConfig.phasedRegistrationNames){var b=a._targetInst;b=b?F(b):null;Ra(b,Sa,a)}}function Va(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Ha(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=Aa(c._dispatchListeners,b),c._dispatchInstances=Aa(c._dispatchInstances,a))}function Xa(a){a&&a.dispatchConfig.registrationName&&Va(a._targetInst,null,a)}function Ya(a){Ba(a,Ta)}\nfunction Za(a,b,c,d){if(c&&d)a:{var e=c;for(var f=d,g=0,h=e;h;h=F(h))g++;h=0;for(var k=f;k;k=F(k))h++;for(;0<g-h;)e=F(e),g--;for(;0<h-g;)f=F(f),h--;for(;g--;){if(e===f||e===f.alternate)break a;e=F(e);f=F(f)}e=null}else e=null;f=e;for(e=[];c&&c!==f;){g=c.alternate;if(null!==g&&g===f)break;e.push(c);c=F(c)}for(c=[];d&&d!==f;){g=d.alternate;if(null!==g&&g===f)break;c.push(d);d=F(d)}for(d=0;d<e.length;d++)Va(e[d],\"bubbled\",a);for(a=c.length;0<a--;)Va(c[a],\"captured\",b)}\nvar $a={accumulateTwoPhaseDispatches:Ya,accumulateTwoPhaseDispatchesSkipTarget:function(a){Ba(a,Ua)},accumulateEnterLeaveDispatches:Za,accumulateDirectDispatches:function(a){Ba(a,Xa)}};function ab(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;c[\"ms\"+a]=\"MS\"+b;c[\"O\"+a]=\"o\"+b.toLowerCase();return c}\nvar bb={animationend:ab(\"Animation\",\"AnimationEnd\"),animationiteration:ab(\"Animation\",\"AnimationIteration\"),animationstart:ab(\"Animation\",\"AnimationStart\"),transitionend:ab(\"Transition\",\"TransitionEnd\")},cb={},db={};m.canUseDOM&&(db=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete bb.animationend.animation,delete bb.animationiteration.animation,delete bb.animationstart.animation),\"TransitionEvent\"in window||delete bb.transitionend.transition);\nfunction eb(a){if(cb[a])return cb[a];if(!bb[a])return a;var b=bb[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in db)return cb[a]=b[c];return a}var fb=eb(\"animationend\"),gb=eb(\"animationiteration\"),hb=eb(\"animationstart\"),ib=eb(\"transitionend\"),jb=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),kb=null;\nfunction lb(){!kb&&m.canUseDOM&&(kb=\"textContent\"in document.documentElement?\"textContent\":\"innerText\");return kb}var G={_root:null,_startText:null,_fallbackText:null};function mb(){if(G._fallbackText)return G._fallbackText;var a,b=G._startText,c=b.length,d,e=nb(),f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);G._fallbackText=e.slice(a,1<d?1-d:void 0);return G._fallbackText}function nb(){return\"value\"in G._root?G._root.value:G._root[lb()]}\nvar ob=\"dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances\".split(\" \"),pb={type:null,target:null,currentTarget:v.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\nfunction H(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?v.thatReturnsTrue:v.thatReturnsFalse;this.isPropagationStopped=v.thatReturnsFalse;return this}\np(H.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=v.thatReturnsTrue)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=v.thatReturnsTrue)},persist:function(){this.isPersistent=v.thatReturnsTrue},isPersistent:v.thatReturnsFalse,\ndestructor:function(){var a=this.constructor.Interface,b;for(b in a)this[b]=null;for(a=0;a<ob.length;a++)this[ob[a]]=null}});H.Interface=pb;H.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;p(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=p({},d.Interface,a);c.extend=d.extend;qb(c);return c};qb(H);\nfunction rb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function sb(a){a instanceof this?void 0:A(\"223\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function qb(a){a.eventPool=[];a.getPooled=rb;a.release=sb}var tb=H.extend({data:null}),ub=H.extend({data:null}),vb=[9,13,27,32],wb=m.canUseDOM&&\"CompositionEvent\"in window,xb=null;m.canUseDOM&&\"documentMode\"in document&&(xb=document.documentMode);\nvar yb=m.canUseDOM&&\"TextEvent\"in window&&!xb,zb=m.canUseDOM&&(!wb||xb&&8<xb&&11>=xb),Ab=String.fromCharCode(32),Bb={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},Cb=!1;\nfunction Db(a,b){switch(a){case \"keyup\":return-1!==vb.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function Eb(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var Fb=!1;function Gb(a,b){switch(a){case \"compositionend\":return Eb(b);case \"keypress\":if(32!==b.which)return null;Cb=!0;return Ab;case \"textInput\":return a=b.data,a===Ab&&Cb?null:a;default:return null}}\nfunction Hb(a,b){if(Fb)return\"compositionend\"===a||!wb&&Db(a,b)?(a=mb(),G._root=null,G._startText=null,G._fallbackText=null,Fb=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return zb?null:b.data;default:return null}}\nvar Ib={eventTypes:Bb,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(wb)b:{switch(a){case \"compositionstart\":e=Bb.compositionStart;break b;case \"compositionend\":e=Bb.compositionEnd;break b;case \"compositionupdate\":e=Bb.compositionUpdate;break b}e=void 0}else Fb?Db(a,c)&&(e=Bb.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(e=Bb.compositionStart);e?(zb&&(Fb||e!==Bb.compositionStart?e===Bb.compositionEnd&&Fb&&(f=mb()):(G._root=d,G._startText=nb(),Fb=!0)),e=tb.getPooled(e,b,c,d),f?e.data=\nf:(f=Eb(c),null!==f&&(e.data=f)),Ya(e),f=e):f=null;(a=yb?Gb(a,c):Hb(a,c))?(b=ub.getPooled(Bb.beforeInput,b,c,d),b.data=a,Ya(b)):b=null;return null===f?b:null===b?f:[f,b]}},Jb=null,Kb={injectFiberControlledHostComponent:function(a){Jb=a}},Lb=null,Mb=null;function Nb(a){if(a=xa(a)){Jb&&\"function\"===typeof Jb.restoreControlledState?void 0:A(\"194\");var b=wa(a.stateNode);Jb.restoreControlledState(a.stateNode,a.type,b)}}function Ob(a){Lb?Mb?Mb.push(a):Mb=[a]:Lb=a}\nfunction Pb(){return null!==Lb||null!==Mb}function Qb(){if(Lb){var a=Lb,b=Mb;Mb=Lb=null;Nb(a);if(b)for(a=0;a<b.length;a++)Nb(b[a])}}var Rb={injection:Kb,enqueueStateRestore:Ob,needsStateRestore:Pb,restoreStateIfNeeded:Qb};function Sb(a,b){return a(b)}function Tb(a,b,c){return a(b,c)}function Ub(){}var Vb=!1;function Wb(a,b){if(Vb)return a(b);Vb=!0;try{return Sb(a,b)}finally{Vb=!1,Pb()&&(Ub(),Qb())}}\nvar Xb={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Yb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!Xb[a.type]:\"textarea\"===b?!0:!1}function Zb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}\nfunction $b(a,b){if(!m.canUseDOM||b&&!(\"addEventListener\"in document))return!1;a=\"on\"+a;b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function ac(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction bc(a){var b=ac(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function cc(a){a._valueTracker||(a._valueTracker=bc(a))}function dc(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=ac(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}\nvar ec=ba.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,fc=\"function\"===typeof Symbol&&Symbol.for,gc=fc?Symbol.for(\"react.element\"):60103,hc=fc?Symbol.for(\"react.portal\"):60106,ic=fc?Symbol.for(\"react.fragment\"):60107,jc=fc?Symbol.for(\"react.strict_mode\"):60108,kc=fc?Symbol.for(\"react.profiler\"):60114,lc=fc?Symbol.for(\"react.provider\"):60109,mc=fc?Symbol.for(\"react.context\"):60110,pc=fc?Symbol.for(\"react.async_mode\"):60111,qc=fc?Symbol.for(\"react.forward_ref\"):60112,rc=fc?Symbol.for(\"react.timeout\"):\n60113,sc=\"function\"===typeof Symbol&&Symbol.iterator;function tc(a){if(null===a||\"undefined\"===typeof a)return null;a=sc&&a[sc]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction uc(a){var b=a.type;if(\"function\"===typeof b)return b.displayName||b.name;if(\"string\"===typeof b)return b;switch(b){case pc:return\"AsyncMode\";case mc:return\"Context.Consumer\";case ic:return\"ReactFragment\";case hc:return\"ReactPortal\";case kc:return\"Profiler(\"+a.pendingProps.id+\")\";case lc:return\"Context.Provider\";case jc:return\"StrictMode\";case rc:return\"Timeout\"}if(\"object\"===typeof b&&null!==b)switch(b.$$typeof){case qc:return a=b.render.displayName||b.render.name||\"\",\"\"!==a?\"ForwardRef(\"+\na+\")\":\"ForwardRef\"}return null}function vc(a){var b=\"\";do{a:switch(a.tag){case 0:case 1:case 2:case 5:var c=a._debugOwner,d=a._debugSource;var e=uc(a);var f=null;c&&(f=uc(c));c=d;e=\"\\n    in \"+(e||\"Unknown\")+(c?\" (at \"+c.fileName.replace(/^.*[\\\\\\/]/,\"\")+\":\"+c.lineNumber+\")\":f?\" (created by \"+f+\")\":\"\");break a;default:e=\"\"}b+=e;a=a.return}while(a);return b}\nvar wc=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,xc=Object.prototype.hasOwnProperty,zc={},Ac={};\nfunction Bc(a){if(xc.call(Ac,a))return!0;if(xc.call(zc,a))return!1;if(wc.test(a))return Ac[a]=!0;zc[a]=!0;return!1}function Cc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction Dc(a,b,c,d){if(null===b||\"undefined\"===typeof b||Cc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function I(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var J={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){J[a]=new I(a,0,!1,a,null)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];J[b]=new I(b,1,!1,a[1],null)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){J[a]=new I(a,2,!1,a.toLowerCase(),null)});\n[\"autoReverse\",\"externalResourcesRequired\",\"preserveAlpha\"].forEach(function(a){J[a]=new I(a,2,!1,a,null)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){J[a]=new I(a,3,!1,a.toLowerCase(),null)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){J[a]=new I(a,3,!0,a.toLowerCase(),null)});\n[\"capture\",\"download\"].forEach(function(a){J[a]=new I(a,4,!1,a.toLowerCase(),null)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){J[a]=new I(a,6,!1,a.toLowerCase(),null)});[\"rowSpan\",\"start\"].forEach(function(a){J[a]=new I(a,5,!1,a.toLowerCase(),null)});var Ec=/[\\-:]([a-z])/g;function Fc(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(Ec,\nFc);J[b]=new I(b,1,!1,a,null)});\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(Ec,Fc);J[b]=new I(b,1,!1,a,\"http://www.w3.org/1999/xlink\")});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(Ec,Fc);J[b]=new I(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\")});J.tabIndex=new I(\"tabIndex\",1,!1,\"tabindex\",null);\nfunction Gc(a,b,c,d){var e=J.hasOwnProperty(b)?J[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(Dc(b,c,e,d)&&(c=null),d||null===e?Bc(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nfunction Hc(a,b){var c=b.checked;return p({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Ic(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Jc(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function Kc(a,b){b=b.checked;null!=b&&Gc(a,\"checked\",b,!1)}\nfunction Lc(a,b){Kc(a,b);var c=Jc(b.value);if(null!=c)if(\"number\"===b.type){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);b.hasOwnProperty(\"value\")?Mc(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&Mc(a,b.type,Jc(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Nc(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){b=\"\"+a._wrapperState.initialValue;var d=a.value;c||b===d||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!a.defaultChecked;\"\"!==c&&(a.name=c)}function Mc(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}\nfunction Jc(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}var Oc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function Pc(a,b,c){a=H.getPooled(Oc.change,a,b,c);a.type=\"change\";Ob(c);Ya(a);return a}var Qc=null,Rc=null;function Sc(a){Ia(a,!1)}function Tc(a){var b=Oa(a);if(dc(b))return a}\nfunction Uc(a,b){if(\"change\"===a)return b}var Vc=!1;m.canUseDOM&&(Vc=$b(\"input\")&&(!document.documentMode||9<document.documentMode));function Wc(){Qc&&(Qc.detachEvent(\"onpropertychange\",Xc),Rc=Qc=null)}function Xc(a){\"value\"===a.propertyName&&Tc(Rc)&&(a=Pc(Rc,a,Zb(a)),Wb(Sc,a))}function Yc(a,b,c){\"focus\"===a?(Wc(),Qc=b,Rc=c,Qc.attachEvent(\"onpropertychange\",Xc)):\"blur\"===a&&Wc()}function Zc(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return Tc(Rc)}\nfunction $c(a,b){if(\"click\"===a)return Tc(b)}function ad(a,b){if(\"input\"===a||\"change\"===a)return Tc(b)}\nvar bd={eventTypes:Oc,_isInputEventSupported:Vc,extractEvents:function(a,b,c,d){var e=b?Oa(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();\"select\"===h||\"input\"===h&&\"file\"===e.type?f=Uc:Yb(e)?Vc?f=ad:(f=Zc,g=Yc):(h=e.nodeName)&&\"input\"===h.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(f=$c);if(f&&(f=f(a,b)))return Pc(f,c,d);g&&g(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&Mc(e,\"number\",e.value)}},cd=H.extend({view:null,detail:null}),dd={Alt:\"altKey\",\nControl:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function ed(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=dd[a])?!!b[a]:!1}function fd(){return ed}\nvar gd=cd.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:fd,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)}}),hd=gd.extend({pointerId:null,width:null,height:null,pressure:null,tiltX:null,tiltY:null,pointerType:null,isPrimary:null}),id={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"mouseout\",\"mouseover\"]},\nmouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",dependencies:[\"pointerout\",\"pointerover\"]}},jd={eventTypes:id,extractEvents:function(a,b,c,d){var e=\"mouseover\"===a||\"pointerover\"===a,f=\"mouseout\"===a||\"pointerout\"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||\ne.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Na(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,k=void 0,n=void 0;if(\"mouseout\"===a||\"mouseover\"===a)g=gd,h=id.mouseLeave,k=id.mouseEnter,n=\"mouse\";else if(\"pointerout\"===a||\"pointerover\"===a)g=hd,h=id.pointerLeave,k=id.pointerEnter,n=\"pointer\";a=null==f?e:Oa(f);e=null==b?e:Oa(b);h=g.getPooled(h,f,c,d);h.type=n+\"leave\";h.target=a;h.relatedTarget=e;c=g.getPooled(k,b,c,d);c.type=n+\"enter\";c.target=e;c.relatedTarget=a;Za(h,\nc,f,b);return[h,c]}};function kd(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function ld(a){2!==kd(a)?A(\"188\"):void 0}\nfunction md(a){var b=a.alternate;if(!b)return b=kd(a),3===b?A(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return ld(e),a;if(g===d)return ld(e),b;g=g.sibling}A(\"188\")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\nvoid 0:A(\"189\")}}c.alternate!==d?A(\"190\"):void 0}3!==c.tag?A(\"188\"):void 0;return c.stateNode.current===c?a:b}function nd(a){a=md(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nfunction od(a){a=md(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child&&4!==b.tag)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}var pd=H.extend({animationName:null,elapsedTime:null,pseudoElement:null}),qd=H.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),rd=cd.extend({relatedTarget:null});\nfunction sd(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar td={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},ud={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},vd=cd.extend({key:function(a){if(a.key){var b=td[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=sd(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?ud[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:fd,charCode:function(a){return\"keypress\"===\na.type?sd(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?sd(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),wd=gd.extend({dataTransfer:null}),xd=cd.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:fd}),yd=H.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),zd=gd.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\na?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),Ad=[[\"abort\",\"abort\"],[fb,\"animationEnd\"],[gb,\"animationIteration\"],[hb,\"animationStart\"],[\"canplay\",\"canPlay\"],[\"canplaythrough\",\"canPlayThrough\"],[\"drag\",\"drag\"],[\"dragenter\",\"dragEnter\"],[\"dragexit\",\"dragExit\"],[\"dragleave\",\"dragLeave\"],[\"dragover\",\"dragOver\"],[\"durationchange\",\"durationChange\"],[\"emptied\",\"emptied\"],[\"encrypted\",\"encrypted\"],\n[\"ended\",\"ended\"],[\"error\",\"error\"],[\"gotpointercapture\",\"gotPointerCapture\"],[\"load\",\"load\"],[\"loadeddata\",\"loadedData\"],[\"loadedmetadata\",\"loadedMetadata\"],[\"loadstart\",\"loadStart\"],[\"lostpointercapture\",\"lostPointerCapture\"],[\"mousemove\",\"mouseMove\"],[\"mouseout\",\"mouseOut\"],[\"mouseover\",\"mouseOver\"],[\"playing\",\"playing\"],[\"pointermove\",\"pointerMove\"],[\"pointerout\",\"pointerOut\"],[\"pointerover\",\"pointerOver\"],[\"progress\",\"progress\"],[\"scroll\",\"scroll\"],[\"seeking\",\"seeking\"],[\"stalled\",\"stalled\"],\n[\"suspend\",\"suspend\"],[\"timeupdate\",\"timeUpdate\"],[\"toggle\",\"toggle\"],[\"touchmove\",\"touchMove\"],[ib,\"transitionEnd\"],[\"waiting\",\"waiting\"],[\"wheel\",\"wheel\"]],Bd={},Cd={};function Dd(a,b){var c=a[0];a=a[1];var d=\"on\"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+\"Capture\"},dependencies:[c],isInteractive:b};Bd[a]=b;Cd[c]=b}\n[[\"blur\",\"blur\"],[\"cancel\",\"cancel\"],[\"click\",\"click\"],[\"close\",\"close\"],[\"contextmenu\",\"contextMenu\"],[\"copy\",\"copy\"],[\"cut\",\"cut\"],[\"dblclick\",\"doubleClick\"],[\"dragend\",\"dragEnd\"],[\"dragstart\",\"dragStart\"],[\"drop\",\"drop\"],[\"focus\",\"focus\"],[\"input\",\"input\"],[\"invalid\",\"invalid\"],[\"keydown\",\"keyDown\"],[\"keypress\",\"keyPress\"],[\"keyup\",\"keyUp\"],[\"mousedown\",\"mouseDown\"],[\"mouseup\",\"mouseUp\"],[\"paste\",\"paste\"],[\"pause\",\"pause\"],[\"play\",\"play\"],[\"pointercancel\",\"pointerCancel\"],[\"pointerdown\",\"pointerDown\"],\n[\"pointerup\",\"pointerUp\"],[\"ratechange\",\"rateChange\"],[\"reset\",\"reset\"],[\"seeked\",\"seeked\"],[\"submit\",\"submit\"],[\"touchcancel\",\"touchCancel\"],[\"touchend\",\"touchEnd\"],[\"touchstart\",\"touchStart\"],[\"volumechange\",\"volumeChange\"]].forEach(function(a){Dd(a,!0)});Ad.forEach(function(a){Dd(a,!1)});\nvar Ed={eventTypes:Bd,isInteractiveTopLevelEventType:function(a){a=Cd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=Cd[a];if(!e)return null;switch(a){case \"keypress\":if(0===sd(c))return null;case \"keydown\":case \"keyup\":a=vd;break;case \"blur\":case \"focus\":a=rd;break;case \"click\":if(2===c.button)return null;case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=gd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=\nwd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=xd;break;case fb:case gb:case hb:a=pd;break;case ib:a=yd;break;case \"scroll\":a=cd;break;case \"wheel\":a=zd;break;case \"copy\":case \"cut\":case \"paste\":a=qd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=hd;break;default:a=H}b=a.getPooled(e,b,c,d);Ya(b);return b}},Fd=Ed.isInteractiveTopLevelEventType,\nGd=[];function Hd(a){var b=a.targetInst;do{if(!b){a.ancestors.push(b);break}var c;for(c=b;c.return;)c=c.return;c=3!==c.tag?null:c.stateNode.containerInfo;if(!c)break;a.ancestors.push(b);b=Na(c)}while(b);for(c=0;c<a.ancestors.length;c++)b=a.ancestors[c],Ja(a.topLevelType,b,a.nativeEvent,Zb(a.nativeEvent))}var Id=!0;function Kd(a){Id=!!a}function K(a,b){if(!b)return null;var c=(Fd(a)?Ld:Md).bind(null,a);b.addEventListener(a,c,!1)}\nfunction Nd(a,b){if(!b)return null;var c=(Fd(a)?Ld:Md).bind(null,a);b.addEventListener(a,c,!0)}function Ld(a,b){Tb(Md,a,b)}function Md(a,b){if(Id){var c=Zb(b);c=Na(c);null===c||\"number\"!==typeof c.tag||2===kd(c)||(c=null);if(Gd.length){var d=Gd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Wb(Hd,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>Gd.length&&Gd.push(a)}}}\nvar Od={get _enabled(){return Id},setEnabled:Kd,isEnabled:function(){return Id},trapBubbledEvent:K,trapCapturedEvent:Nd,dispatchEvent:Md},Pd={},Qd=0,Rd=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);function Sd(a){Object.prototype.hasOwnProperty.call(a,Rd)||(a[Rd]=Qd++,Pd[a[Rd]]={});return Pd[a[Rd]]}function Td(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ud(a,b){var c=Td(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Td(c)}}function Vd(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Wd=m.canUseDOM&&\"documentMode\"in document&&11>=document.documentMode,Xd={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},Yd=null,Zd=null,$d=null,ae=!1;\nfunction be(a,b){if(ae||null==Yd||Yd!==da())return null;var c=Yd;\"selectionStart\"in c&&Vd(c)?c={start:c.selectionStart,end:c.selectionEnd}:window.getSelection?(c=window.getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset}):c=void 0;return $d&&ea($d,c)?null:($d=c,a=H.getPooled(Xd.select,Zd,a,b),a.type=\"select\",a.target=Yd,Ya(a),a)}\nvar ce={eventTypes:Xd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Sd(e);f=sa.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Oa(b):window;switch(a){case \"focus\":if(Yb(e)||\"true\"===e.contentEditable)Yd=e,Zd=b,$d=null;break;case \"blur\":$d=Zd=Yd=null;break;case \"mousedown\":ae=!0;break;case \"contextmenu\":case \"mouseup\":return ae=!1,be(c,d);case \"selectionchange\":if(Wd)break;\ncase \"keydown\":case \"keyup\":return be(c,d)}return null}};Ga.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));wa=Qa.getFiberCurrentPropsFromNode;xa=Qa.getInstanceFromNode;ya=Qa.getNodeFromInstance;Ga.injectEventPluginsByName({SimpleEventPlugin:Ed,EnterLeaveEventPlugin:jd,ChangeEventPlugin:bd,SelectEventPlugin:ce,BeforeInputEventPlugin:Ib});\nvar de=\"function\"===typeof requestAnimationFrame?requestAnimationFrame:void 0,ee=Date,fe=setTimeout,ge=clearTimeout,he=void 0;if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var ie=performance;he=function(){return ie.now()}}else he=function(){return ee.now()};var je=void 0,ke=void 0;\nif(m.canUseDOM){var le=\"function\"===typeof de?de:function(){A(\"276\")},L=null,me=null,ne=-1,oe=!1,pe=!1,qe=0,re=33,se=33,te={didTimeout:!1,timeRemaining:function(){var a=qe-he();return 0<a?a:0}},ve=function(a,b){var c=a.scheduledCallback,d=!1;try{c(b),d=!0}finally{ke(a),d||(oe=!0,window.postMessage(ue,\"*\"))}},ue=\"__reactIdleCallback$\"+Math.random().toString(36).slice(2);window.addEventListener(\"message\",function(a){if(a.source===window&&a.data===ue&&(oe=!1,null!==L)){if(null!==L){var b=he();if(!(-1===\nne||ne>b)){a=-1;for(var c=[],d=L;null!==d;){var e=d.timeoutTime;-1!==e&&e<=b?c.push(d):-1!==e&&(-1===a||e<a)&&(a=e);d=d.next}if(0<c.length)for(te.didTimeout=!0,b=0,d=c.length;b<d;b++)ve(c[b],te);ne=a}}for(a=he();0<qe-a&&null!==L;)a=L,te.didTimeout=!1,ve(a,te),a=he();null===L||pe||(pe=!0,le(we))}},!1);var we=function(a){pe=!1;var b=a-qe+se;b<se&&re<se?(8>b&&(b=8),se=b<re?re:b):re=b;qe=a+se;oe||(oe=!0,window.postMessage(ue,\"*\"))};je=function(a,b){var c=-1;null!=b&&\"number\"===typeof b.timeout&&(c=he()+\nb.timeout);if(-1===ne||-1!==c&&c<ne)ne=c;a={scheduledCallback:a,timeoutTime:c,prev:null,next:null};null===L?L=a:(b=a.prev=me,null!==b&&(b.next=a));me=a;pe||(pe=!0,le(we));return a};ke=function(a){if(null!==a.prev||L===a){var b=a.next,c=a.prev;a.next=null;a.prev=null;null!==b?null!==c?(c.next=b,b.prev=c):(b.prev=null,L=b):null!==c?(c.next=null,me=c):me=L=null}}}else{var xe=new Map;je=function(a){var b={scheduledCallback:a,timeoutTime:0,next:null,prev:null},c=fe(function(){a({timeRemaining:function(){return Infinity},\ndidTimeout:!1})});xe.set(a,c);return b};ke=function(a){var b=xe.get(a.scheduledCallback);xe.delete(a);ge(b)}}function ye(a){var b=\"\";ba.Children.forEach(a,function(a){null==a||\"string\"!==typeof a&&\"number\"!==typeof a||(b+=a)});return b}function ze(a,b){a=p({children:void 0},b);if(b=ye(b.children))a.children=b;return a}\nfunction Ae(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+c;b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction Be(a,b){var c=b.value;a._wrapperState={initialValue:null!=c?c:b.defaultValue,wasMultiple:!!b.multiple}}function Ce(a,b){null!=b.dangerouslySetInnerHTML?A(\"91\"):void 0;return p({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function De(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?A(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:A(\"93\"),b=b[0]),c=\"\"+b),null==c&&(c=\"\"));a._wrapperState={initialValue:\"\"+c}}\nfunction Ee(a,b){var c=b.value;null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&(a.defaultValue=c));null!=b.defaultValue&&(a.defaultValue=b.defaultValue)}function Fe(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var Ge={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction He(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function Ie(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?He(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar Je=void 0,Ke=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Ge.svg||\"innerHTML\"in a)a.innerHTML=b;else{Je=Je||document.createElement(\"div\");Je.innerHTML=\"<svg>\"+b+\"</svg>\";for(b=Je.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction Le(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar Me={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,\nstopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Ne=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(Me).forEach(function(a){Ne.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);Me[b]=Me[a]})});\nfunction Oe(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\");var e=c;var f=b[c];e=null==f||\"boolean\"===typeof f||\"\"===f?\"\":d||\"number\"!==typeof f||0===f||Me.hasOwnProperty(e)&&Me[e]?(\"\"+f).trim():f+\"px\";\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var Pe=p({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction Qe(a,b,c){b&&(Pe[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?A(\"137\",a,c()):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?A(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:A(\"61\")),null!=b.style&&\"object\"!==typeof b.style?A(\"62\",c()):void 0)}\nfunction Re(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var Se=v.thatReturns(\"\");\nfunction Te(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Sd(a);b=sa[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case \"scroll\":Nd(\"scroll\",a);break;case \"focus\":case \"blur\":Nd(\"focus\",a);Nd(\"blur\",a);c.blur=!0;c.focus=!0;break;case \"cancel\":case \"close\":$b(e,!0)&&Nd(e,a);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===jb.indexOf(e)&&K(e,a)}c[e]=!0}}}\nfunction Ue(a,b,c,d){c=9===c.nodeType?c:c.ownerDocument;d===Ge.html&&(d=He(a));d===Ge.html?\"script\"===a?(a=c.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):a=\"string\"===typeof b.is?c.createElement(a,{is:b.is}):c.createElement(a):a=c.createElementNS(d,a);return a}function Ve(a,b){return(9===b.nodeType?b:b.ownerDocument).createTextNode(a)}\nfunction We(a,b,c,d){var e=Re(b,c);switch(b){case \"iframe\":case \"object\":K(\"load\",a);var f=c;break;case \"video\":case \"audio\":for(f=0;f<jb.length;f++)K(jb[f],a);f=c;break;case \"source\":K(\"error\",a);f=c;break;case \"img\":case \"image\":case \"link\":K(\"error\",a);K(\"load\",a);f=c;break;case \"form\":K(\"reset\",a);K(\"submit\",a);f=c;break;case \"details\":K(\"toggle\",a);f=c;break;case \"input\":Ic(a,c);f=Hc(a,c);K(\"invalid\",a);Te(d,\"onChange\");break;case \"option\":f=ze(a,c);break;case \"select\":Be(a,c);f=p({},c,{value:void 0});\nK(\"invalid\",a);Te(d,\"onChange\");break;case \"textarea\":De(a,c);f=Ce(a,c);K(\"invalid\",a);Te(d,\"onChange\");break;default:f=c}Qe(b,f,Se);var g=f,h;for(h in g)if(g.hasOwnProperty(h)){var k=g[h];\"style\"===h?Oe(a,k,Se):\"dangerouslySetInnerHTML\"===h?(k=k?k.__html:void 0,null!=k&&Ke(a,k)):\"children\"===h?\"string\"===typeof k?(\"textarea\"!==b||\"\"!==k)&&Le(a,k):\"number\"===typeof k&&Le(a,\"\"+k):\"suppressContentEditableWarning\"!==h&&\"suppressHydrationWarning\"!==h&&\"autoFocus\"!==h&&(ra.hasOwnProperty(h)?null!=k&&Te(d,\nh):null!=k&&Gc(a,h,k,e))}switch(b){case \"input\":cc(a);Nc(a,c,!1);break;case \"textarea\":cc(a);Fe(a,c);break;case \"option\":null!=c.value&&a.setAttribute(\"value\",c.value);break;case \"select\":a.multiple=!!c.multiple;b=c.value;null!=b?Ae(a,!!c.multiple,b,!1):null!=c.defaultValue&&Ae(a,!!c.multiple,c.defaultValue,!0);break;default:\"function\"===typeof f.onClick&&(a.onclick=v)}}\nfunction Xe(a,b,c,d,e){var f=null;switch(b){case \"input\":c=Hc(a,c);d=Hc(a,d);f=[];break;case \"option\":c=ze(a,c);d=ze(a,d);f=[];break;case \"select\":c=p({},c,{value:void 0});d=p({},d,{value:void 0});f=[];break;case \"textarea\":c=Ce(a,c);d=Ce(a,d);f=[];break;default:\"function\"!==typeof c.onClick&&\"function\"===typeof d.onClick&&(a.onclick=v)}Qe(b,d,Se);b=a=void 0;var g=null;for(a in c)if(!d.hasOwnProperty(a)&&c.hasOwnProperty(a)&&null!=c[a])if(\"style\"===a){var h=c[a];for(b in h)h.hasOwnProperty(b)&&(g||\n(g={}),g[b]=\"\")}else\"dangerouslySetInnerHTML\"!==a&&\"children\"!==a&&\"suppressContentEditableWarning\"!==a&&\"suppressHydrationWarning\"!==a&&\"autoFocus\"!==a&&(ra.hasOwnProperty(a)?f||(f=[]):(f=f||[]).push(a,null));for(a in d){var k=d[a];h=null!=c?c[a]:void 0;if(d.hasOwnProperty(a)&&k!==h&&(null!=k||null!=h))if(\"style\"===a)if(h){for(b in h)!h.hasOwnProperty(b)||k&&k.hasOwnProperty(b)||(g||(g={}),g[b]=\"\");for(b in k)k.hasOwnProperty(b)&&h[b]!==k[b]&&(g||(g={}),g[b]=k[b])}else g||(f||(f=[]),f.push(a,g)),\ng=k;else\"dangerouslySetInnerHTML\"===a?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(a,\"\"+k)):\"children\"===a?h===k||\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(a,\"\"+k):\"suppressContentEditableWarning\"!==a&&\"suppressHydrationWarning\"!==a&&(ra.hasOwnProperty(a)?(null!=k&&Te(e,a),f||h===k||(f=[])):(f=f||[]).push(a,k))}g&&(f=f||[]).push(\"style\",g);return f}\nfunction Ye(a,b,c,d,e){\"input\"===c&&\"radio\"===e.type&&null!=e.name&&Kc(a,e);Re(c,d);d=Re(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];\"style\"===g?Oe(a,h,Se):\"dangerouslySetInnerHTML\"===g?Ke(a,h):\"children\"===g?Le(a,h):Gc(a,g,h,d)}switch(c){case \"input\":Lc(a,e);break;case \"textarea\":Ee(a,e);break;case \"select\":a._wrapperState.initialValue=void 0,b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?Ae(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?\nAe(a,!!e.multiple,e.defaultValue,!0):Ae(a,!!e.multiple,e.multiple?[]:\"\",!1))}}\nfunction Ze(a,b,c,d,e){switch(b){case \"iframe\":case \"object\":K(\"load\",a);break;case \"video\":case \"audio\":for(d=0;d<jb.length;d++)K(jb[d],a);break;case \"source\":K(\"error\",a);break;case \"img\":case \"image\":case \"link\":K(\"error\",a);K(\"load\",a);break;case \"form\":K(\"reset\",a);K(\"submit\",a);break;case \"details\":K(\"toggle\",a);break;case \"input\":Ic(a,c);K(\"invalid\",a);Te(e,\"onChange\");break;case \"select\":Be(a,c);K(\"invalid\",a);Te(e,\"onChange\");break;case \"textarea\":De(a,c),K(\"invalid\",a),Te(e,\"onChange\")}Qe(b,\nc,Se);d=null;for(var f in c)if(c.hasOwnProperty(f)){var g=c[f];\"children\"===f?\"string\"===typeof g?a.textContent!==g&&(d=[\"children\",g]):\"number\"===typeof g&&a.textContent!==\"\"+g&&(d=[\"children\",\"\"+g]):ra.hasOwnProperty(f)&&null!=g&&Te(e,f)}switch(b){case \"input\":cc(a);Nc(a,c,!0);break;case \"textarea\":cc(a);Fe(a,c);break;case \"select\":case \"option\":break;default:\"function\"===typeof c.onClick&&(a.onclick=v)}return d}function $e(a,b){return a.nodeValue!==b}\nvar af={createElement:Ue,createTextNode:Ve,setInitialProperties:We,diffProperties:Xe,updateProperties:Ye,diffHydratedProperties:Ze,diffHydratedText:$e,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(a,b,c){switch(b){case \"input\":Lc(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;\nc=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Pa(d);e?void 0:A(\"90\");dc(d);Lc(d,e)}}}break;case \"textarea\":Ee(a,c);break;case \"select\":b=c.value,null!=b&&Ae(a,!!c.multiple,b,!1)}}},bf=null,cf=null;function df(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\nfunction ef(a,b){return\"textarea\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&\"string\"===typeof b.dangerouslySetInnerHTML.__html}var ff=he,gf=je,hf=ke;function jf(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function kf(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var lf=[],mf=-1;function nf(a){return{current:a}}\nfunction M(a){0>mf||(a.current=lf[mf],lf[mf]=null,mf--)}function N(a,b){mf++;lf[mf]=a.current;a.current=b}var of=nf(ha),O=nf(!1),pf=ha;function qf(a){return rf(a)?pf:of.current}\nfunction sf(a,b){var c=a.type.contextTypes;if(!c)return ha;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function rf(a){return 2===a.tag&&null!=a.type.childContextTypes}function tf(a){rf(a)&&(M(O,a),M(of,a))}function uf(a){M(O,a);M(of,a)}\nfunction vf(a,b,c){of.current!==ha?A(\"168\"):void 0;N(of,b,a);N(O,c,a)}function wf(a,b){var c=a.stateNode,d=a.type.childContextTypes;if(\"function\"!==typeof c.getChildContext)return b;c=c.getChildContext();for(var e in c)e in d?void 0:A(\"108\",uc(a)||\"Unknown\",e);return p({},b,c)}function xf(a){if(!rf(a))return!1;var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||ha;pf=of.current;N(of,b,a);N(O,O.current,a);return!0}\nfunction yf(a,b){var c=a.stateNode;c?void 0:A(\"169\");if(b){var d=wf(a,pf);c.__reactInternalMemoizedMergedChildContext=d;M(O,a);M(of,a);N(of,d,a)}else M(O,a);N(O,b,a)}\nfunction zf(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=null;this.index=0;this.ref=null;this.pendingProps=b;this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.expirationTime=0;this.alternate=null}\nfunction Af(a,b,c){var d=a.alternate;null===d?(d=new zf(a.tag,b,a.key,a.mode),d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.pendingProps=b,d.effectTag=0,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null);d.expirationTime=c;d.child=a.child;d.memoizedProps=a.memoizedProps;d.memoizedState=a.memoizedState;d.updateQueue=a.updateQueue;d.sibling=a.sibling;d.index=a.index;d.ref=a.ref;return d}\nfunction Bf(a,b,c){var d=a.type,e=a.key;a=a.props;if(\"function\"===typeof d)var f=d.prototype&&d.prototype.isReactComponent?2:0;else if(\"string\"===typeof d)f=5;else switch(d){case ic:return Cf(a.children,b,c,e);case pc:f=11;b|=3;break;case jc:f=11;b|=2;break;case kc:return d=new zf(15,a,e,b|4),d.type=kc,d.expirationTime=c,d;case rc:f=16;b|=2;break;default:a:{switch(\"object\"===typeof d&&null!==d?d.$$typeof:null){case lc:f=13;break a;case mc:f=12;break a;case qc:f=14;break a;default:A(\"130\",null==d?\nd:typeof d,\"\")}f=void 0}}b=new zf(f,a,e,b);b.type=d;b.expirationTime=c;return b}function Cf(a,b,c,d){a=new zf(10,a,d,b);a.expirationTime=c;return a}function Df(a,b,c){a=new zf(6,a,null,b);a.expirationTime=c;return a}function Ef(a,b,c){b=new zf(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction Ff(a,b,c){b=new zf(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,pendingCommitExpirationTime:0,finishedWork:null,context:null,pendingContext:null,hydrate:c,remainingExpirationTime:0,firstBatch:null,nextScheduledRoot:null};return b.stateNode=a}var Gf=null,Hf=null;function If(a){return function(b){try{return a(b)}catch(c){}}}\nfunction Jf(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Gf=If(function(a){return b.onCommitFiberRoot(c,a)});Hf=If(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}function Kf(a){\"function\"===typeof Gf&&Gf(a)}function Lf(a){\"function\"===typeof Hf&&Hf(a)}var Mf=!1;\nfunction Nf(a){return{expirationTime:0,baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Of(a){return{expirationTime:a.expirationTime,baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}\nfunction Pf(a){return{expirationTime:a,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function Qf(a,b,c){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b);if(0===a.expirationTime||a.expirationTime>c)a.expirationTime=c}\nfunction Rf(a,b,c){var d=a.alternate;if(null===d){var e=a.updateQueue;var f=null;null===e&&(e=a.updateQueue=Nf(a.memoizedState))}else e=a.updateQueue,f=d.updateQueue,null===e?null===f?(e=a.updateQueue=Nf(a.memoizedState),f=d.updateQueue=Nf(d.memoizedState)):e=a.updateQueue=Of(f):null===f&&(f=d.updateQueue=Of(e));null===f||e===f?Qf(e,b,c):null===e.lastUpdate||null===f.lastUpdate?(Qf(e,b,c),Qf(f,b,c)):(Qf(e,b,c),f.lastUpdate=b)}\nfunction Sf(a,b,c){var d=a.updateQueue;d=null===d?a.updateQueue=Nf(a.memoizedState):Tf(a,d);null===d.lastCapturedUpdate?d.firstCapturedUpdate=d.lastCapturedUpdate=b:(d.lastCapturedUpdate.next=b,d.lastCapturedUpdate=b);if(0===d.expirationTime||d.expirationTime>c)d.expirationTime=c}function Tf(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=Of(b));return b}\nfunction Uf(a,b,c,d,e,f){switch(c.tag){case 1:return a=c.payload,\"function\"===typeof a?a.call(f,d,e):a;case 3:a.effectTag=a.effectTag&-1025|64;case 0:a=c.payload;e=\"function\"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return p({},d,e);case 2:Mf=!0}return d}\nfunction Vf(a,b,c,d,e){Mf=!1;if(!(0===b.expirationTime||b.expirationTime>e)){b=Tf(a,b);for(var f=b.baseState,g=null,h=0,k=b.firstUpdate,n=f;null!==k;){var r=k.expirationTime;if(r>e){if(null===g&&(g=k,f=n),0===h||h>r)h=r}else n=Uf(a,b,k,n,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=k:(b.lastEffect.nextEffect=k,b.lastEffect=k));k=k.next}r=null;for(k=b.firstCapturedUpdate;null!==k;){var w=k.expirationTime;if(w>e){if(null===r&&(r=k,null===\ng&&(f=n)),0===h||h>w)h=w}else n=Uf(a,b,k,n,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=k:(b.lastCapturedEffect.nextEffect=k,b.lastCapturedEffect=k));k=k.next}null===g&&(b.lastUpdate=null);null===r?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===r&&(f=n);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=r;b.expirationTime=h;a.memoizedState=n}}\nfunction Wf(a,b){\"function\"!==typeof a?A(\"191\",a):void 0;a.call(b)}\nfunction Xf(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);a=b.firstEffect;for(b.firstEffect=b.lastEffect=null;null!==a;){var d=a.callback;null!==d&&(a.callback=null,Wf(d,c));a=a.nextEffect}a=b.firstCapturedEffect;for(b.firstCapturedEffect=b.lastCapturedEffect=null;null!==a;)b=a.callback,null!==b&&(a.callback=null,Wf(b,c)),a=a.nextEffect}\nfunction Yf(a,b){return{value:a,source:b,stack:vc(b)}}var Zf=nf(null),$f=nf(null),ag=nf(0);function bg(a){var b=a.type._context;N(ag,b._changedBits,a);N($f,b._currentValue,a);N(Zf,a,a);b._currentValue=a.pendingProps.value;b._changedBits=a.stateNode}function cg(a){var b=ag.current,c=$f.current;M(Zf,a);M($f,a);M(ag,a);a=a.type._context;a._currentValue=c;a._changedBits=b}var dg={},eg=nf(dg),fg=nf(dg),gg=nf(dg);function hg(a){a===dg?A(\"174\"):void 0;return a}\nfunction jg(a,b){N(gg,b,a);N(fg,a,a);N(eg,dg,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:Ie(null,\"\");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=Ie(b,c)}M(eg,a);N(eg,b,a)}function kg(a){M(eg,a);M(fg,a);M(gg,a)}function lg(a){fg.current===a&&(M(eg,a),M(fg,a))}function mg(a,b,c){var d=a.memoizedState;b=b(c,d);d=null===b||void 0===b?d:p({},d,b);a.memoizedState=d;a=a.updateQueue;null!==a&&0===a.expirationTime&&(a.baseState=d)}\nvar qg={isMounted:function(a){return(a=a._reactInternalFiber)?2===kd(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=ng();d=og(d,a);var e=Pf(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Rf(a,e,d);pg(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=ng();d=og(d,a);var e=Pf(d);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Rf(a,e,d);pg(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=ng();c=og(c,a);var d=Pf(c);d.tag=2;void 0!==\nb&&null!==b&&(d.callback=b);Rf(a,d,c);pg(a,c)}};function rg(a,b,c,d,e,f){var g=a.stateNode;a=a.type;return\"function\"===typeof g.shouldComponentUpdate?g.shouldComponentUpdate(c,e,f):a.prototype&&a.prototype.isPureReactComponent?!ea(b,c)||!ea(d,e):!0}\nfunction sg(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&qg.enqueueReplaceState(b,b.state,null)}\nfunction tg(a,b){var c=a.type,d=a.stateNode,e=a.pendingProps,f=qf(a);d.props=e;d.state=a.memoizedState;d.refs=ha;d.context=sf(a,f);f=a.updateQueue;null!==f&&(Vf(a,f,e,d,b),d.state=a.memoizedState);f=a.type.getDerivedStateFromProps;\"function\"===typeof f&&(mg(a,f,e),d.state=a.memoizedState);\"function\"===typeof c.getDerivedStateFromProps||\"function\"===typeof d.getSnapshotBeforeUpdate||\"function\"!==typeof d.UNSAFE_componentWillMount&&\"function\"!==typeof d.componentWillMount||(c=d.state,\"function\"===typeof d.componentWillMount&&\nd.componentWillMount(),\"function\"===typeof d.UNSAFE_componentWillMount&&d.UNSAFE_componentWillMount(),c!==d.state&&qg.enqueueReplaceState(d,d.state,null),f=a.updateQueue,null!==f&&(Vf(a,f,e,d,b),d.state=a.memoizedState));\"function\"===typeof d.componentDidMount&&(a.effectTag|=4)}var ug=Array.isArray;\nfunction vg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(2!==c.tag?A(\"110\"):void 0,d=c.stateNode);d?void 0:A(\"147\",a);var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs===ha?d.refs={}:d.refs;null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}\"string\"!==typeof a?A(\"148\"):void 0;c._owner?void 0:A(\"254\",a)}return a}\nfunction wg(a,b){\"textarea\"!==a.type&&A(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction xg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=Af(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Df(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.type===c.type)return d=e(b,c.props,d),d.ref=vg(a,b,c),d.return=a,d;d=Bf(c,a.mode,d);d.ref=vg(a,b,c);d.return=a;return d}function n(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nEf(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function r(a,b,c,d,f){if(null===b||10!==b.tag)return b=Cf(c,a.mode,d,f),b.return=a,b;b=e(b,c,d);b.return=a;return b}function w(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Df(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case gc:return c=Bf(b,a.mode,c),c.ref=vg(a,null,b),c.return=a,c;case hc:return b=Ef(b,a.mode,c),b.return=a,b}if(ug(b)||tc(b))return b=Cf(b,a.mode,c,null),b.return=\na,b;wg(a,b)}return null}function P(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case gc:return c.key===e?c.type===ic?r(a,b,c.props.children,d,e):k(a,b,c,d):null;case hc:return c.key===e?n(a,b,c,d):null}if(ug(c)||tc(c))return null!==e?null:r(a,b,c,d,null);wg(a,c)}return null}function nc(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);\nif(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case gc:return a=a.get(null===d.key?c:d.key)||null,d.type===ic?r(b,a,d.props.children,e,d.key):k(b,a,d,e);case hc:return a=a.get(null===d.key?c:d.key)||null,n(b,a,d,e)}if(ug(d)||tc(d))return a=a.get(c)||null,r(b,a,d,e,null);wg(b,d)}return null}function Jd(e,g,h,k){for(var u=null,x=null,t=g,q=g=0,n=null;null!==t&&q<h.length;q++){t.index>q?(n=t,t=null):n=t.sibling;var l=P(e,t,h[q],k);if(null===l){null===t&&(t=n);break}a&&t&&null===l.alternate&&b(e,\nt);g=f(l,g,q);null===x?u=l:x.sibling=l;x=l;t=n}if(q===h.length)return c(e,t),u;if(null===t){for(;q<h.length;q++)if(t=w(e,h[q],k))g=f(t,g,q),null===x?u=t:x.sibling=t,x=t;return u}for(t=d(e,t);q<h.length;q++)if(n=nc(t,e,q,h[q],k))a&&null!==n.alternate&&t.delete(null===n.key?q:n.key),g=f(n,g,q),null===x?u=n:x.sibling=n,x=n;a&&t.forEach(function(a){return b(e,a)});return u}function E(e,g,h,k){var u=tc(h);\"function\"!==typeof u?A(\"150\"):void 0;h=u.call(h);null==h?A(\"151\"):void 0;for(var t=u=null,n=g,x=\ng=0,y=null,l=h.next();null!==n&&!l.done;x++,l=h.next()){n.index>x?(y=n,n=null):y=n.sibling;var r=P(e,n,l.value,k);if(null===r){n||(n=y);break}a&&n&&null===r.alternate&&b(e,n);g=f(r,g,x);null===t?u=r:t.sibling=r;t=r;n=y}if(l.done)return c(e,n),u;if(null===n){for(;!l.done;x++,l=h.next())l=w(e,l.value,k),null!==l&&(g=f(l,g,x),null===t?u=l:t.sibling=l,t=l);return u}for(n=d(e,n);!l.done;x++,l=h.next())l=nc(n,e,x,l.value,k),null!==l&&(a&&null!==l.alternate&&n.delete(null===l.key?x:l.key),g=f(l,g,x),null===\nt?u=l:t.sibling=l,t=l);a&&n.forEach(function(a){return b(e,a)});return u}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ic&&null===f.key;k&&(f=f.props.children);var n=\"object\"===typeof f&&null!==f;if(n)switch(f.$$typeof){case gc:a:{n=f.key;for(k=d;null!==k;){if(k.key===n)if(10===k.tag?f.type===ic:k.type===f.type){c(a,k.sibling);d=e(k,f.type===ic?f.props.children:f.props,h);d.ref=vg(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=k.sibling}f.type===ic?(d=Cf(f.props.children,\na.mode,h,f.key),d.return=a,a=d):(h=Bf(f,a.mode,h),h.ref=vg(a,d,f),h.return=a,a=h)}return g(a);case hc:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Ef(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=\na,a=d):(c(a,d),d=Df(f,a.mode,h),d.return=a,a=d),g(a);if(ug(f))return Jd(a,d,f,h);if(tc(f))return E(a,d,f,h);n&&wg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 2:case 1:h=a.type,A(\"152\",h.displayName||h.name||\"Component\")}return c(a,d)}}var yg=xg(!0),zg=xg(!1),Ag=null,Bg=null,Cg=!1;function Dg(a,b){var c=new zf(5,null,null,0);c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}\nfunction Eg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;default:return!1}}function Fg(a){if(Cg){var b=Bg;if(b){var c=b;if(!Eg(a,b)){b=jf(c);if(!b||!Eg(a,b)){a.effectTag|=2;Cg=!1;Ag=a;return}Dg(Ag,c)}Ag=a;Bg=kf(b)}else a.effectTag|=2,Cg=!1,Ag=a}}\nfunction Gg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag;)a=a.return;Ag=a}function Hg(a){if(a!==Ag)return!1;if(!Cg)return Gg(a),Cg=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!ef(b,a.memoizedProps))for(b=Bg;b;)Dg(a,b),b=jf(b);Gg(a);Bg=Ag?jf(a.stateNode):null;return!0}function Ig(){Bg=Ag=null;Cg=!1}function Q(a,b,c){Jg(a,b,c,b.expirationTime)}function Jg(a,b,c,d){b.child=null===a?zg(b,null,c,d):yg(b,a.child,c,d)}\nfunction Kg(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function Lg(a,b,c,d,e){Kg(a,b);var f=0!==(b.effectTag&64);if(!c&&!f)return d&&yf(b,!1),R(a,b);c=b.stateNode;ec.current=b;var g=f?null:c.render();b.effectTag|=1;f&&(Jg(a,b,null,e),b.child=null);Jg(a,b,g,e);b.memoizedState=c.state;b.memoizedProps=c.props;d&&yf(b,!0);return b.child}\nfunction Mg(a){var b=a.stateNode;b.pendingContext?vf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&vf(a,b.context,!1);jg(a,b.containerInfo)}\nfunction Ng(a,b,c,d){var e=a.child;null!==e&&(e.return=a);for(;null!==e;){switch(e.tag){case 12:var f=e.stateNode|0;if(e.type===b&&0!==(f&c)){for(f=e;null!==f;){var g=f.alternate;if(0===f.expirationTime||f.expirationTime>d)f.expirationTime=d,null!==g&&(0===g.expirationTime||g.expirationTime>d)&&(g.expirationTime=d);else if(null!==g&&(0===g.expirationTime||g.expirationTime>d))g.expirationTime=d;else break;f=f.return}f=null}else f=e.child;break;case 13:f=e.type===a.type?null:e.child;break;default:f=\ne.child}if(null!==f)f.return=e;else for(f=e;null!==f;){if(f===a){f=null;break}e=f.sibling;if(null!==e){e.return=f.return;f=e;break}f=f.return}e=f}}\nfunction Rg(a,b,c){var d=b.type._context,e=b.pendingProps,f=b.memoizedProps,g=!0;if(O.current)g=!1;else if(f===e)return b.stateNode=0,bg(b),R(a,b);var h=e.value;b.memoizedProps=e;if(null===f)h=1073741823;else if(f.value===e.value){if(f.children===e.children&&g)return b.stateNode=0,bg(b),R(a,b);h=0}else{var k=f.value;if(k===h&&(0!==k||1/k===1/h)||k!==k&&h!==h){if(f.children===e.children&&g)return b.stateNode=0,bg(b),R(a,b);h=0}else if(h=\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(k,\nh):1073741823,h|=0,0===h){if(f.children===e.children&&g)return b.stateNode=0,bg(b),R(a,b)}else Ng(b,d,h,c)}b.stateNode=h;bg(b);Q(a,b,e.children);return b.child}function R(a,b){null!==a&&b.child!==a.child?A(\"153\"):void 0;if(null!==b.child){a=b.child;var c=Af(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Af(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}\nfunction Sg(a,b,c){if(0===b.expirationTime||b.expirationTime>c){switch(b.tag){case 3:Mg(b);break;case 2:xf(b);break;case 4:jg(b,b.stateNode.containerInfo);break;case 13:bg(b)}return null}switch(b.tag){case 0:null!==a?A(\"155\"):void 0;var d=b.type,e=b.pendingProps,f=qf(b);f=sf(b,f);d=d(e,f);b.effectTag|=1;\"object\"===typeof d&&null!==d&&\"function\"===typeof d.render&&void 0===d.$$typeof?(f=b.type,b.tag=2,b.memoizedState=null!==d.state&&void 0!==d.state?d.state:null,f=f.getDerivedStateFromProps,\"function\"===\ntypeof f&&mg(b,f,e),e=xf(b),d.updater=qg,b.stateNode=d,d._reactInternalFiber=b,tg(b,c),a=Lg(a,b,!0,e,c)):(b.tag=1,Q(a,b,d),b.memoizedProps=e,a=b.child);return a;case 1:return e=b.type,c=b.pendingProps,O.current||b.memoizedProps!==c?(d=qf(b),d=sf(b,d),e=e(c,d),b.effectTag|=1,Q(a,b,e),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 2:e=xf(b);if(null===a)if(null===b.stateNode){var g=b.pendingProps,h=b.type;d=qf(b);var k=2===b.tag&&null!=b.type.contextTypes;f=k?sf(b,d):ha;g=new h(g,f);b.memoizedState=null!==\ng.state&&void 0!==g.state?g.state:null;g.updater=qg;b.stateNode=g;g._reactInternalFiber=b;k&&(k=b.stateNode,k.__reactInternalMemoizedUnmaskedChildContext=d,k.__reactInternalMemoizedMaskedChildContext=f);tg(b,c);d=!0}else{h=b.type;d=b.stateNode;k=b.memoizedProps;f=b.pendingProps;d.props=k;var n=d.context;g=qf(b);g=sf(b,g);var r=h.getDerivedStateFromProps;(h=\"function\"===typeof r||\"function\"===typeof d.getSnapshotBeforeUpdate)||\"function\"!==typeof d.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof d.componentWillReceiveProps||\n(k!==f||n!==g)&&sg(b,d,f,g);Mf=!1;var w=b.memoizedState;n=d.state=w;var P=b.updateQueue;null!==P&&(Vf(b,P,f,d,c),n=b.memoizedState);k!==f||w!==n||O.current||Mf?(\"function\"===typeof r&&(mg(b,r,f),n=b.memoizedState),(k=Mf||rg(b,k,f,w,n,g))?(h||\"function\"!==typeof d.UNSAFE_componentWillMount&&\"function\"!==typeof d.componentWillMount||(\"function\"===typeof d.componentWillMount&&d.componentWillMount(),\"function\"===typeof d.UNSAFE_componentWillMount&&d.UNSAFE_componentWillMount()),\"function\"===typeof d.componentDidMount&&\n(b.effectTag|=4)):(\"function\"===typeof d.componentDidMount&&(b.effectTag|=4),b.memoizedProps=f,b.memoizedState=n),d.props=f,d.state=n,d.context=g,d=k):(\"function\"===typeof d.componentDidMount&&(b.effectTag|=4),d=!1)}else h=b.type,d=b.stateNode,f=b.memoizedProps,k=b.pendingProps,d.props=f,n=d.context,g=qf(b),g=sf(b,g),r=h.getDerivedStateFromProps,(h=\"function\"===typeof r||\"function\"===typeof d.getSnapshotBeforeUpdate)||\"function\"!==typeof d.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof d.componentWillReceiveProps||\n(f!==k||n!==g)&&sg(b,d,k,g),Mf=!1,n=b.memoizedState,w=d.state=n,P=b.updateQueue,null!==P&&(Vf(b,P,k,d,c),w=b.memoizedState),f!==k||n!==w||O.current||Mf?(\"function\"===typeof r&&(mg(b,r,k),w=b.memoizedState),(r=Mf||rg(b,f,k,n,w,g))?(h||\"function\"!==typeof d.UNSAFE_componentWillUpdate&&\"function\"!==typeof d.componentWillUpdate||(\"function\"===typeof d.componentWillUpdate&&d.componentWillUpdate(k,w,g),\"function\"===typeof d.UNSAFE_componentWillUpdate&&d.UNSAFE_componentWillUpdate(k,w,g)),\"function\"===typeof d.componentDidUpdate&&\n(b.effectTag|=4),\"function\"===typeof d.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof d.componentDidUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof d.getSnapshotBeforeUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=256),b.memoizedProps=k,b.memoizedState=w),d.props=k,d.state=w,d.context=g,d=r):(\"function\"!==typeof d.componentDidUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof d.getSnapshotBeforeUpdate||\nf===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=256),d=!1);return Lg(a,b,d,e,c);case 3:Mg(b);e=b.updateQueue;if(null!==e)if(d=b.memoizedState,d=null!==d?d.element:null,Vf(b,e,b.pendingProps,null,c),e=b.memoizedState.element,e===d)Ig(),a=R(a,b);else{d=b.stateNode;if(d=(null===a||null===a.child)&&d.hydrate)Bg=kf(b.stateNode.containerInfo),Ag=b,d=Cg=!0;d?(b.effectTag|=2,b.child=zg(b,null,e,c)):(Ig(),Q(a,b,e));a=b.child}else Ig(),a=R(a,b);return a;case 5:a:{hg(gg.current);e=hg(eg.current);d=Ie(e,\nb.type);e!==d&&(N(fg,b,b),N(eg,d,b));null===a&&Fg(b);e=b.type;k=b.memoizedProps;d=b.pendingProps;f=null!==a?a.memoizedProps:null;if(!O.current&&k===d){if(k=b.mode&1&&!!d.hidden)b.expirationTime=1073741823;if(!k||1073741823!==c){a=R(a,b);break a}}k=d.children;ef(e,d)?k=null:f&&ef(e,f)&&(b.effectTag|=16);Kg(a,b);1073741823!==c&&b.mode&1&&d.hidden?(b.expirationTime=1073741823,b.memoizedProps=d,a=null):(Q(a,b,k),b.memoizedProps=d,a=b.child)}return a;case 6:return null===a&&Fg(b),b.memoizedProps=b.pendingProps,\nnull;case 16:return null;case 4:return jg(b,b.stateNode.containerInfo),e=b.pendingProps,O.current||b.memoizedProps!==e?(null===a?b.child=yg(b,null,e,c):Q(a,b,e),b.memoizedProps=e,a=b.child):a=R(a,b),a;case 14:return e=b.type.render,c=b.pendingProps,d=b.ref,O.current||b.memoizedProps!==c||d!==(null!==a?a.ref:null)?(e=e(c,d),Q(a,b,e),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 10:return c=b.pendingProps,O.current||b.memoizedProps!==c?(Q(a,b,c),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 11:return c=\nb.pendingProps.children,O.current||null!==c&&b.memoizedProps!==c?(Q(a,b,c),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 15:return c=b.pendingProps,b.memoizedProps===c?a=R(a,b):(Q(a,b,c.children),b.memoizedProps=c,a=b.child),a;case 13:return Rg(a,b,c);case 12:a:if(d=b.type,f=b.pendingProps,k=b.memoizedProps,e=d._currentValue,g=d._changedBits,O.current||0!==g||k!==f){b.memoizedProps=f;h=f.unstable_observedBits;if(void 0===h||null===h)h=1073741823;b.stateNode=h;if(0!==(g&h))Ng(b,d,g,c);else if(k===f){a=\nR(a,b);break a}c=f.children;c=c(e);b.effectTag|=1;Q(a,b,c);a=b.child}else a=R(a,b);return a;default:A(\"156\")}}function Tg(a){a.effectTag|=4}var Ug=void 0,Vg=void 0,Wg=void 0;Ug=function(){};Vg=function(a,b,c){(b.updateQueue=c)&&Tg(b)};Wg=function(a,b,c,d){c!==d&&Tg(b)};\nfunction Xg(a,b){var c=b.pendingProps;switch(b.tag){case 1:return null;case 2:return tf(b),null;case 3:kg(b);uf(b);var d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Hg(b),b.effectTag&=-3;Ug(b);return null;case 5:lg(b);d=hg(gg.current);var e=b.type;if(null!==a&&null!=b.stateNode){var f=a.memoizedProps,g=b.stateNode,h=hg(eg.current);g=Xe(g,e,f,c,d);Vg(a,b,g,e,f,c,d,h);a.ref!==b.ref&&(b.effectTag|=128)}else{if(!c)return null===b.stateNode?\nA(\"166\"):void 0,null;a=hg(eg.current);if(Hg(b))c=b.stateNode,e=b.type,f=b.memoizedProps,c[C]=b,c[Ma]=f,d=Ze(c,e,f,a,d),b.updateQueue=d,null!==d&&Tg(b);else{a=Ue(e,c,d,a);a[C]=b;a[Ma]=c;a:for(f=b.child;null!==f;){if(5===f.tag||6===f.tag)a.appendChild(f.stateNode);else if(4!==f.tag&&null!==f.child){f.child.return=f;f=f.child;continue}if(f===b)break;for(;null===f.sibling;){if(null===f.return||f.return===b)break a;f=f.return}f.sibling.return=f.return;f=f.sibling}We(a,e,c,d);df(e,c)&&Tg(b);b.stateNode=\na}null!==b.ref&&(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)Wg(a,b,a.memoizedProps,c);else{if(\"string\"!==typeof c)return null===b.stateNode?A(\"166\"):void 0,null;d=hg(gg.current);hg(eg.current);Hg(b)?(d=b.stateNode,c=b.memoizedProps,d[C]=b,$e(d,c)&&Tg(b)):(d=Ve(c,d),d[C]=b,b.stateNode=d)}return null;case 14:return null;case 16:return null;case 10:return null;case 11:return null;case 15:return null;case 4:return kg(b),Ug(b),null;case 13:return cg(b),null;case 12:return null;case 0:A(\"167\");\ndefault:A(\"156\")}}function Yg(a,b){var c=b.source;null===b.stack&&null!==c&&vc(c);null!==c&&uc(c);b=b.value;null!==a&&2===a.tag&&uc(a);try{b&&b.suppressReactErrorLogging||console.error(b)}catch(d){d&&d.suppressReactErrorLogging||console.error(d)}}function Zg(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){$g(a,c)}else b.current=null}\nfunction ah(a){\"function\"===typeof Lf&&Lf(a);switch(a.tag){case 2:Zg(a);var b=a.stateNode;if(\"function\"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(c){$g(a,c)}break;case 5:Zg(a);break;case 4:bh(a)}}function ch(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction dh(a){a:{for(var b=a.return;null!==b;){if(ch(b)){var c=b;break a}b=b.return}A(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:A(\"161\")}c.effectTag&16&&(Le(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||ch(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag;){if(c.effectTag&2)continue b;\nif(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(f=b,g=e.stateNode,8===f.nodeType?f.parentNode.insertBefore(g,f):f.appendChild(g)):b.appendChild(e.stateNode);else if(4!==e.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===\ne.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}\nfunction bh(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?A(\"160\"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(5===b.tag||6===b.tag){a:for(var f=b,g=f;;)if(ah(g),null!==g.child&&4!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?\n(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(4===b.tag?d=b.stateNode.containerInfo:ah(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;4===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}\nfunction eh(a,b){switch(b.tag){case 2:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&(c[Ma]=d,Ye(c,f,e,a,d))}break;case 6:null===b.stateNode?A(\"162\"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 3:break;case 15:break;case 16:break;default:A(\"163\")}}function fh(a,b,c){c=Pf(c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){gh(d);Yg(a,b)};return c}\nfunction hh(a,b,c){c=Pf(c);c.tag=3;var d=a.stateNode;null!==d&&\"function\"===typeof d.componentDidCatch&&(c.callback=function(){null===ih?ih=new Set([this]):ih.add(this);var c=b.value,d=b.stack;Yg(a,b);this.componentDidCatch(c,{componentStack:null!==d?d:\"\"})});return c}\nfunction jh(a,b,c,d,e,f){c.effectTag|=512;c.firstEffect=c.lastEffect=null;d=Yf(d,c);a=b;do{switch(a.tag){case 3:a.effectTag|=1024;d=fh(a,d,f);Sf(a,d,f);return;case 2:if(b=d,c=a.stateNode,0===(a.effectTag&64)&&null!==c&&\"function\"===typeof c.componentDidCatch&&(null===ih||!ih.has(c))){a.effectTag|=1024;d=hh(a,b,f);Sf(a,d,f);return}}a=a.return}while(null!==a)}\nfunction kh(a){switch(a.tag){case 2:tf(a);var b=a.effectTag;return b&1024?(a.effectTag=b&-1025|64,a):null;case 3:return kg(a),uf(a),b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 5:return lg(a),null;case 16:return b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 4:return kg(a),null;case 13:return cg(a),null;default:return null}}var lh=ff(),mh=2,nh=lh,oh=0,ph=0,qh=!1,S=null,rh=null,T=0,sh=-1,th=!1,U=null,uh=!1,vh=!1,ih=null;\nfunction wh(){if(null!==S)for(var a=S.return;null!==a;){var b=a;switch(b.tag){case 2:tf(b);break;case 3:kg(b);uf(b);break;case 5:lg(b);break;case 4:kg(b);break;case 13:cg(b)}a=a.return}rh=null;T=0;sh=-1;th=!1;S=null;vh=!1}\nfunction xh(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&512)){b=Xg(b,a,T);var e=a;if(1073741823===T||1073741823!==e.expirationTime){var f=0;switch(e.tag){case 3:case 2:var g=e.updateQueue;null!==g&&(f=g.expirationTime)}for(g=e.child;null!==g;)0!==g.expirationTime&&(0===f||f>g.expirationTime)&&(f=g.expirationTime),g=g.sibling;e.expirationTime=f}if(null!==b)return b;null!==c&&0===(c.effectTag&512)&&(null===c.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&\n(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a));if(null!==d)return d;if(null!==c)a=c;else{vh=!0;break}}else{a=kh(a,th,T);if(null!==a)return a.effectTag&=511,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=512);if(null!==d)return d;if(null!==c)a=c;else break}}return null}\nfunction yh(a){var b=Sg(a.alternate,a,T);null===b&&(b=xh(a));ec.current=null;return b}\nfunction zh(a,b,c){qh?A(\"243\"):void 0;qh=!0;if(b!==T||a!==rh||null===S)wh(),rh=a,T=b,sh=-1,S=Af(rh.current,null,T),a.pendingCommitExpirationTime=0;var d=!1;th=!c||T<=mh;do{try{if(c)for(;null!==S&&!Ah();)S=yh(S);else for(;null!==S;)S=yh(S)}catch(f){if(null===S)d=!0,gh(f);else{null===S?A(\"271\"):void 0;c=S;var e=c.return;if(null===e){d=!0;gh(f);break}jh(a,e,c,f,th,T,nh);S=xh(c)}}break}while(1);qh=!1;if(d)return null;if(null===S){if(vh)return a.pendingCommitExpirationTime=b,a.current.alternate;th?A(\"262\"):\nvoid 0;0<=sh&&setTimeout(function(){var b=a.current.expirationTime;0!==b&&(0===a.remainingExpirationTime||a.remainingExpirationTime<b)&&Bh(a,b)},sh);Ch(a.current.expirationTime)}return null}\nfunction $g(a,b){var c;a:{qh&&!uh?A(\"263\"):void 0;for(c=a.return;null!==c;){switch(c.tag){case 2:var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromCatch||\"function\"===typeof d.componentDidCatch&&(null===ih||!ih.has(d))){a=Yf(b,a);a=hh(c,a,1);Rf(c,a,1);pg(c,1);c=void 0;break a}break;case 3:a=Yf(b,a);a=fh(c,a,1);Rf(c,a,1);pg(c,1);c=void 0;break a}c=c.return}3===a.tag&&(c=Yf(b,a),c=fh(a,c,1),Rf(a,c,1),pg(a,1));c=void 0}return c}\nfunction Dh(){var a=2+25*(((ng()-2+500)/25|0)+1);a<=oh&&(a=oh+1);return oh=a}function og(a,b){a=0!==ph?ph:qh?uh?1:T:b.mode&1?Eh?2+10*(((a-2+15)/10|0)+1):2+25*(((a-2+500)/25|0)+1):1;Eh&&(0===Fh||a>Fh)&&(Fh=a);return a}\nfunction pg(a,b){for(;null!==a;){if(0===a.expirationTime||a.expirationTime>b)a.expirationTime=b;null!==a.alternate&&(0===a.alternate.expirationTime||a.alternate.expirationTime>b)&&(a.alternate.expirationTime=b);if(null===a.return)if(3===a.tag){var c=a.stateNode;!qh&&0!==T&&b<T&&wh();var d=c.current.expirationTime;qh&&!uh&&rh===c||Bh(c,d);Gh>Hh&&A(\"185\")}else break;a=a.return}}function ng(){nh=ff()-lh;return mh=(nh/10|0)+2}\nfunction Ih(a){var b=ph;ph=2+25*(((ng()-2+500)/25|0)+1);try{return a()}finally{ph=b}}function Jh(a,b,c,d,e){var f=ph;ph=1;try{return a(b,c,d,e)}finally{ph=f}}var Kh=null,V=null,Lh=0,Mh=void 0,W=!1,X=null,Y=0,Fh=0,Nh=!1,Oh=!1,Ph=null,Qh=null,Z=!1,Rh=!1,Eh=!1,Sh=null,Hh=1E3,Gh=0,Th=1;function Uh(a){if(0!==Lh){if(a>Lh)return;null!==Mh&&hf(Mh)}var b=ff()-lh;Lh=a;Mh=gf(Vh,{timeout:10*(a-2)-b})}\nfunction Bh(a,b){if(null===a.nextScheduledRoot)a.remainingExpirationTime=b,null===V?(Kh=V=a,a.nextScheduledRoot=a):(V=V.nextScheduledRoot=a,V.nextScheduledRoot=Kh);else{var c=a.remainingExpirationTime;if(0===c||b<c)a.remainingExpirationTime=b}W||(Z?Rh&&(X=a,Y=1,Wh(a,1,!1)):1===b?Xh():Uh(b))}\nfunction Yh(){var a=0,b=null;if(null!==V)for(var c=V,d=Kh;null!==d;){var e=d.remainingExpirationTime;if(0===e){null===c||null===V?A(\"244\"):void 0;if(d===d.nextScheduledRoot){Kh=V=d.nextScheduledRoot=null;break}else if(d===Kh)Kh=e=d.nextScheduledRoot,V.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===V){V=c;V.nextScheduledRoot=Kh;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{if(0===a||e<a)a=e,b=d;if(d===V)break;\nc=d;d=d.nextScheduledRoot}}c=X;null!==c&&c===b&&1===a?Gh++:Gh=0;X=b;Y=a}function Vh(a){Zh(0,!0,a)}function Xh(){Zh(1,!1,null)}function Zh(a,b,c){Qh=c;Yh();if(b)for(;null!==X&&0!==Y&&(0===a||a>=Y)&&(!Nh||ng()>=Y);)ng(),Wh(X,Y,!Nh),Yh();else for(;null!==X&&0!==Y&&(0===a||a>=Y);)Wh(X,Y,!1),Yh();null!==Qh&&(Lh=0,Mh=null);0!==Y&&Uh(Y);Qh=null;Nh=!1;$h()}function ai(a,b){W?A(\"253\"):void 0;X=a;Y=b;Wh(a,b,!1);Xh();$h()}\nfunction $h(){Gh=0;if(null!==Sh){var a=Sh;Sh=null;for(var b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){Oh||(Oh=!0,Ph=d)}}}if(Oh)throw a=Ph,Ph=null,Oh=!1,a;}function Wh(a,b,c){W?A(\"245\"):void 0;W=!0;c?(c=a.finishedWork,null!==c?bi(a,c,b):(c=zh(a,b,!0),null!==c&&(Ah()?a.finishedWork=c:bi(a,c,b)))):(c=a.finishedWork,null!==c?bi(a,c,b):(c=zh(a,b,!1),null!==c&&bi(a,c,b)));W=!1}\nfunction bi(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime<=c&&(null===Sh?Sh=[d]:Sh.push(d),d._defer)){a.finishedWork=b;a.remainingExpirationTime=0;return}a.finishedWork=null;uh=qh=!0;c=b.stateNode;c.current===b?A(\"177\"):void 0;d=c.pendingCommitExpirationTime;0===d?A(\"261\"):void 0;c.pendingCommitExpirationTime=0;ng();ec.current=null;if(1<b.effectTag)if(null!==b.lastEffect){b.lastEffect.nextEffect=b;var e=b.firstEffect}else e=b;else e=b.firstEffect;bf=Id;var f=da();if(Vd(f)){if(\"selectionStart\"in\nf)var g={start:f.selectionStart,end:f.selectionEnd};else a:{var h=window.getSelection&&window.getSelection();if(h&&0!==h.rangeCount){g=h.anchorNode;var k=h.anchorOffset,n=h.focusNode;h=h.focusOffset;try{g.nodeType,n.nodeType}catch(Wa){g=null;break a}var r=0,w=-1,P=-1,nc=0,Jd=0,E=f,t=null;b:for(;;){for(var x;;){E!==g||0!==k&&3!==E.nodeType||(w=r+k);E!==n||0!==h&&3!==E.nodeType||(P=r+h);3===E.nodeType&&(r+=E.nodeValue.length);if(null===(x=E.firstChild))break;t=E;E=x}for(;;){if(E===f)break b;t===g&&\n++nc===k&&(w=r);t===n&&++Jd===h&&(P=r);if(null!==(x=E.nextSibling))break;E=t;t=E.parentNode}E=x}g=-1===w||-1===P?null:{start:w,end:P}}else g=null}g=g||{start:0,end:0}}else g=null;cf={focusedElem:f,selectionRange:g};Kd(!1);for(U=e;null!==U;){f=!1;g=void 0;try{for(;null!==U;){if(U.effectTag&256){var u=U.alternate;k=U;switch(k.tag){case 2:if(k.effectTag&256&&null!==u){var y=u.memoizedProps,D=u.memoizedState,ja=k.stateNode;ja.props=k.memoizedProps;ja.state=k.memoizedState;var ni=ja.getSnapshotBeforeUpdate(y,\nD);ja.__reactInternalSnapshotBeforeUpdate=ni}break;case 3:case 5:case 6:case 4:break;default:A(\"163\")}}U=U.nextEffect}}catch(Wa){f=!0,g=Wa}f&&(null===U?A(\"178\"):void 0,$g(U,g),null!==U&&(U=U.nextEffect))}for(U=e;null!==U;){u=!1;y=void 0;try{for(;null!==U;){var q=U.effectTag;q&16&&Le(U.stateNode,\"\");if(q&128){var z=U.alternate;if(null!==z){var l=z.ref;null!==l&&(\"function\"===typeof l?l(null):l.current=null)}}switch(q&14){case 2:dh(U);U.effectTag&=-3;break;case 6:dh(U);U.effectTag&=-3;eh(U.alternate,\nU);break;case 4:eh(U.alternate,U);break;case 8:D=U,bh(D),D.return=null,D.child=null,D.alternate&&(D.alternate.child=null,D.alternate.return=null)}U=U.nextEffect}}catch(Wa){u=!0,y=Wa}u&&(null===U?A(\"178\"):void 0,$g(U,y),null!==U&&(U=U.nextEffect))}l=cf;z=da();q=l.focusedElem;u=l.selectionRange;if(z!==q&&fa(document.documentElement,q)){null!==u&&Vd(q)&&(z=u.start,l=u.end,void 0===l&&(l=z),\"selectionStart\"in q?(q.selectionStart=z,q.selectionEnd=Math.min(l,q.value.length)):window.getSelection&&(z=window.getSelection(),\ny=q[lb()].length,l=Math.min(u.start,y),u=void 0===u.end?l:Math.min(u.end,y),!z.extend&&l>u&&(y=u,u=l,l=y),y=Ud(q,l),D=Ud(q,u),y&&D&&(1!==z.rangeCount||z.anchorNode!==y.node||z.anchorOffset!==y.offset||z.focusNode!==D.node||z.focusOffset!==D.offset)&&(ja=document.createRange(),ja.setStart(y.node,y.offset),z.removeAllRanges(),l>u?(z.addRange(ja),z.extend(D.node,D.offset)):(ja.setEnd(D.node,D.offset),z.addRange(ja)))));z=[];for(l=q;l=l.parentNode;)1===l.nodeType&&z.push({element:l,left:l.scrollLeft,\ntop:l.scrollTop});\"function\"===typeof q.focus&&q.focus();for(q=0;q<z.length;q++)l=z[q],l.element.scrollLeft=l.left,l.element.scrollTop=l.top}cf=null;Kd(bf);bf=null;c.current=b;for(U=e;null!==U;){e=!1;q=void 0;try{for(z=d;null!==U;){var ig=U.effectTag;if(ig&36){var oc=U.alternate;l=U;u=z;switch(l.tag){case 2:var ca=l.stateNode;if(l.effectTag&4)if(null===oc)ca.props=l.memoizedProps,ca.state=l.memoizedState,ca.componentDidMount();else{var xi=oc.memoizedProps,yi=oc.memoizedState;ca.props=l.memoizedProps;\nca.state=l.memoizedState;ca.componentDidUpdate(xi,yi,ca.__reactInternalSnapshotBeforeUpdate)}var Og=l.updateQueue;null!==Og&&(ca.props=l.memoizedProps,ca.state=l.memoizedState,Xf(l,Og,ca,u));break;case 3:var Pg=l.updateQueue;if(null!==Pg){y=null;if(null!==l.child)switch(l.child.tag){case 5:y=l.child.stateNode;break;case 2:y=l.child.stateNode}Xf(l,Pg,y,u)}break;case 5:var zi=l.stateNode;null===oc&&l.effectTag&4&&df(l.type,l.memoizedProps)&&zi.focus();break;case 6:break;case 4:break;case 15:break;case 16:break;\ndefault:A(\"163\")}}if(ig&128){l=void 0;var yc=U.ref;if(null!==yc){var Qg=U.stateNode;switch(U.tag){case 5:l=Qg;break;default:l=Qg}\"function\"===typeof yc?yc(l):yc.current=l}}var Ai=U.nextEffect;U.nextEffect=null;U=Ai}}catch(Wa){e=!0,q=Wa}e&&(null===U?A(\"178\"):void 0,$g(U,q),null!==U&&(U=U.nextEffect))}qh=uh=!1;\"function\"===typeof Kf&&Kf(b.stateNode);b=c.current.expirationTime;0===b&&(ih=null);a.remainingExpirationTime=b}function Ah(){return null===Qh||Qh.timeRemaining()>Th?!1:Nh=!0}\nfunction gh(a){null===X?A(\"246\"):void 0;X.remainingExpirationTime=0;Oh||(Oh=!0,Ph=a)}function Ch(a){null===X?A(\"246\"):void 0;X.remainingExpirationTime=a}function ci(a,b){var c=Z;Z=!0;try{return a(b)}finally{(Z=c)||W||Xh()}}function di(a,b){if(Z&&!Rh){Rh=!0;try{return a(b)}finally{Rh=!1}}return a(b)}function ei(a,b){W?A(\"187\"):void 0;var c=Z;Z=!0;try{return Jh(a,b)}finally{Z=c,Xh()}}\nfunction fi(a,b,c){if(Eh)return a(b,c);Z||W||0===Fh||(Zh(Fh,!1,null),Fh=0);var d=Eh,e=Z;Z=Eh=!0;try{return a(b,c)}finally{Eh=d,(Z=e)||W||Xh()}}function gi(a){var b=Z;Z=!0;try{Jh(a)}finally{(Z=b)||W||Zh(1,!1,null)}}\nfunction hi(a,b,c,d,e){var f=b.current;if(c){c=c._reactInternalFiber;var g;b:{2===kd(c)&&2===c.tag?void 0:A(\"170\");for(g=c;3!==g.tag;){if(rf(g)){g=g.stateNode.__reactInternalMemoizedMergedChildContext;break b}(g=g.return)?void 0:A(\"171\")}g=g.stateNode.context}c=rf(c)?wf(c,g):g}else c=ha;null===b.context?b.context=c:b.pendingContext=c;b=e;e=Pf(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);Rf(f,e,d);pg(f,d);return d}\nfunction ii(a){var b=a._reactInternalFiber;void 0===b&&(\"function\"===typeof a.render?A(\"188\"):A(\"268\",Object.keys(a)));a=nd(b);return null===a?null:a.stateNode}function ji(a,b,c,d){var e=b.current,f=ng();e=og(f,e);return hi(a,b,c,e,d)}function ki(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}\nfunction li(a){var b=a.findFiberByHostInstance;return Jf(p({},a,{findHostInstanceByFiber:function(a){a=nd(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))}\nvar mi={updateContainerAtExpirationTime:hi,createContainer:function(a,b,c){return Ff(a,b,c)},updateContainer:ji,flushRoot:ai,requestWork:Bh,computeUniqueAsyncExpiration:Dh,batchedUpdates:ci,unbatchedUpdates:di,deferredUpdates:Ih,syncUpdates:Jh,interactiveUpdates:fi,flushInteractiveUpdates:function(){W||0===Fh||(Zh(Fh,!1,null),Fh=0)},flushControlled:gi,flushSync:ei,getPublicRootInstance:ki,findHostInstance:ii,findHostInstanceWithNoPortals:function(a){a=od(a);return null===a?null:a.stateNode},injectIntoDevTools:li};\nfunction oi(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:hc,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}Kb.injectFiberControlledHostComponent(af);function pi(a){this._expirationTime=Dh();this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}\npi.prototype.render=function(a){this._defer?void 0:A(\"250\");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new qi;hi(a,b,null,c,d._onCommit);return d};pi.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\npi.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:A(\"251\");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?A(\"251\"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;ai(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=\nnull,this._defer=!1};pi.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function qi(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}qi.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nqi.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];\"function\"!==typeof c?A(\"191\",c):void 0;c()}}};function ri(a,b,c){this._internalRoot=Ff(a,b,c)}ri.prototype.render=function(a,b){var c=this._internalRoot,d=new qi;b=void 0===b?null:b;null!==b&&d.then(b);ji(a,c,null,d._onCommit);return d};\nri.prototype.unmount=function(a){var b=this._internalRoot,c=new qi;a=void 0===a?null:a;null!==a&&c.then(a);ji(null,b,null,c._onCommit);return c};ri.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new qi;c=void 0===c?null:c;null!==c&&e.then(c);ji(b,d,a,e._onCommit);return e};\nri.prototype.createBatch=function(){var a=new pi(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime<=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function si(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}Sb=mi.batchedUpdates;Tb=mi.interactiveUpdates;Ub=mi.flushInteractiveUpdates;\nfunction ti(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new ri(a,!1,b)}\nfunction ui(a,b,c,d,e){si(c)?void 0:A(\"200\");var f=c._reactRootContainer;if(f){if(\"function\"===typeof e){var g=e;e=function(){var a=ki(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=ti(c,d);if(\"function\"===typeof e){var h=e;e=function(){var a=ki(f._internalRoot);h.call(a)}}di(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return ki(f._internalRoot)}\nfunction vi(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;si(b)?void 0:A(\"200\");return oi(a,b,null,c)}\nvar wi={createPortal:vi,findDOMNode:function(a){return null==a?null:1===a.nodeType?a:ii(a)},hydrate:function(a,b,c){return ui(null,a,b,!0,c)},render:function(a,b,c){return ui(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?A(\"38\"):void 0;return ui(a,b,c,!1,d)},unmountComponentAtNode:function(a){si(a)?void 0:A(\"40\");return a._reactRootContainer?(di(function(){ui(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return vi.apply(void 0,\narguments)},unstable_batchedUpdates:ci,unstable_deferredUpdates:Ih,unstable_interactiveUpdates:fi,flushSync:ei,unstable_flushControlled:gi,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:Ka,EventPluginRegistry:va,EventPropagators:$a,ReactControlledComponent:Rb,ReactDOMComponentTree:Qa,ReactDOMEventListener:Od},unstable_createRoot:function(a,b){return new ri(a,!0,null!=b&&!0===b.hydrate)}};li({findFiberByHostInstance:Na,bundleType:0,version:\"16.4.2\",rendererPackageName:\"react-dom\"});\nvar Bi={default:wi},Ci=Bi&&wi||Bi;module.exports=Ci.default?Ci.default:Ci;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-dom/cjs/react-dom.production.min.js\n// module id = 18\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/ExecutionEnvironment.js\n// module id = 19\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/* eslint-disable fb-www/typeof-undefined */\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?DOMDocument} doc Defaults to current document.\n * @return {?DOMElement}\n */\nfunction getActiveElement(doc) /*?DOMElement*/{\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\nmodule.exports = getActiveElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/getActiveElement.js\n// module id = 20\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n * \n */\n\n/*eslint-disable no-self-compare */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqual;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/shallowEqual.js\n// module id = 21\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar isTextNode = require('./isTextNode');\n\n/*eslint-disable no-bitwise */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/containsNode.js\n// module id = 22\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar isNode = require('./isNode');\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */\nfunction isTextNode(object) {\n  return isNode(object) && object.nodeType == 3;\n}\n\nmodule.exports = isTextNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/isTextNode.js\n// module id = 23\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */\nfunction isNode(object) {\n  var doc = object ? object.ownerDocument || object : document;\n  var defaultView = doc.defaultView || window;\n  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n}\n\nmodule.exports = isNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/isNode.js\n// module id = 24\n// module chunks = 0","import * as React from 'react';\nimport * as Constants from './Constants';\nimport * as LSCore from \"./livesplit\";\nimport LSWASM from './assets/livesplit_core.wasm';\n\nimport Controller from './Controller';\nimport Login from './Login';\nimport TimerWrapper from './TimerWrapper';\n\nexport interface ICommandItem {\n  command: string,\n  time: number,\n};\n\ninterface IState {\n  timer?: TimerWrapper,\n  timerStatus: Constants.TimerPhase,\n  socketStatus: Constants.Connection,\n  lastMessage: string,\n  lastControlPassword: string,\n  eventOffset: number,\n  commandQueue: ICommandItem[],\n  coreState: Constants.CoreState,\n  coreLoadFailure?: Error,\n}\n\nexport default class App extends React.Component<{}, IState> {\n  private webSocket?: WebSocket;\n\n  constructor(props: {}) {\n    super(props);\n\n    const offsetString =\n      new URL(window.location.href).searchParams.get('offset');\n    let eventOffset = offsetString ? parseInt(offsetString, 10) : 0;\n    eventOffset = Number.isNaN(eventOffset) ? 0 : Math.max(0, eventOffset);\n\n    this.state = {\n      timerStatus: Constants.TimerPhase.NOT_RUNNING,\n      socketStatus: Constants.Connection.PENDING_INPUT,\n      lastMessage: 'None',\n      lastControlPassword: 'None',\n      eventOffset,\n      commandQueue: [],\n      coreState: Constants.CoreState.NOT_LOADED,\n    };\n  }\n\n  public componentWillMount() {\n    this.loadLSCore();\n\n    const { searchParams } = new URL(window.location.href)\n    const password = searchParams.get('password');\n    if (password) {\n      const serverUrl = searchParams.get('wsUrl') || Constants.DEFAULT_WEBSOCKS_URL;\n      this.onLogin(serverUrl, password);\n    }\n  }\n\n  public render() {\n    const showController =\n      this.state.socketStatus === Constants.Connection.CONNECTED &&\n      this.state.coreState === Constants.CoreState.LOADED;\n    if (!showController) {\n      const { searchParams } = new URL(window.location.href);\n\n      return (\n        <Login\n          onLogin={this.onLogin}\n          socketStatus={this.state.socketStatus}\n          coreState={this.state.coreState}\n          password={searchParams.get('password')}\n          serverUrl={searchParams.get('wsUrl')}\n        />\n      );\n    }\n\n    return (\n      <Controller\n        onLocalMessage={this.handleLocalMessage}\n        timer={this.state.timer!}\n        socketStatus={this.state.socketStatus}\n        timerStatus={this.state.timerStatus}\n        lastMessage={this.state.lastMessage}\n        lastControlPassword={this.state.lastControlPassword}\n        eventOffset={this.state.eventOffset}\n        commandQueue={this.state.commandQueue}\n      />\n    );\n  }\n\n  private async loadLSCore() {\n    if (this.state.coreState === Constants.CoreState.LOADED ||\n        this.state.coreState === Constants.CoreState.LOADING) {\n      return;\n    }\n\n    this.setState({ coreState: Constants.CoreState.LOADING });\n    try {\n      await LSCore.load(LSWASM);\n    } catch (err) {\n      this.setState({\n        coreState: Constants.CoreState.FAILED,\n        coreLoadFailure: err,\n      });\n      return;\n    }\n\n    const run = LSCore.Run.new();\n    run.setGameName('Game');\n    run.setCategoryName('Main Category');\n    run.pushSegment(LSCore.Segment.new('Time'));\n\n    this.setState({\n      timer: new TimerWrapper(run, this.onTimerPhaseUpdate),\n      coreState: Constants.CoreState.LOADED,\n    });\n  }\n\n  private onTimerPhaseUpdate = (phase: number) => {\n    this.setState({ timerStatus: phase });\n  }\n\n  private setupWebSockets(url: string, password: string) {\n    this.setState({ socketStatus: Constants.Connection.CONNECTING });\n    try {\n      this.webSocket = new WebSocket(url, 'rust-websocket');\n    } catch (e) {\n      this.setState({ socketStatus: Constants.Connection.CANNOT_CONNECT });\n      return;\n    }\n\n    this.webSocket.onopen = () => {\n      this.setState({ socketStatus: Constants.Connection.AUTHENTICATING });\n      this.webSocket!.send(password);\n    };\n    this.webSocket.onmessage = this.handleSocketMessage;\n    this.webSocket.onerror = () => {\n      if (this.state.socketStatus === Constants.Connection.CONNECTING) {\n        this.setState({ socketStatus: Constants.Connection.CANNOT_CONNECT });\n      }\n    };\n    this.webSocket.onclose = () => {\n      if (this.state.socketStatus === Constants.Connection.AUTHENTICATING) {\n        // The server has forcibly closed on us while authenticating,\n        // so we've probably given it an incorrect password.\n        this.setState({\n          socketStatus: Constants.Connection.WRONG_PASSWORD,\n        });\n        return;\n      } else if (this.state.socketStatus === Constants.Connection.CANNOT_CONNECT) {\n        return;\n      }\n\n      setTimeout(() => {\n        this.setupWebSockets(url, password);\n      }, 1000);\n    };\n  }\n\n  private sendHostCommand(command: string) {\n    if (this.state.socketStatus === Constants.Connection.CONNECTED) {\n      this.webSocket!.send(`host ${command}`);\n    }\n  }\n\n  private handleLocalMessage = (command: string) => {\n    if (!this.state.timer) {\n      return;\n    }\n\n    const timerFunc = this.state.timer.commandToFunc(command);\n    if (timerFunc) {\n      this.sendHostCommand(command);\n      timerFunc();\n    } else if (command === Constants.Commands.SET_OFFSET) {\n      const time = this.state.timer.timeInMilliseconds;\n      this.sendHostCommand(`${command} ${time}`);\n      this.setState({ eventOffset: time });\n    }\n  }\n\n  private handleSocketMessage = (msg: MessageEvent) => {\n    const tokens = (msg.data as string).trim().split(/\\s+/);\n    let offset = this.state.eventOffset;\n    if (tokens[0] === Constants.Commands.HOST_PREFIX) {\n      offset = 0;\n      tokens.shift();\n    }\n\n    const timerFunc = this.state.timer &&\n      this.state.timer.commandToFunc(tokens[0]);\n    if (timerFunc) {\n      const args = tokens.slice(1);\n\n      // Delay all timer functions.\n      if (offset > 0) {\n        const commandQueue = [...this.state.commandQueue];\n        commandQueue.push({\n          command: tokens[0],\n          time: (new Date()).getTime() + offset,\n        });\n        this.setState({ commandQueue });\n\n        setTimeout(() => {\n          timerFunc(...args);\n          const queue = [...this.state.commandQueue];\n          queue.shift();\n          this.setState({ commandQueue: queue });\n        }, offset);\n      } else {\n        timerFunc(...args);\n      }\n    } else {\n      // Non-timer functions do not get delayed.\n      switch (tokens[0]) {\n        case Constants.Commands.CONTROL_PASSWORD:\n          this.setState({\n            socketStatus: Constants.Connection.CONNECTED,\n          });\n          break;\n        case Constants.Commands.SET_OFFSET:\n          this.setState({ eventOffset: parseInt(tokens[1], 10) });\n          break;\n      }\n    }\n\n    const dtOptions = {\n      hour: 'numeric',\n      minute: 'numeric',\n      second: 'numeric',\n      hour12: false,\n      timeZoneName: 'short',\n    };\n    const timeString = new Intl.DateTimeFormat(undefined, dtOptions).format(new Date());\n    if (tokens[0] === Constants.Commands.CONTROL_PASSWORD) {\n      this.setState({ lastControlPassword: `“${tokens[1]}” at ${timeString}` });\n    } else {\n      this.setState({ lastMessage: `“${msg.data}” at ${timeString}` });\n    }\n  }\n\n  private onLogin = (serverUrl: string, password: string) => {\n    this.setupWebSockets(serverUrl, password);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/App.tsx","module.exports = __webpack_public_path__ + \"static/media/livesplit_core.f6a980b4.wasm\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/livesplit_core.wasm\n// module id = 26\n// module chunks = 0","import * as React from 'react';\nimport * as Constants from './Constants';\nimport AutoRefreshTimer from './AutoRefreshTimer';\nimport AutoIntervalUpdate from './AutoIntervalUpdate';\nimport TimerWrapper from './TimerWrapper';\nimport { ICommandItem } from './App';\n\nexport interface IProps {\n  onLocalMessage: (message: string) => void,\n  timer: TimerWrapper,\n  socketStatus: Constants.Connection,\n  timerStatus: Constants.TimerPhase,\n  lastMessage: string,\n  lastControlPassword: string,\n  eventOffset: number,\n  commandQueue: ICommandItem[],\n}\n\ninterface IState {\n  isControllerMode: boolean,\n  showDiagnosticTime: boolean,\n  timerFontScale: number,\n  timerFontColor: string,\n  timerTextAlign: string,\n}\n\nexport default class Controller extends React.Component<IProps, IState> {\n  private static initState(): IState {\n    const { searchParams } = new URL(window.location.href);\n    return {\n      isControllerMode: false,\n      showDiagnosticTime: true,\n      timerFontScale: parseFloat(searchParams.get('fontSizeScale') || '1'),\n      timerFontColor: searchParams.get('fontColor') || '',\n      timerTextAlign: searchParams.get('textAlign') || '',\n    };\n  }\n\n  public state = Controller.initState();\n\n  private hideDiagnosticTime?: NodeJS.Timer;\n\n  // TODO: migrate to getDerivedStateFromProps\n  public componentWillReceiveProps(nextProps: IProps) {\n    if (this.hideDiagnosticTime &&\n        nextProps.timerStatus !== Constants.TimerPhase.NOT_RUNNING) {\n      // The timer has started, so stop showing the diagnostic time at once.\n      clearTimeout(this.hideDiagnosticTime);\n      this.hideDiagnosticTime = undefined;\n      this.setState({ showDiagnosticTime: false });\n    }\n  }\n\n  public componentDidMount() {\n    this.hideDiagnosticTime = setTimeout(() => {\n      this.setState({ showDiagnosticTime: false });\n    }, 1500);\n  }\n\n  get eventOffsetString() {\n    return (this.props.eventOffset / 1000).toFixed(1);\n  }\n\n  get commandQueueString() {\n    if (!this.props.commandQueue.length) {\n      return 'None';\n    }\n\n    const currentTime = (new Date()).getTime();\n    return this.props.commandQueue.map((cmd) => {\n      const timeDiff = Math.floor((cmd.time - currentTime) / 1000);\n      return `${cmd.command} (${timeDiff})`;\n    }).join(', ');\n  }\n\n  public render() {\n    const connectionStatus = Constants.statusToString(this.props.socketStatus);\n    const statusColor = this.props.socketStatus === Constants.Connection.CONNECTED\n      ? '#fff' : '#e1d666';\n    const timerStatus = Constants.phaseToString(this.props.timerStatus);\n\n    const controlsStyle = {\n      display: this.state.isControllerMode ? 'block' : 'none',\n    };\n    const mainContainerStyle = {\n      background: this.state.isControllerMode ? '#000' : 'transparent',\n      display: this.state.isControllerMode ? 'block' : 'flex',\n      overflow: this.state.isControllerMode ? 'auto' : 'hidden',\n    };\n\n    return (\n      <div className=\"main-container\" style={mainContainerStyle}>\n        <AutoRefreshTimer\n          fontSizeScale={this.state.timerFontScale}\n          fontColor={this.state.timerFontColor}\n          textAlign={this.state.timerTextAlign}\n          onDoubleClick={this.onTimerDoubleClick}\n          getState={this.getTimerState}\n        />\n\n        <div style={controlsStyle}>\n          <table className=\"table-status\">\n            <tbody>\n              <tr>\n                <th>\n                  CONNECTION STATUS\n                </th>\n                <td style={{ color: statusColor }}>\n                  {connectionStatus}\n                </td>\n              </tr>\n              <tr>\n                <th>\n                  TIMER STATUS\n                </th>\n                <td>\n                  {timerStatus}\n                </td>\n              </tr>\n              <tr>\n                <th>\n                  COMMAND TIME OFFSET\n                </th>\n                <td>\n                  {this.eventOffsetString}&thinsp;s\n                </td>\n              </tr>\n              <tr>\n                <th>\n                  COMMAND QUEUE\n                </th>\n                <td>\n                  <AutoIntervalUpdate\n                    interval={500}\n                    enabled={!!this.props.commandQueue.length}\n                    render={this.renderCommandQueue}\n                  />\n                </td>\n              </tr>\n              <tr>\n                <th>\n                  LAST RECEIVED COMMAND\n                </th>\n                <td>\n                  {this.props.lastMessage}\n                </td>\n              </tr>\n              <tr>\n                <th>\n                  NEXT RUNNER PASSWORD\n                </th>\n                <td>\n                  {this.props.lastControlPassword}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n\n          <div className=\"main-panel-row-1\">\n            <button\n              name={Constants.Commands.START_TIMER}\n              className=\"btn-primary btn-main-panel\"\n              onClick={this.handleButtonClick}\n            >\n              START\n            </button>\n            <button\n              name={Constants.Commands.SPLIT}\n              className=\"btn-primary btn-main-panel\"\n              onClick={this.handleButtonClick}\n            >\n              SPLIT\n            </button>\n            <button\n              name={Constants.Commands.UNDO_SPLIT}\n              className=\"btn-primary btn-main-panel\"\n              onClick={this.handleButtonClick}\n            >\n              UNDO SPLIT\n            </button>\n          </div>\n          <div className=\"main-panel-row-2\">\n            <button\n              name={Constants.Commands.RESUME}\n              className=\"btn-primary btn-main-panel\"\n              onClick={this.handleButtonClick}\n            >\n              RESUME\n            </button>\n            <button\n              name={Constants.Commands.PAUSE}\n              className=\"btn-primary btn-main-panel\"\n              onClick={this.handleButtonClick}\n            >\n              PAUSE\n            </button>\n            <button\n              name={Constants.Commands.UNDO_ALL_PAUSES}\n              className=\"btn-primary btn-main-panel\"\n              onClick={this.handleButtonClick}\n            >\n              UNDO ALL PAUSES\n            </button>\n          </div>\n          <div>\n            <button\n              name={Constants.Commands.RESET}\n              className=\"btn-primary btn-danger-panel\"\n              onClick={this.handleButtonClick}\n            >\n              RESET\n            </button>\n            <button\n              name={Constants.Commands.SET_OFFSET}\n              className=\"btn-primary btn-danger-panel\"\n              onClick={this.handleButtonClick}\n            >\n              OFFSET\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  private renderCommandQueue = () => (\n    <span>\n      {this.commandQueueString}\n    </span>\n  )\n\n  private handleButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const command = (event.target as any).name;\n    this.props.onLocalMessage(command);\n  }\n\n  private onTimerDoubleClick = () => {\n    this.setState({ isControllerMode: !this.state.isControllerMode });\n  }\n\n  private getTimerState = () => {\n    return this.state.showDiagnosticTime\n      ? this.props.timer.diagnosticTime\n      : this.props.timer.time;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Controller.tsx","import * as React from 'react';\n\nexport interface IProps {\n  fontSizeScale: number,\n  fontColor: string,\n  textAlign: string,\n  getState: () => any,\n  onDoubleClick: () => void,\n}\n\ninterface IState {\n  timerFraction: string,\n  timerTime: string,\n  timerContainerStyle: React.CSSProperties,\n  timeStyle: React.CSSProperties,\n  fractionStyle: React.CSSProperties,\n}\n\nexport default class AutoRefreshTimer extends React.Component<IProps, IState> {\n  private static getTimerStyles(fontSizeScale: number, fontColor: string) {\n    let timeFontSize = 64;\n    let fractionFontSize = 36;\n    if (fontSizeScale && !Number.isNaN(fontSizeScale) && fontSizeScale > 0) {\n      timeFontSize *= fontSizeScale;\n      fractionFontSize *= fontSizeScale;\n    }\n    const color = `#${fontColor || 'ea7500'}`;\n    const timeStyle = { fontSize: `${timeFontSize}pt`, color };\n    const fractionStyle = { fontSize: `${fractionFontSize}pt`, color };\n    return { timeStyle, fractionStyle };\n  }\n\n  public state = {\n    timerFraction: '',\n    timerTime: '',\n    ...AutoRefreshTimer.getTimerStyles(\n      this.props.fontSizeScale, this.props.fontColor,\n    ),\n    timerContainerStyle: this.timerContainerStyle,\n  };\n\n  public componentWillReceiveProps(nextProps: IProps) {\n    this.setState({\n      ...AutoRefreshTimer.getTimerStyles(\n        nextProps.fontSizeScale, nextProps.fontColor,\n      ),\n    });\n  }\n\n  public componentWillMount() {\n    this.runUpdate();\n  }\n\n  get timerContainerStyle() {\n    let justifyContent = 'center';\n    if (this.props.textAlign === 'left') {\n      justifyContent = 'flex-start';\n    } else if (this.props.textAlign === 'right') {\n      justifyContent = 'flex-end';\n    }\n    const margin = justifyContent === 'center' ? 'auto' : 0;\n    return { justifyContent, marginLeft: margin, marginRight: margin };\n  }\n\n  public render() {\n    const {\n      timeStyle, timerTime, fractionStyle, timerFraction, timerContainerStyle,\n    } = this.state;\n    return (\n      <div\n        className=\"container-timer\"\n        style={timerContainerStyle}\n        onDoubleClick={this.props.onDoubleClick}\n      >\n        <div>\n          <span className=\"timer-time\" style={timeStyle}>\n            {timerTime}\n          </span>\n          <span className=\"timer-fraction\" style={fractionStyle}>\n            {timerFraction}\n          </span>\n        </div>\n      </div>\n    );\n  }\n\n  private updateTimer() {\n    const timerState = this.props.getState();\n    this.setState({\n      timerFraction: timerState.fraction,\n      timerTime: timerState.time,\n    });\n  }\n\n  private runUpdate = () => {\n    this.updateTimer();\n    requestAnimationFrame(this.runUpdate);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/AutoRefreshTimer.tsx","import * as React from 'react';\n\nexport interface IProps {\n  enabled: boolean,\n  interval: number,\n  render: () => JSX.Element,\n}\n\ninterface IState {\n  tick: number,\n}\n\nexport default class AutoIntervalUpdate extends React.Component<IProps, IState> {\n  public state = {\n    tick: 0,\n  };\n\n  private interval?: NodeJS.Timer;\n\n  public componentWillReceiveProps(nextProps: IProps) {\n    if (nextProps.enabled) {\n      this.startInterval();\n    } else {\n      this.stopInterval();\n    }\n  }\n\n  public componentDidMount() {\n    if (this.props.enabled) {\n      this.startInterval();\n    } else {\n      this.interval = undefined;\n    }\n  }\n\n  public render() {\n    return this.props.render();\n  }\n\n  private startInterval() {\n    if (!this.interval) {\n      this.setState({ tick: this.state.tick + 1 });\n      this.interval = setInterval(() => {\n        this.setState({ tick: this.state.tick + 1 });\n      }, this.props.interval);\n    }\n  }\n\n  private stopInterval() {\n    if (this.interval) {\n      clearInterval(this.interval);\n      this.interval = undefined;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/AutoIntervalUpdate.tsx","import * as React from 'react';\nimport * as Constants from './Constants';\n\nexport interface IProps {\n  password?: string | null,\n  serverUrl?: string | null,\n  socketStatus: Constants.Connection,\n  coreState: Constants.CoreState,\n  onLogin: (serverUrl: string, password: string) => void,\n}\n\ninterface IState {\n  password: string,\n  serverUrl: string,\n}\n\nexport default class Login extends React.Component<IProps, IState> {\n  public static defaultProps = {\n    socketStatus: Constants.Connection.PENDING_INPUT,\n  };\n\n  public state = {\n    password: this.props.password || '',\n    serverUrl: this.props.serverUrl || Constants.DEFAULT_WEBSOCKS_URL,\n  };\n\n  public render() {\n    const statusText = Constants.statusToString(this.props.socketStatus);\n    const coreStateText = Constants.coreStateToString(this.props.coreState);\n    const inputDisabled =\n      this.props.socketStatus !== Constants.Connection.PENDING_INPUT &&\n      this.props.socketStatus !== Constants.Connection.WRONG_PASSWORD &&\n      this.props.socketStatus !== Constants.Connection.CANNOT_CONNECT;\n\n    return (\n      <div className=\"login-container\">\n        <form className=\"login-form\" onSubmit={this.onLogin}>\n          <div className=\"login-password-label\">\n            SERVER\n          </div>\n          <input\n            autoFocus={true}\n            disabled={inputDisabled}\n            className=\"login-text-input login-server-input\"\n            spellCheck={false}\n            value={this.state.serverUrl}\n            onFocus={this.handleSelectAll}\n            onChange={this.handleServerChange}\n            onBlur={this.handleServerBlur}\n          />\n          <div className=\"login-password-label\">\n            PASSWORD\n          </div>\n          <input\n            autoFocus={true}\n            disabled={inputDisabled}\n            className=\"login-text-input\"\n            type=\"password\"\n            value={this.state.password}\n            onFocus={this.handleSelectAll}\n            onChange={this.handlePasswordChange}\n          />\n          <div className=\"login-status-text\">\n            {statusText}\n          </div>\n          <div className=\"login-wasm-text\">\n            {coreStateText}\n          </div>\n          <button\n            disabled={!this.state.password.length || inputDisabled}\n            className=\"btn-primary\"\n            onClick={this.onLogin}\n          >\n            LOGIN\n          </button>\n          <div className=\"login-help-note\">\n            Add the ?password=&lt;PASSWORD&gt; query parameter to the URL to\n            authenticate automatically. Never show the resulting URL publicly\n            or you will expose that password.\n            Click <a href=\"https://github.com/Matherunner/livesplitcontrol\">here</a> for\n            more.\n          </div>\n        </form>\n      </div>\n    );\n  }\n\n  private handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ password: event.target.value });\n  }\n\n  private handleServerChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ serverUrl: event.target.value })\n  }\n\n  private handleServerBlur = (event: React.FocusEvent) => {\n    this.setState({ serverUrl: this.state.serverUrl.trim() });\n  }\n\n  private handleSelectAll = (event: React.FocusEvent) => {\n    (event.target as HTMLInputElement).select();\n  }\n\n  private onLogin = (event: React.FormEvent) => {\n    this.props.onLogin(this.state.serverUrl, this.state.password);\n    event.preventDefault();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Login.tsx","import * as LSCore from './livesplit';\nimport * as Constants from './Constants';\n\nexport default class TimerWrapper {\n  private timer: LSCore.Timer | null;\n  private layout: LSCore.Layout | null;\n  private onPhaseUpdate: (phase: Constants.TimerPhase) => void;\n\n  constructor(run: LSCore.Run, onPhaseUpdate: any) {\n    this.timer = LSCore.Timer.new(run);\n    this.layout = LSCore.Layout.new();\n    this.layout.push(LSCore.TimerComponent.new().intoGeneric());\n    this.onPhaseUpdate = onPhaseUpdate;\n  }\n\n  get currentPhase() {\n    return this.timer!.currentPhase();\n  }\n\n  get time() {\n    const states = this.layout!.stateAsJson(this.timer!);\n    const timerState = states.components.find((state: any) => state.hasOwnProperty('Timer')).Timer;\n    return { time: timerState.time, fraction: timerState.fraction };\n  }\n\n  get diagnosticTime() {\n    return { time: '9:59:59', fraction: '.99' };\n  }\n\n  get timeInMilliseconds() {\n    const time = this.time;\n    let milliseconds = parseInt(time.fraction.slice(1), 10) * 10;\n    const tokens = time.time.split(':').map((token: string) => parseInt(token, 10));\n    tokens.reverse();\n    switch (tokens.length) {\n      case 3:\n        milliseconds += tokens[2] * 3600000;\n        milliseconds += tokens[1] * 60000;\n        milliseconds += tokens[0] * 1000;\n        break;\n      case 2:\n        milliseconds += tokens[1] * 60000;\n        milliseconds += tokens[0] * 1000;\n        break;\n      case 1:\n        milliseconds += tokens[0] * 1000;\n        break;\n      default:\n    }\n    return milliseconds;\n  }\n\n  public commandToFunc(command: string) {\n    switch (command) {\n      case Constants.Commands.START_TIMER:\n        return this.start.bind(this);\n      case Constants.Commands.RESUME:\n        return this.resume.bind(this);\n      case Constants.Commands.PAUSE:\n        return this.pause.bind(this);\n      case Constants.Commands.RESET:\n        return this.reset.bind(this);\n      case Constants.Commands.SPLIT:\n        return this.split.bind(this);\n      case Constants.Commands.UNDO_SPLIT:\n        return this.undoSplit.bind(this);\n      case Constants.Commands.UNDO_ALL_PAUSES:\n        return this.undoAllPauses.bind(this);\n      case Constants.Commands.RUN_OFFSET:\n        return this.setRunOffset.bind(this);\n      default:\n        return null;\n    }\n  }\n\n  public start() {\n    this.timer!.start();\n    this.callPhaseUpdate();\n  }\n\n  public split() {\n    this.timer!.split();\n    this.callPhaseUpdate();\n  }\n\n  public resume() {\n    this.timer!.resume();\n    this.callPhaseUpdate();\n  }\n\n  public pause() {\n    this.timer!.pause();\n    this.callPhaseUpdate();\n  }\n\n  public reset() {\n    this.timer!.reset(true);\n    this.setRunOffset('0');\n    this.callPhaseUpdate();\n  }\n\n  public undoSplit() {\n    this.timer!.undoSplit();\n    this.callPhaseUpdate();\n  }\n\n  public undoAllPauses() {\n    this.timer!.undoAllPauses();\n    this.callPhaseUpdate();\n  }\n\n  public setRunOffset(offset: string) {\n    if (this.currentPhase === Constants.TimerPhase.NOT_RUNNING) {\n      const numOffset = parseInt(offset, 10);\n      const strOffset = (numOffset / 1000).toFixed(2);\n      const editor = LSCore.RunEditor.new(this.timer!.getRun().clone());\n      editor!.parseAndSetOffset(strOffset);\n      this.timer = LSCore.Timer.new(editor!.close());\n    }\n  }\n\n  private callPhaseUpdate() {\n    if (this.onPhaseUpdate) {\n      this.onPhaseUpdate(this.currentPhase);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/TimerWrapper.ts","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/registerServiceWorker.ts"],"sourceRoot":""}